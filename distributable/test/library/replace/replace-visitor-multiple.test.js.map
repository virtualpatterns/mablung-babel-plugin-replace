{"version":3,"sources":["../../../../source/test/library/replace/replace-visitor-multiple.test.js"],"names":["Test","beforeEach","test","context","codeIn","option","require","resolve","code","actualCodeOut","Babel","transformAsync","expectedCodeOut","is"],"mappings":";;AAAA;;AACA;;;;;;;;AAEAA,aAAKC,UAAL,CAAiBC,IAAD,IAAU;AAExBA,EAAAA,IAAI,CAACC,OAAL,CAAaC,MAAb,GAAsB,wDAAtB;AACAF,EAAAA,IAAI,CAACC,OAAL,CAAaE,MAAb,GAAsB;AACpB,eAAW,CACT,CACEC,OAAO,CAACC,OAAR,CAAgB,mBAAhB,CADF,EAEE;AACE,cAAQ,CACN;AACE,qBAAa,YADf;AAEE,uBAAe,mDAFjB;AAGE,wBAAgB;AACd,qBAAW,CAAE,YAAF,CADG;AAEd,wBAAc;AAFA,SAHlB;AAOE,qBAAa,CACX;AACE,kBAAQ,SADV;AAEE,oBAAU,KAFZ;AAGE,oBAAU;AACR,wBAAY;AADJ;AAHZ,SADW;AAPf,OADM,EAkBN;AACE,qBAAa,WADf;AAEE,uBAAe,qCAFjB;AAGE,wBAAgB;AACd,qBAAW,CAAE,YAAF,CADG;AAEd,wBAAc;AAFA,SAHlB;AAOE,qBAAa,CACX;AACE,kBAAQ,OADV;AAEE,kBAAQ,eAFV;AAGE,oBAAU;AAHZ,SADW;AAPf,OAlBM;AADV,KAFF,CADS;AADS,GAAtB;AA4CD,CA/CD;;AAiDA,kBAAK,sHAAL,EAA6H,MAAOL,IAAP,IAAgB;AAE3I,MAAI;AAAEM,IAAAA,IAAI,EAAEC;AAAR,MAA0B,MAAMC,KAAK,CAACC,cAAN,CAAqBT,IAAI,CAACC,OAAL,CAAaC,MAAlC,EAA0CF,IAAI,CAACC,OAAL,CAAaE,MAAvD,CAApC;AACA,MAAIO,eAAe,GAAG,iMAAtB;AAEAV,EAAAA,IAAI,CAACW,EAAL,CAAQJ,aAAR,EAAuBG,eAAvB;AAED,CAPD","sourcesContent":["import * as Babel from '@babel/core'\nimport Test from 'ava'\n\nTest.beforeEach((test) => {\n\n  test.context.codeIn = 'const FilePath = __filePath\\nconst Require = __require'\n  test.context.option = { \n    'plugins': [ \n      [\n        require.resolve('../../../index.js'),\n        {\n          'rule': [\n            {\n              'searchFor': '__filePath',\n              'replaceWith': '__importIdentifier.fileURLToPath(import.meta.url)',\n              'parserOption': { \n                'plugins': [ 'importMeta' ], \n                'sourceType': 'module' \n              },\n              'addImport': [\n                {\n                  'type': 'default',\n                  'source': 'url',\n                  'option': {\n                    'nameHint': 'URL'\n                  }\n                }\n              ]\n            },\n            {\n              'searchFor': '__require',\n              'replaceWith': '__importIdentifier(import.meta.url)',\n              'parserOption': { \n                'plugins': [ 'importMeta' ], \n                'sourceType': 'module' \n              },\n              'addImport': [\n                {\n                  'type': 'named',\n                  'name': 'createRequire',\n                  'source': 'module'\n                }\n              ]\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('rule.replaceWith = \\'__importIdentifier.fileURLToPath(import.meta.url)\\' and \\'__importIdentifier(import.meta.url)\\'', async (test) => {\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import { createRequire as _createRequire } from \"module\";\\nimport _URL from \"url\";\\n\\nconst FilePath = _URL.fileURLToPath(import.meta.url);\\n\\nconst Require = _createRequire(import.meta.url);'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n"],"file":"replace-visitor-multiple.test.js"}