{"version":3,"sources":["../../../../source/test/library/replace/replace-visitor.test.js"],"names":["Test","beforeEach","test","context","codeIn","option","require","resolve","plugins","rule","replaceWith","code","actualCodeOut","Babel","transformAsync","expectedCodeOut","is","addImport","push","promise","throwsAsync","ReplaceVisitorInvalidImportTypeError"],"mappings":"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","sourcesContent":["import * as Babel from '@babel/core'\nimport Test from 'ava'\n\nimport { ReplaceVisitorInvalidImportTypeError } from '../../../library/replace/error/replace-visitor-invalid-import-type-error.js'\n\nTest.beforeEach((test) => {\n\n  test.context.codeIn = 'console.log(__require.resolve(\\'./index.js\\'))'\n  test.context.option = { \n    'plugins': [ \n      [\n        require.resolve('../../../index.js'),\n        {\n          'rule': [\n            {\n              'searchFor': '__require',\n              'replaceWith': '...',\n              'parserOption': { \n                'plugins': [ 'importMeta' ], \n                'sourceType': 'module' \n              },\n              'addImport': []\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('rule.replaceWith = \\'createRequire(import.meta.url)\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = 'createRequire(import.meta.url)'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'console.log(createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'named\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'named',\n    'name': 'createRequire',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import { createRequire as _createRequire } from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'namespace\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'namespace',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import * as _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'sideEffect\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'sideEffect',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import \"module\";\\nconsole.log(__importIdentifier(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: invalid', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': '_sideEffect',\n    'source': 'module'\n  })\n\n  let promise = Babel.transformAsync(test.context.codeIn, test.context.option)\n\n  await test.throwsAsync(promise, { 'instanceOf': ReplaceVisitorInvalidImportTypeError })\n\n})\n\n"],"file":"replace-visitor.test.js"}