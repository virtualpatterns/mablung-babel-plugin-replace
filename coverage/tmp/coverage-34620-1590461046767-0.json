{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"uncurryThis","ranges":[{"startOffset":1000,"endOffset":1096,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1093,"count":5535}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10110,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3556,"endOffset":3953,"count":1},{"startOffset":3846,"endOffset":3952,"count":0}],"isBlockCoverage":true},{"functionName":"_linkedBinding","ranges":[{"startOffset":3983,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4371,"endOffset":4618,"count":617},{"startOffset":4473,"endOffset":4598,"count":43}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4763,"endOffset":4917,"count":2282},{"startOffset":4899,"endOffset":4914,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5284,"endOffset":5355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5319,"endOffset":5353,"count":220}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5360,"endOffset":6096,"count":220}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6246,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6483,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6547,"endOffset":6663,"count":1385},{"startOffset":6631,"endOffset":6658,"count":61}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6735,"endOffset":7413,"count":61},{"startOffset":6798,"endOffset":6990,"count":0},{"startOffset":7054,"endOffset":7335,"count":14},{"startOffset":7297,"endOffset":7301,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7417,"endOffset":7968,"count":61},{"startOffset":7455,"endOffset":7474,"count":47},{"startOffset":7474,"endOffset":7967,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7695,"endOffset":7808,"count":14}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8264,"endOffset":8608,"count":75},{"startOffset":8383,"endOffset":8598,"count":2282},{"startOffset":8460,"endOffset":8469,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8612,"endOffset":9166,"count":1022},{"startOffset":8661,"endOffset":8676,"count":110},{"startOffset":8678,"endOffset":8712,"count":915},{"startOffset":8712,"endOffset":8835,"count":107},{"startOffset":8835,"endOffset":8870,"count":0},{"startOffset":8871,"endOffset":8892,"count":107},{"startOffset":9046,"endOffset":9165,"count":107}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9364,"endOffset":9735,"count":967},{"startOffset":9422,"endOffset":9453,"count":6},{"startOffset":9453,"endOffset":9637,"count":961},{"startOffset":9637,"endOffset":9692,"count":0},{"startOffset":9692,"endOffset":9734,"count":961}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":9851,"endOffset":10023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12506,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3307,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6068,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6332,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9291,"endOffset":9877,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":9879,"endOffset":10466,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10468,"endOffset":10645,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10647,"endOffset":11083,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11085,"endOffset":11766,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":11818,"endOffset":12016,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12068,"endOffset":12266,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12326,"endOffset":12505,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52384,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1407,"endOffset":2119,"count":25},{"startOffset":1584,"endOffset":1700,"count":0},{"startOffset":1849,"endOffset":2118,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":2161,"endOffset":2867,"count":25},{"startOffset":2495,"endOffset":2866,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":2957,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":3117,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":3293,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":3904,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6446,"endOffset":6521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":6718,"endOffset":6863,"count":3}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6809,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6865,"endOffset":7620,"count":227}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6953,"endOffset":7534,"count":25},{"startOffset":7043,"endOffset":7252,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7540,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7692,"endOffset":8103,"count":25}],"isBlockCoverage":true},{"functionName":"hidden","ranges":[{"startOffset":7732,"endOffset":8100,"count":7458},{"startOffset":7896,"endOffset":7960,"count":5884},{"startOffset":8044,"endOffset":8090,"count":5884}],"isBlockCoverage":true},{"functionName":"addCodeToName","ranges":[{"startOffset":8105,"endOffset":8775,"count":25},{"startOffset":8203,"endOffset":8312,"count":0},{"startOffset":8597,"endOffset":8741,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":8887,"endOffset":9395,"count":227},{"startOffset":9129,"endOffset":9174,"count":3},{"startOffset":9174,"endOffset":9228,"count":224},{"startOffset":9263,"endOffset":9373,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9290,"endOffset":9367,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":9397,"endOffset":10201,"count":25},{"startOffset":9498,"endOffset":9534,"count":1},{"startOffset":9825,"endOffset":9883,"count":0},{"startOffset":10105,"endOffset":10200,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":10219,"endOffset":10323,"count":0}],"isBlockCoverage":false},{"functionName":"uvErrmapGet","ranges":[{"startOffset":10380,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"uvException","ranges":[{"startOffset":10843,"endOffset":12093,"count":0}],"isBlockCoverage":false},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":12406,"endOffset":13365,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":13544,"endOffset":14303,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":14656,"endOffset":15926,"count":0}],"isBlockCoverage":false},{"functionName":"dnsException","ranges":[{"startOffset":16090,"endOffset":17659,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":17661,"endOffset":17816,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":18106,"endOffset":18484,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":18565,"endOffset":18801,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":19080,"endOffset":19471,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":19475,"endOffset":19940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21707,"endOffset":21871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24699,"endOffset":24814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24944,"endOffset":25038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27263,"endOffset":27491,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29224,"endOffset":29442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30984,"endOffset":31284,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31326,"endOffset":31470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31513,"endOffset":34718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34759,"endOffset":35015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35407,"endOffset":35570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36232,"endOffset":36749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36790,"endOffset":36871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37034,"endOffset":37238,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37282,"endOffset":38705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39083,"endOffset":39247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39300,"endOffset":39631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39675,"endOffset":39982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40352,"endOffset":40427,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40471,"endOffset":40759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41087,"endOffset":41518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42168,"endOffset":42691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42956,"endOffset":43057,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43759,"endOffset":44457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44507,"endOffset":44922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44955,"endOffset":45855,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47704,"endOffset":47873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49675,"endOffset":49806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51441,"endOffset":51539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51733,"endOffset":51989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12301,"count":1}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":975,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1046,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":1581,"endOffset":2678,"count":30},{"startOffset":1655,"endOffset":1675,"count":0},{"startOffset":1735,"endOffset":1790,"count":0},{"startOffset":2432,"endOffset":2654,"count":28}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":1816,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":2680,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3021,"endOffset":3095,"count":1},{"startOffset":3067,"endOffset":3093,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":3274,"endOffset":3405,"count":493},{"startOffset":3344,"endOffset":3362,"count":0},{"startOffset":3378,"endOffset":3404,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":3407,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":4989,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":5279,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":5589,"endOffset":5732,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5640,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":5997,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":6391,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":6671,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":6980,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7328,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":7602,"endOffset":9073,"count":4},{"startOffset":7675,"endOffset":7740,"count":0},{"startOffset":7784,"endOffset":8105,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":8305,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":9168,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":9631,"endOffset":9758,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9840,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":11014,"endOffset":11172,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":11195,"endOffset":11410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21427,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1823,"endOffset":1892,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2203,"endOffset":2259,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2263,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3050,"endOffset":3200,"count":14},{"startOffset":3123,"endOffset":3198,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3289,"endOffset":3337,"count":6}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3346,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":3647,"endOffset":4377,"count":7},{"startOffset":3698,"endOffset":3758,"count":2},{"startOffset":3760,"endOffset":3831,"count":5},{"startOffset":3902,"endOffset":3927,"count":4},{"startOffset":3929,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":4380,"endOffset":4939,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":4941,"endOffset":5599,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":5770,"endOffset":5969,"count":1},{"startOffset":5856,"endOffset":5926,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":5972,"endOffset":6121,"count":3},{"startOffset":6090,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":6164,"endOffset":6227,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":6355,"endOffset":6931,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":6933,"endOffset":7539,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7571,"endOffset":9917,"count":15},{"startOffset":7716,"endOffset":7754,"count":0},{"startOffset":7762,"endOffset":7796,"count":0},{"startOffset":7820,"endOffset":7849,"count":0},{"startOffset":7855,"endOffset":7892,"count":0},{"startOffset":7964,"endOffset":8954,"count":0},{"startOffset":9022,"endOffset":9035,"count":2},{"startOffset":9035,"endOffset":9074,"count":13},{"startOffset":9074,"endOffset":9363,"count":5},{"startOffset":9290,"endOffset":9308,"count":0},{"startOffset":9310,"endOffset":9359,"count":0},{"startOffset":9363,"endOffset":9899,"count":8},{"startOffset":9485,"endOffset":9895,"count":16},{"startOffset":9816,"endOffset":9834,"count":0},{"startOffset":9836,"endOffset":9889,"count":0},{"startOffset":9899,"endOffset":9916,"count":13}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":9920,"endOffset":11975,"count":13},{"startOffset":10100,"endOffset":10184,"count":0},{"startOffset":10369,"endOffset":10649,"count":10},{"startOffset":10446,"endOffset":10465,"count":0},{"startOffset":10714,"endOffset":10852,"count":10},{"startOffset":10852,"endOffset":11955,"count":3},{"startOffset":11011,"endOffset":11033,"count":0},{"startOffset":11116,"endOffset":11220,"count":0},{"startOffset":11324,"endOffset":11343,"count":0},{"startOffset":11345,"endOffset":11951,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":12014,"endOffset":12106,"count":13}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":12219,"endOffset":12322,"count":0}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":12325,"endOffset":12589,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":12591,"endOffset":12832,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12864,"endOffset":12990,"count":0}],"isBlockCoverage":false},{"functionName":"prependOnceListener","ranges":[{"startOffset":13042,"endOffset":13212,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":13334,"endOffset":14726,"count":1},{"startOffset":13512,"endOffset":13524,"count":0},{"startOffset":13597,"endOffset":13609,"count":0},{"startOffset":13639,"endOffset":13668,"count":0},{"startOffset":13721,"endOffset":13755,"count":0},{"startOffset":13930,"endOffset":14700,"count":0}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":14846,"endOffset":16172,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":16175,"endOffset":16589,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":16626,"endOffset":16693,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":16734,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":16837,"endOffset":17018,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":17075,"endOffset":17365,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":17403,"endOffset":17496,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":17499,"endOffset":17626,"count":8},{"startOffset":17592,"endOffset":17609,"count":16}],"isBlockCoverage":true},{"functionName":"unwrapListeners","ranges":[{"startOffset":17628,"endOffset":17797,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":17799,"endOffset":18963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19041,"endOffset":19062,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":19077,"endOffset":19145,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19147,"endOffset":21426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68381,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2592,"endOffset":2628,"count":60}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":2719,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":5748,"endOffset":6183,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":6478,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8487,"endOffset":8532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8536,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":10480,"endOffset":10722,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10575,"endOffset":10615,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10621,"endOffset":10667,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":11732,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":11909,"endOffset":11941,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":12054,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":13682,"endOffset":13917,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":13919,"endOffset":13965,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":14044,"endOffset":14091,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":14093,"endOffset":15306,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":15493,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":17332,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":17736,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":18680,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":18945,"endOffset":19394,"count":0}],"isBlockCoverage":false},{"functionName":"findTypedConstructor","ranges":[{"startOffset":19396,"endOffset":19919,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":20101,"endOffset":22507,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":22509,"endOffset":32865,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":32867,"endOffset":33049,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":33051,"endOffset":34225,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":34227,"endOffset":34823,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":34825,"endOffset":37946,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":37948,"endOffset":42199,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":42201,"endOffset":42553,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":42555,"endOffset":42732,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":42734,"endOffset":42806,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":42808,"endOffset":43991,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":43993,"endOffset":45141,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":45188,"endOffset":46395,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":46397,"endOffset":46997,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":46999,"endOffset":47593,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":47595,"endOffset":48611,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":48613,"endOffset":48845,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":48847,"endOffset":49145,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":49147,"endOffset":49960,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":49962,"endOffset":51284,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":51286,"endOffset":51378,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":51380,"endOffset":51537,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":51539,"endOffset":51696,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":51698,"endOffset":52089,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":52091,"endOffset":52556,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":52558,"endOffset":54824,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":54826,"endOffset":55768,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":55770,"endOffset":58520,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":58522,"endOffset":59541,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":59566,"endOffset":59605,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":59635,"endOffset":60104,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":60106,"endOffset":60190,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":60192,"endOffset":60470,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":60472,"endOffset":64166,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStringForGetStringWidth","ranges":[{"startOffset":64168,"endOffset":64347,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":64776,"endOffset":65306,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":65421,"endOffset":65797,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":65965,"endOffset":67573,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":67607,"endOffset":68081,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":68171,"endOffset":68245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1893,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":496,"endOffset":590,"count":1078}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":592,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":702,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":800,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":898,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":992,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":1088,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1184,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1284,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1384,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1486,"endOffset":1588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":503},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35607,"count":1}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":3918,"endOffset":4054,"count":137}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4056,"endOffset":4258,"count":54}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4274,"endOffset":4396,"count":414},{"startOffset":4348,"endOffset":4394,"count":359}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4700,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5382,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5602,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6869,"endOffset":7473,"count":0}],"isBlockCoverage":false},{"functionName":"Buffer","ranges":[{"startOffset":8049,"endOffset":8382,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8475,"endOffset":8503,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8760,"endOffset":9724,"count":11},{"startOffset":8846,"endOffset":8889,"count":5},{"startOffset":8889,"endOffset":8940,"count":6},{"startOffset":8942,"endOffset":9579,"count":6},{"startOffset":9039,"endOffset":9093,"count":0},{"startOffset":9119,"endOffset":9147,"count":0},{"startOffset":9148,"endOffset":9219,"count":0},{"startOffset":9221,"endOffset":9575,"count":0},{"startOffset":9579,"endOffset":9723,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10095,"endOffset":10247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10536,"endOffset":10757,"count":494},{"startOffset":10580,"endOffset":10645,"count":0},{"startOffset":10688,"endOffset":10755,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10860,"endOffset":11105,"count":2},{"startOffset":10944,"endOffset":10957,"count":0},{"startOffset":10958,"endOffset":10969,"count":0},{"startOffset":10971,"endOffset":11072,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11284,"endOffset":11359,"count":492}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11600,"endOffset":11689,"count":0}],"isBlockCoverage":false},{"functionName":"SlowBuffer","ranges":[{"startOffset":11785,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":11990,"endOffset":12322,"count":492},{"startOffset":12033,"endOffset":12067,"count":0},{"startOffset":12106,"endOffset":12285,"count":409},{"startOffset":12154,"endOffset":12167,"count":53},{"startOffset":12285,"endOffset":12321,"count":83}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12324,"endOffset":12870,"count":5},{"startOffset":12450,"endOffset":12499,"count":0},{"startOffset":12545,"endOffset":12558,"count":0},{"startOffset":12691,"endOffset":12817,"count":0}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12872,"endOffset":13325,"count":5},{"startOffset":12958,"endOffset":12982,"count":3},{"startOffset":12984,"endOffset":13103,"count":2},{"startOffset":13021,"endOffset":13045,"count":0},{"startOffset":13103,"endOffset":13285,"count":3},{"startOffset":13180,"endOffset":13221,"count":0},{"startOffset":13257,"endOffset":13281,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13327,"endOffset":14024,"count":6},{"startOffset":13471,"endOffset":13567,"count":0},{"startOffset":13644,"endOffset":13689,"count":0},{"startOffset":13748,"endOffset":13971,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":14026,"endOffset":14400,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":14402,"endOffset":14708,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":14747,"endOffset":14801,"count":51}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":14821,"endOffset":15146,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15169,"endOffset":15320,"count":492}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15386,"endOffset":16593,"count":0}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":16596,"endOffset":16832,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16967,"endOffset":17031,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17044,"endOffset":17090,"count":492}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17105,"endOffset":17201,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17294,"endOffset":17323,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17336,"endOffset":17400,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17413,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17474,"endOffset":17573,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17672,"endOffset":17701,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17714,"endOffset":17778,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17791,"endOffset":17837,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17852,"endOffset":17951,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18047,"endOffset":18072,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18085,"endOffset":18151,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18164,"endOffset":18212,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18227,"endOffset":18325,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18418,"endOffset":18443,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18456,"endOffset":18521,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18534,"endOffset":18581,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18596,"endOffset":18808,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18904,"endOffset":18955,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18968,"endOffset":19034,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19047,"endOffset":19095,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19110,"endOffset":19324,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19411,"endOffset":19442,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19455,"endOffset":19518,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19531,"endOffset":19576,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19591,"endOffset":19799,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":19807,"endOffset":21362,"count":495},{"startOffset":19894,"endOffset":20179,"count":492},{"startOffset":19957,"endOffset":20179,"count":0},{"startOffset":20184,"endOffset":20589,"count":3},{"startOffset":20224,"endOffset":20248,"count":0},{"startOffset":20306,"endOffset":20589,"count":0},{"startOffset":20594,"endOffset":20724,"count":0},{"startOffset":20729,"endOffset":20861,"count":0},{"startOffset":20866,"endOffset":21233,"count":0},{"startOffset":21238,"endOffset":21356,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21364,"endOffset":22021,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22161,"endOffset":22255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22333,"endOffset":22431,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":22463,"endOffset":22596,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22877,"endOffset":23456,"count":492},{"startOffset":22949,"endOffset":22997,"count":0},{"startOffset":23049,"endOffset":23059,"count":0},{"startOffset":23089,"endOffset":23099,"count":0},{"startOffset":23148,"endOffset":23160,"count":0},{"startOffset":23176,"endOffset":23197,"count":0},{"startOffset":23223,"endOffset":23233,"count":0},{"startOffset":23269,"endOffset":23303,"count":0},{"startOffset":23374,"endOffset":23415,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":23485,"endOffset":23839,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":23967,"endOffset":24962,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":25058,"endOffset":26209,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":26637,"endOffset":27944,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":27973,"endOffset":28090,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":28124,"endOffset":28246,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":28277,"endOffset":28382,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":28560,"endOffset":28659,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":28662,"endOffset":30572,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":30599,"endOffset":31612,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":31641,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":31878,"endOffset":32312,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":32339,"endOffset":32639,"count":0}],"isBlockCoverage":false},{"functionName":"swap","ranges":[{"startOffset":32642,"endOffset":32713,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":32741,"endOffset":33145,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":33174,"endOffset":33618,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":33647,"endOffset":34155,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":34468,"endOffset":35208,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35520,"endOffset":35555,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35561,"endOffset":35598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"18","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6349,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":526,"endOffset":585,"count":986}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":587,"endOffset":649,"count":1908}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1271,"endOffset":1746,"count":492},{"startOffset":1334,"endOffset":1354,"count":0},{"startOffset":1356,"endOffset":1377,"count":0},{"startOffset":1425,"endOffset":1745,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1791,"endOffset":2172,"count":492},{"startOffset":1911,"endOffset":1965,"count":0},{"startOffset":2005,"endOffset":2059,"count":0},{"startOffset":2102,"endOffset":2168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2799,"count":986},{"startOffset":2380,"endOffset":2678,"count":0},{"startOffset":2715,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2843,"endOffset":3353,"count":924},{"startOffset":2896,"endOffset":3245,"count":0},{"startOffset":3261,"endOffset":3275,"count":0},{"startOffset":3277,"endOffset":3351,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":3357,"endOffset":3489,"count":18535},{"startOffset":3433,"endOffset":3487,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3491,"endOffset":3623,"count":1},{"startOffset":3567,"endOffset":3621,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":3625,"endOffset":3760,"count":462},{"startOffset":3703,"endOffset":3758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3804,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4358,"count":924},{"startOffset":4142,"endOffset":4205,"count":0},{"startOffset":4238,"endOffset":4356,"count":0}],"isBlockCoverage":true},{"functionName":"validateSignalName","ranges":[{"startOffset":4362,"endOffset":4783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4824,"endOffset":5054,"count":492},{"startOffset":4889,"endOffset":5052,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5058,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"validatePort","ranges":[{"startOffset":5536,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5942,"endOffset":6043,"count":1},{"startOffset":6000,"endOffset":6041,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28412,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":982,"endOffset":1198,"count":1},{"startOffset":1145,"endOffset":1196,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1200,"endOffset":1818,"count":1},{"startOffset":1296,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"boundsError","ranges":[{"startOffset":1820,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2243,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2744,"endOffset":3243,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3245,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3748,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4245,"endOffset":4797,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4799,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5184,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5542,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":5870,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6160,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6422,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6604,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7158,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7543,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":7901,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8229,"endOffset":8517,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8519,"endOffset":8779,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8781,"endOffset":9326,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9328,"endOffset":9759,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9761,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10150,"endOffset":10485,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10487,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10821,"endOffset":11127,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11129,"endOffset":11337,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11339,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":11886,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12317,"endOffset":12705,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12707,"endOffset":13042,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13044,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13378,"endOffset":13684,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13701,"endOffset":14106,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14108,"endOffset":14512,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14514,"endOffset":15084,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15086,"endOffset":15655,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15676,"endOffset":16158,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16160,"endOffset":16282,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16284,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16784,"endOffset":16906,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":16908,"endOffset":17052,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17054,"endOffset":17198,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17200,"endOffset":17809,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17811,"endOffset":18224,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18226,"endOffset":18605,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18607,"endOffset":18914,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":18916,"endOffset":19022,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19024,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19285,"endOffset":19481,"count":1}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19483,"endOffset":19585,"count":1}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19587,"endOffset":19999,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20001,"endOffset":20095,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20097,"endOffset":20706,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20708,"endOffset":21129,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21131,"endOffset":21493,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21495,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21812,"endOffset":21918,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":21920,"endOffset":22185,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22187,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22385,"endOffset":22487,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22489,"endOffset":23151,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23153,"endOffset":23268,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23270,"endOffset":23377,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23379,"endOffset":23476,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23478,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24142,"endOffset":24257,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24259,"endOffset":24366,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24385,"endOffset":24851,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":24853,"endOffset":25320,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25322,"endOffset":25623,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25625,"endOffset":25927,"count":0}],"isBlockCoverage":false},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":25969,"endOffset":28346,"count":1},{"startOffset":27372,"endOffset":27392,"count":0},{"startOffset":27446,"endOffset":27465,"count":0},{"startOffset":27521,"endOffset":27542,"count":0},{"startOffset":27598,"endOffset":27618,"count":0},{"startOffset":27675,"endOffset":27696,"count":0},{"startOffset":27752,"endOffset":27772,"count":0},{"startOffset":27830,"endOffset":27852,"count":0},{"startOffset":27910,"endOffset":27931,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10567,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":765,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":931,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1142,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1435,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3147,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3508,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4298,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4437,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4667,"endOffset":5105,"count":1},{"startOffset":4723,"endOffset":4747,"count":0}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":5109,"endOffset":5754,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":5805,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":6883,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10133,"endOffset":10463,"count":1},{"startOffset":10213,"endOffset":10388,"count":0},{"startOffset":10420,"endOffset":10461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15624,"count":1}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":4884,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":5152,"endOffset":5581,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":5773,"endOffset":6821,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":6922,"endOffset":7872,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":7874,"endOffset":8134,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":8163,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":8656,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":8945,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":9325,"endOffset":9530,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":9562,"endOffset":9672,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":9674,"endOffset":9948,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":9950,"endOffset":10044,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":10245,"endOffset":10315,"count":7}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":10317,"endOffset":10491,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":10674,"endOffset":10964,"count":7},{"startOffset":10930,"endOffset":10963,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":10967,"endOffset":11056,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":11059,"endOffset":11534,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":11536,"endOffset":11599,"count":35}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":11601,"endOffset":11660,"count":7}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":11662,"endOffset":11717,"count":7}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":11719,"endOffset":11776,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":11778,"endOffset":11839,"count":7}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":11842,"endOffset":12250,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":12253,"endOffset":12429,"count":7},{"startOffset":12401,"endOffset":12427,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":12432,"endOffset":12552,"count":7},{"startOffset":12496,"endOffset":12521,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":12555,"endOffset":12765,"count":0}],"isBlockCoverage":false},{"functionName":"clearAsyncIdStack","ranges":[{"startOffset":12856,"endOffset":13082,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":13085,"endOffset":13148,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":13214,"endOffset":13794,"count":7},{"startOffset":13386,"endOffset":13446,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":13859,"endOffset":14470,"count":7},{"startOffset":13975,"endOffset":13988,"count":0},{"startOffset":14067,"endOffset":14173,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":14473,"endOffset":14549,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":14551,"endOffset":14623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"22","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4828,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":1023,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1100,"endOffset":1186,"count":5},{"startOffset":1176,"endOffset":1179,"count":4},{"startOffset":1180,"endOffset":1183,"count":1}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1288,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1486,"endOffset":2454,"count":2},{"startOffset":1542,"endOffset":2334,"count":4},{"startOffset":1577,"endOffset":2309,"count":6},{"startOffset":1778,"endOffset":2185,"count":3},{"startOffset":1898,"endOffset":1931,"count":1},{"startOffset":1944,"endOffset":1986,"count":0},{"startOffset":1999,"endOffset":2050,"count":2},{"startOffset":2063,"endOffset":2123,"count":0},{"startOffset":2136,"endOffset":2163,"count":0},{"startOffset":2247,"endOffset":2268,"count":0},{"startOffset":2334,"endOffset":2388,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2598,"endOffset":3513,"count":6},{"startOffset":2670,"endOffset":2711,"count":0},{"startOffset":2741,"endOffset":2748,"count":0},{"startOffset":2796,"endOffset":2810,"count":3},{"startOffset":2815,"endOffset":2852,"count":1},{"startOffset":2857,"endOffset":2908,"count":0},{"startOffset":2913,"endOffset":2978,"count":2},{"startOffset":2983,"endOffset":3126,"count":0},{"startOffset":3155,"endOffset":3181,"count":4},{"startOffset":3425,"endOffset":3485,"count":0}],"isBlockCoverage":true},{"functionName":"createMicrotaskResource","ranges":[{"startOffset":3603,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3851,"endOffset":4211,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":4213,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4549,"endOffset":4806,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8383,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1462,"endOffset":1552,"count":1},{"startOffset":1542,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":1554,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":1635,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2028,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":2599,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":2851,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3147,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4035,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":4964,"endOffset":5249,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":5422,"endOffset":7284,"count":1},{"startOffset":5580,"endOffset":5746,"count":0},{"startOffset":5811,"endOffset":7188,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":7286,"endOffset":7704,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":7706,"endOffset":8176,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":8178,"endOffset":8262,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":19}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":6}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":6}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":10},{"startOffset":3388,"endOffset":3400,"count":4},{"startOffset":3400,"endOffset":3509,"count":6}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":9}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":6},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":10},{"startOffset":4041,"endOffset":4062,"count":8},{"startOffset":4064,"endOffset":4159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1798,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17773,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2017,"endOffset":3909,"count":1},{"startOffset":2282,"endOffset":2325,"count":0},{"startOffset":2382,"endOffset":2494,"count":0},{"startOffset":2676,"endOffset":2734,"count":0},{"startOffset":2788,"endOffset":2846,"count":0},{"startOffset":2885,"endOffset":2908,"count":0},{"startOffset":2914,"endOffset":2970,"count":0},{"startOffset":3013,"endOffset":3039,"count":0},{"startOffset":3041,"endOffset":3284,"count":0},{"startOffset":3324,"endOffset":3436,"count":0},{"startOffset":3569,"endOffset":3813,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":4118,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":4262,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"Console.<computed>","ranges":[{"startOffset":4613,"endOffset":5109,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4767,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4858,"endOffset":4888,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4970,"endOffset":5057,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5065,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":5149,"endOffset":5945,"count":2}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":6026,"endOffset":6915,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6094,"endOffset":6912,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":6954,"endOffset":8229,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":8354,"endOffset":8784,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":8825,"endOffset":8941,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":8982,"endOffset":9098,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":9128,"endOffset":9215,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":9221,"endOffset":9309,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":9315,"endOffset":9500,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":9505,"endOffset":9863,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":9868,"endOffset":10157,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":10162,"endOffset":10400,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":10412,"endOffset":10652,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":10657,"endOffset":10875,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10936,"endOffset":11366,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":11427,"endOffset":11883,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":11949,"endOffset":12237,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":12242,"endOffset":12352,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":12357,"endOffset":12464,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":12513,"endOffset":15805,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":15846,"endOffset":16342,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":16344,"endOffset":16405,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":16407,"endOffset":17087,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":17221,"endOffset":17277,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":17280,"endOffset":17298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"27","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2103,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":68,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":484,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1117,"endOffset":1819,"count":1},{"startOffset":1275,"endOffset":1817,"count":23},{"startOffset":1490,"endOffset":1695,"count":19},{"startOffset":1695,"endOffset":1813,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":1991,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2046,"endOffset":2099,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40639,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":2176,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2684,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3206,"endOffset":3429,"count":1425}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3719,"endOffset":6082,"count":1400},{"startOffset":3834,"endOffset":6020,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6086,"endOffset":7171,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7175,"endOffset":7868,"count":1400},{"startOffset":7430,"endOffset":7440,"count":0},{"startOffset":7503,"endOffset":7513,"count":0},{"startOffset":7594,"endOffset":7598,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7870,"endOffset":7945,"count":25}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":7947,"endOffset":8292,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8294,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8642,"endOffset":8804,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8806,"endOffset":9112,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9114,"endOffset":9608,"count":930},{"startOffset":9380,"endOffset":9448,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9610,"endOffset":9778,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9780,"endOffset":9950,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":9966,"endOffset":10294,"count":1425},{"startOffset":10101,"endOffset":10153,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10298,"endOffset":10379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10383,"endOffset":10476,"count":3264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10551,"endOffset":10751,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10755,"endOffset":11688,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11857,"endOffset":13048,"count":932},{"startOffset":11942,"endOffset":12003,"count":0},{"startOffset":12413,"endOffset":12574,"count":0},{"startOffset":12606,"endOffset":12648,"count":0},{"startOffset":12707,"endOffset":12729,"count":0},{"startOffset":12737,"endOffset":12801,"count":0},{"startOffset":12913,"endOffset":12936,"count":0},{"startOffset":12998,"endOffset":13024,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13322,"endOffset":13381,"count":470}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13447,"endOffset":13492,"count":462}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13498,"endOffset":13678,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13759,"endOffset":14387,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14457,"endOffset":14505,"count":464}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14511,"endOffset":14880,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14950,"endOffset":15000,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15006,"endOffset":15404,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15474,"endOffset":15524,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15530,"endOffset":15928,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15994,"endOffset":16150,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16156,"endOffset":16447,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16517,"endOffset":16569,"count":1396}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16575,"endOffset":16874,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16940,"endOffset":17040,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17046,"endOffset":17363,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17433,"endOffset":17628,"count":2334},{"startOffset":17512,"endOffset":17531,"count":0},{"startOffset":17573,"endOffset":17583,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17634,"endOffset":17853,"count":930},{"startOffset":17744,"endOffset":17751,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17921,"endOffset":18060,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18066,"endOffset":18558,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18645,"endOffset":18691,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18757,"endOffset":18908,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18914,"endOffset":19332,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":19478,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19545,"endOffset":19850,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":19852,"endOffset":19992,"count":1400},{"startOffset":19949,"endOffset":19991,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20101,"endOffset":22402,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23366,"endOffset":23926,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":23981,"endOffset":24669,"count":2},{"startOffset":24319,"endOffset":24465,"count":13},{"startOffset":24520,"endOffset":24667,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":24689,"endOffset":25319,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25386,"endOffset":25773,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":25778,"endOffset":26277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26282,"endOffset":26716,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":26721,"endOffset":27189,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27194,"endOffset":27622,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27627,"endOffset":28653,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":28658,"endOffset":29835,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":29998,"endOffset":30207,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30212,"endOffset":30784,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":30839,"endOffset":31039,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31044,"endOffset":31248,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31381,"endOffset":31581,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":31861,"endOffset":32064,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32288,"endOffset":33041,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33045,"endOffset":34259,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34265,"endOffset":34440,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":34442,"endOffset":34621,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":34764,"endOffset":35307,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":35343,"endOffset":36763,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":36765,"endOffset":37269,"count":464},{"startOffset":36828,"endOffset":36884,"count":0},{"startOffset":36962,"endOffset":37228,"count":62471},{"startOffset":36993,"endOffset":37224,"count":464},{"startOffset":37103,"endOffset":37218,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37271,"endOffset":37618,"count":464},{"startOffset":37338,"endOffset":37359,"count":462},{"startOffset":37359,"endOffset":37461,"count":2},{"startOffset":37397,"endOffset":37461,"count":0},{"startOffset":37499,"endOffset":37540,"count":0},{"startOffset":37560,"endOffset":37587,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":38377,"endOffset":39342,"count":930},{"startOffset":38628,"endOffset":38689,"count":928},{"startOffset":38649,"endOffset":38688,"count":0},{"startOffset":38691,"endOffset":38742,"count":2},{"startOffset":38748,"endOffset":38764,"count":2},{"startOffset":38836,"endOffset":38885,"count":0},{"startOffset":38984,"endOffset":39035,"count":0},{"startOffset":39071,"endOffset":39120,"count":0},{"startOffset":39156,"endOffset":39212,"count":0},{"startOffset":39248,"endOffset":39293,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":39344,"endOffset":39497,"count":1080},{"startOffset":39446,"endOffset":39494,"count":2}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":39499,"endOffset":39644,"count":1078},{"startOffset":39603,"endOffset":39643,"count":0}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":39646,"endOffset":40346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2800,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1190,"endOffset":2738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"30","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":false}]},{"scriptId":"31","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41806,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1492,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1598,"endOffset":1675,"count":753577}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1677,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1910,"endOffset":3714,"count":5707},{"startOffset":2127,"endOffset":3698,"count":753577},{"startOffset":2160,"endOffset":2186,"count":747870},{"startOffset":2186,"endOffset":2277,"count":5707},{"startOffset":2235,"endOffset":2277,"count":0},{"startOffset":2277,"endOffset":2310,"count":747870},{"startOffset":2310,"endOffset":3599,"count":69555},{"startOffset":2342,"endOffset":2355,"count":63846},{"startOffset":2357,"endOffset":2382,"count":6076},{"startOffset":2382,"endOffset":3556,"count":63479},{"startOffset":2404,"endOffset":3343,"count":165},{"startOffset":2460,"endOffset":2518,"count":0},{"startOffset":2519,"endOffset":2577,"count":0},{"startOffset":2715,"endOffset":2791,"count":0},{"startOffset":3024,"endOffset":3193,"count":0},{"startOffset":3203,"endOffset":3335,"count":0},{"startOffset":3343,"endOffset":3556,"count":63314},{"startOffset":3389,"endOffset":3442,"count":57607},{"startOffset":3442,"endOffset":3501,"count":5707},{"startOffset":3556,"endOffset":3599,"count":69390},{"startOffset":3599,"endOffset":3694,"count":678315},{"startOffset":3627,"endOffset":3641,"count":5414},{"startOffset":3643,"endOffset":3664,"count":701},{"startOffset":3664,"endOffset":3694,"count":677614}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":3716,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4195,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":8603,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":11359,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11732,"endOffset":13791,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":14005,"endOffset":17479,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":17484,"endOffset":18512,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":18517,"endOffset":20845,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":20850,"endOffset":23485,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":23490,"endOffset":25499,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":25541,"endOffset":30007,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":30126,"endOffset":31022,"count":5707},{"startOffset":30249,"endOffset":30269,"count":15140},{"startOffset":30276,"endOffset":30576,"count":9433},{"startOffset":30314,"endOffset":30329,"count":0},{"startOffset":30426,"endOffset":30453,"count":0},{"startOffset":30961,"endOffset":31011,"count":0},{"startOffset":31012,"endOffset":31017,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":31027,"endOffset":31602,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":31607,"endOffset":31736,"count":1125}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":31741,"endOffset":32155,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":32160,"endOffset":34370,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":34375,"endOffset":34451,"count":4085}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":34456,"endOffset":35084,"count":2399},{"startOffset":34539,"endOffset":34550,"count":0},{"startOffset":34708,"endOffset":34945,"count":31101},{"startOffset":34763,"endOffset":34847,"count":2399},{"startOffset":34847,"endOffset":34939,"count":28702},{"startOffset":34973,"endOffset":35000,"count":0},{"startOffset":35037,"endOffset":35049,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":35089,"endOffset":37409,"count":466},{"startOffset":35144,"endOffset":35171,"count":0},{"startOffset":35300,"endOffset":35317,"count":0},{"startOffset":35318,"endOffset":35346,"count":0},{"startOffset":35348,"endOffset":36815,"count":0},{"startOffset":36863,"endOffset":37332,"count":6061},{"startOffset":36918,"endOffset":37142,"count":466},{"startOffset":37142,"endOffset":37326,"count":5595},{"startOffset":37164,"endOffset":37326,"count":466},{"startOffset":37360,"endOffset":37370,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":37414,"endOffset":39072,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":39113,"endOffset":41467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"32","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15913,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":929,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1040,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1167,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgument","ranges":[{"startOffset":1294,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8202,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8686,"endOffset":8865,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoder","ranges":[{"startOffset":8936,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":8986,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9057,"endOffset":9149,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9153,"endOffset":9463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9467,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10233,"endOffset":11894,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10371,"endOffset":11098,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11105,"endOffset":11865,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11896,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14572,"endOffset":14659,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14668,"endOffset":14801,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14810,"endOffset":14972,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":14981,"endOffset":15611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"33","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8169,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2014,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3326,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":3611,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout.<computed>","ranges":[{"startOffset":4288,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":4524,"endOffset":4645,"count":2},{"startOffset":4567,"endOffset":4586,"count":0},{"startOffset":4588,"endOffset":4643,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":4647,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":5296,"endOffset":5594,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":5622,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":5714,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":6040,"endOffset":6213,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":6217,"endOffset":6393,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":6397,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":6443,"endOffset":6984,"count":1},{"startOffset":6618,"endOffset":6659,"count":0},{"startOffset":6664,"endOffset":6711,"count":0},{"startOffset":6716,"endOffset":6937,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate.<computed>","ranges":[{"startOffset":7018,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":7108,"endOffset":7530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"34","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"35","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17590,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5271,"endOffset":5549,"count":1},{"startOffset":5497,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5634,"endOffset":6600,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6713,"endOffset":6884,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":6915,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7042,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7197,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7355,"endOffset":7392,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7395,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7811,"endOffset":7982,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8040,"endOffset":8108,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8269,"endOffset":8436,"count":1},{"startOffset":8312,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8614,"endOffset":8969,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":8972,"endOffset":9048,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9050,"endOffset":9127,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":9210,"endOffset":9264,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9411,"endOffset":9471,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9692,"endOffset":10208,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10210,"endOffset":10860,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":10862,"endOffset":11168,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11235,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11759,"endOffset":11964,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":11966,"endOffset":12037,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12039,"endOffset":17136,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12351,"endOffset":14152,"count":1},{"startOffset":12430,"endOffset":12454,"count":0},{"startOffset":12891,"endOffset":12906,"count":0},{"startOffset":13223,"endOffset":13319,"count":0},{"startOffset":13749,"endOffset":13805,"count":0},{"startOffset":13907,"endOffset":13928,"count":0},{"startOffset":14079,"endOffset":14108,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14157,"endOffset":14631,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14635,"endOffset":17077,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2924,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2595,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2765,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2184,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":362,"endOffset":634,"count":1},{"startOffset":433,"endOffset":632,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":708,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1035,"endOffset":1618,"count":4},{"startOffset":1124,"endOffset":1594,"count":3},{"startOffset":1159,"endOffset":1551,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1244,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":1838,"endOffset":2127,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1885,"endOffset":2124,"count":3144},{"startOffset":1934,"endOffset":2074,"count":4},{"startOffset":2105,"endOffset":2120,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6907,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":554,"endOffset":884,"count":1},{"startOffset":615,"endOffset":882,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":886,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1350,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":2985,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3456,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3559,"endOffset":3577,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4120,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4389,"endOffset":6478,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":6483,"endOffset":6688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"39","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4592,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":228,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":639,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":763,"endOffset":1147,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1149,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"onWarning","ranges":[{"startOffset":1259,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2560,"endOffset":3704,"count":1},{"startOffset":2672,"endOffset":2694,"count":0},{"startOffset":2696,"endOffset":2849,"count":0},{"startOffset":2887,"endOffset":2953,"count":0},{"startOffset":2979,"endOffset":3006,"count":0},{"startOffset":3008,"endOffset":3073,"count":0},{"startOffset":3108,"endOffset":3152,"count":0},{"startOffset":3181,"endOffset":3208,"count":0},{"startOffset":3210,"endOffset":3275,"count":0},{"startOffset":3386,"endOffset":3507,"count":0},{"startOffset":3553,"endOffset":3658,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningSync","ranges":[{"startOffset":3706,"endOffset":3800,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":3802,"endOffset":4521,"count":1},{"startOffset":4312,"endOffset":4332,"count":0},{"startOffset":4361,"endOffset":4385,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6255,"count":1}],"isBlockCoverage":true},{"functionName":"defineStream","ranges":[{"startOffset":428,"endOffset":575,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1136,"endOffset":2703,"count":2},{"startOffset":1288,"endOffset":1414,"count":0},{"startOffset":1420,"endOffset":1606,"count":0},{"startOffset":1941,"endOffset":2161,"count":0},{"startOffset":2337,"endOffset":2582,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2525,"endOffset":2572,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2705,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3126,"endOffset":3457,"count":1},{"startOffset":3163,"endOffset":3177,"count":0},{"startOffset":3376,"endOffset":3438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3405,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3459,"endOffset":3790,"count":2},{"startOffset":3496,"endOffset":3709,"count":1},{"startOffset":3709,"endOffset":3771,"count":0},{"startOffset":3771,"endOffset":3789,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3738,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3792,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6174,"endOffset":6253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":10}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":10},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":1},{"startOffset":957,"endOffset":993,"count":0},{"startOffset":995,"endOffset":1048,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3480,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2914,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2469,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3065,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3238,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3376,"endOffset":3479,"count":4},{"startOffset":3428,"endOffset":3457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"43","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"44","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14739,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":301,"endOffset":2428,"count":1},{"startOffset":1039,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2430,"endOffset":3958,"count":1}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":3960,"endOffset":4217,"count":13},{"startOffset":4081,"endOffset":4215,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4219,"endOffset":4448,"count":1},{"startOffset":4358,"endOffset":4401,"count":0},{"startOffset":4403,"endOffset":4446,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4560,"endOffset":5237,"count":1},{"startOffset":5030,"endOffset":5207,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5239,"endOffset":5464,"count":1},{"startOffset":5341,"endOffset":5463,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5466,"endOffset":5690,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5648,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5692,"endOffset":5924,"count":1},{"startOffset":5843,"endOffset":5922,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":5986,"endOffset":6121,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6123,"endOffset":6430,"count":1},{"startOffset":6258,"endOffset":6429,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6390,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6432,"endOffset":6691,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6693,"endOffset":7274,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7469,"endOffset":9990,"count":1},{"startOffset":8180,"endOffset":8482,"count":16},{"startOffset":8225,"endOffset":8457,"count":0},{"startOffset":8799,"endOffset":8972,"count":0},{"startOffset":9000,"endOffset":9394,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9643,"endOffset":9679,"count":349}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9685,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9853,"endOffset":9888,"count":12}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9894,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":9992,"endOffset":10551,"count":1},{"startOffset":10388,"endOffset":10397,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10553,"endOffset":10823,"count":1},{"startOffset":10640,"endOffset":10821,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":10825,"endOffset":12636,"count":1},{"startOffset":10951,"endOffset":12634,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":12638,"endOffset":12867,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":12869,"endOffset":13155,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13157,"endOffset":13782,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":13784,"endOffset":14041,"count":1},{"startOffset":13869,"endOffset":14039,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14043,"endOffset":14390,"count":1},{"startOffset":14237,"endOffset":14388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"45","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":841,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":147,"endOffset":286,"count":506},{"startOffset":234,"endOffset":261,"count":1},{"startOffset":261,"endOffset":285,"count":505}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":288,"endOffset":753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":71,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1251,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1834,"endOffset":1920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8220,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":305,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":1262,"endOffset":2509,"count":462},{"startOffset":1375,"endOffset":1449,"count":1},{"startOffset":1487,"endOffset":1512,"count":0},{"startOffset":1515,"endOffset":1522,"count":0},{"startOffset":1647,"endOffset":1785,"count":0},{"startOffset":1889,"endOffset":2507,"count":25},{"startOffset":1990,"endOffset":2021,"count":0},{"startOffset":2071,"endOffset":2126,"count":1},{"startOffset":2278,"endOffset":2503,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":2511,"endOffset":3043,"count":25},{"startOffset":2647,"endOffset":2721,"count":0},{"startOffset":2728,"endOffset":2808,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3233,"endOffset":3541,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3498,"endOffset":3537,"count":13334}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":3543,"endOffset":3814,"count":25},{"startOffset":3756,"endOffset":3812,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":3908,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":4728,"endOffset":5178,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4803,"endOffset":5035,"count":56}],"isBlockCoverage":true},{"functionName":"rekeySourceMap","ranges":[{"startOffset":5247,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":5880,"endOffset":6262,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6501,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7374,"endOffset":8112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55303,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":3543,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":3832,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"makeCallback","ranges":[{"startOffset":4151,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4475,"endOffset":4690,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":4716,"endOffset":4910,"count":10367}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":4912,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":5248,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":5488,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5799,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6294,"endOffset":6824,"count":4},{"startOffset":6369,"endOffset":6398,"count":0},{"startOffset":6706,"endOffset":6732,"count":0},{"startOffset":6734,"endOffset":6787,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":6826,"endOffset":7106,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7108,"endOffset":7609,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":7611,"endOffset":8401,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":8403,"endOffset":8633,"count":492},{"startOffset":8546,"endOffset":8558,"count":0},{"startOffset":8560,"endOffset":8615,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":8635,"endOffset":8946,"count":492},{"startOffset":8753,"endOffset":8805,"count":0},{"startOffset":8892,"endOffset":8904,"count":0},{"startOffset":8906,"endOffset":8923,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":8948,"endOffset":9203,"count":492},{"startOffset":9146,"endOffset":9158,"count":0},{"startOffset":9160,"endOffset":9177,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":9205,"endOffset":10588,"count":492},{"startOffset":9374,"endOffset":9380,"count":0},{"startOffset":9520,"endOffset":9523,"count":0},{"startOffset":9653,"endOffset":9676,"count":0},{"startOffset":9928,"endOffset":10282,"count":0},{"startOffset":10342,"endOffset":10438,"count":0},{"startOffset":10460,"endOffset":10500,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":10590,"endOffset":10756,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":10758,"endOffset":10901,"count":492}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":10903,"endOffset":11480,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":11483,"endOffset":11879,"count":492}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":11986,"endOffset":13484,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":13753,"endOffset":14668,"count":492},{"startOffset":13871,"endOffset":14020,"count":0},{"startOffset":14071,"endOffset":14092,"count":0},{"startOffset":14180,"endOffset":14199,"count":0},{"startOffset":14232,"endOffset":14362,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":14670,"endOffset":15101,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":15103,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15559,"endOffset":16819,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":17096,"endOffset":17962,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":18023,"endOffset":18452,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":18581,"endOffset":18894,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":18896,"endOffset":19277,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":19279,"endOffset":19626,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19628,"endOffset":20246,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":20248,"endOffset":20651,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20653,"endOffset":20969,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":20971,"endOffset":21191,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":21194,"endOffset":21313,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21315,"endOffset":21784,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":21786,"endOffset":22144,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22146,"endOffset":22320,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":22322,"endOffset":22472,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22474,"endOffset":22640,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":22642,"endOffset":22784,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22786,"endOffset":23567,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":23569,"endOffset":24341,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24343,"endOffset":24924,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":24926,"endOffset":25352,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25354,"endOffset":25669,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":25671,"endOffset":26045,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":26047,"endOffset":26419,"count":0}],"isBlockCoverage":false},{"functionName":"fstatSync","ranges":[{"startOffset":26421,"endOffset":26663,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":26665,"endOffset":26975,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":26977,"endOffset":27284,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":27286,"endOffset":27634,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":27636,"endOffset":27967,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":27969,"endOffset":29436,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":29438,"endOffset":30095,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":30097,"endOffset":30498,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":30500,"endOffset":30949,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":30951,"endOffset":31178,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":31180,"endOffset":31366,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":31368,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":31612,"endOffset":31806,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":31808,"endOffset":32245,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":32247,"endOffset":32569,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":32572,"endOffset":32848,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":32850,"endOffset":33085,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":33087,"endOffset":33428,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":33430,"endOffset":33730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":33732,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":34017,"endOffset":34276,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":34278,"endOffset":34618,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":34620,"endOffset":34918,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":34920,"endOffset":35261,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":35263,"endOffset":35545,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":35547,"endOffset":35831,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":35833,"endOffset":36093,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":36095,"endOffset":36745,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":36747,"endOffset":37466,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":37468,"endOffset":38170,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":38172,"endOffset":38612,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":38614,"endOffset":38993,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":38995,"endOffset":39887,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":39923,"endOffset":40970,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":40972,"endOffset":41419,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":41635,"endOffset":41701,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":41726,"endOffset":41904,"count":466},{"startOffset":41793,"endOffset":41884,"count":932},{"startOffset":41855,"endOffset":41878,"count":466},{"startOffset":41884,"endOffset":41903,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":41909,"endOffset":42209,"count":466},{"startOffset":41994,"endOffset":42024,"count":0},{"startOffset":42044,"endOffset":42207,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":42332,"endOffset":42575,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":42599,"endOffset":42652,"count":5271}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":42694,"endOffset":46630,"count":582},{"startOffset":42750,"endOffset":42769,"count":0},{"startOffset":42877,"endOffset":42895,"count":0},{"startOffset":43064,"endOffset":43099,"count":116},{"startOffset":43099,"endOffset":43670,"count":466},{"startOffset":43670,"endOffset":43689,"count":0},{"startOffset":43691,"endOffset":43866,"count":0},{"startOffset":43866,"endOffset":44003,"count":466},{"startOffset":44003,"endOffset":46547,"count":5271},{"startOffset":44115,"endOffset":44230,"count":466},{"startOffset":44230,"endOffset":44356,"count":4805},{"startOffset":44479,"endOffset":44616,"count":4604},{"startOffset":44570,"endOffset":44594,"count":0},{"startOffset":44616,"endOffset":44696,"count":667},{"startOffset":44727,"endOffset":44776,"count":0},{"startOffset":44776,"endOffset":46061,"count":667},{"startOffset":45230,"endOffset":46055,"count":0},{"startOffset":46061,"endOffset":46356,"count":0},{"startOffset":46358,"endOffset":46543,"count":0},{"startOffset":46547,"endOffset":46629,"count":466}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":46655,"endOffset":46894,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":46898,"endOffset":50327,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":50348,"endOffset":50618,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":50621,"endOffset":51092,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":51095,"endOffset":51569,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":51572,"endOffset":52102,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":52105,"endOffset":52477,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":52479,"endOffset":52673,"count":44},{"startOffset":52527,"endOffset":52671,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":52675,"endOffset":52780,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":52782,"endOffset":52889,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":54070,"endOffset":54138,"count":11}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":54143,"endOffset":54190,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":54195,"endOffset":54265,"count":11}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":54270,"endOffset":54319,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":54457,"endOffset":54533,"count":11}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":54538,"endOffset":54593,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":54598,"endOffset":54676,"count":11}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":54681,"endOffset":54738,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":55169,"endOffset":55294,"count":11},{"startOffset":55214,"endOffset":55265,"count":1}],"isBlockCoverage":true}]},{"scriptId":"49","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18832,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":2265,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":2346,"endOffset":2493,"count":1074},{"startOffset":2397,"endOffset":2428,"count":492},{"startOffset":2430,"endOffset":2491,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":2512,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":2656,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":2717,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":2786,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":2858,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":2927,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":2988,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":3094,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":3318,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":3372,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":3502,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":4466,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":5082,"endOffset":5622,"count":1074},{"startOffset":5217,"endOffset":5249,"count":0},{"startOffset":5286,"endOffset":5404,"count":492},{"startOffset":5404,"endOffset":5526,"count":582},{"startOffset":5443,"endOffset":5526,"count":0}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":5624,"endOffset":6261,"count":2143},{"startOffset":5694,"endOffset":5883,"count":0},{"startOffset":5915,"endOffset":6259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6402,"endOffset":6955,"count":1078},{"startOffset":6632,"endOffset":6652,"count":0},{"startOffset":6706,"endOffset":6754,"count":0},{"startOffset":6773,"endOffset":6954,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":6959,"endOffset":7484,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":7517,"endOffset":7824,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":7860,"endOffset":7917,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":7949,"endOffset":8006,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":8045,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":8145,"endOffset":8202,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":8242,"endOffset":8299,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":8331,"endOffset":8388,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":8422,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":8605,"endOffset":8687,"count":0}],"isBlockCoverage":false},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":8689,"endOffset":8772,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":9121,"endOffset":9185,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats","ranges":[{"startOffset":9187,"endOffset":9923,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":10081,"endOffset":10327,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":10330,"endOffset":10847,"count":0}],"isBlockCoverage":false},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":11188,"endOffset":11418,"count":0}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":11421,"endOffset":12499,"count":0}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":12501,"endOffset":13709,"count":492},{"startOffset":12566,"endOffset":12589,"count":0},{"startOffset":12612,"endOffset":12638,"count":0},{"startOffset":12695,"endOffset":12706,"count":0},{"startOffset":12728,"endOffset":12765,"count":0},{"startOffset":12770,"endOffset":12796,"count":0},{"startOffset":12801,"endOffset":12813,"count":0},{"startOffset":12835,"endOffset":12871,"count":0},{"startOffset":12877,"endOffset":12924,"count":0},{"startOffset":12929,"endOffset":12940,"count":0},{"startOffset":12962,"endOffset":13019,"count":0},{"startOffset":13025,"endOffset":13071,"count":0},{"startOffset":13076,"endOffset":13087,"count":0},{"startOffset":13109,"endOffset":13164,"count":0},{"startOffset":13170,"endOffset":13218,"count":0},{"startOffset":13223,"endOffset":13234,"count":0},{"startOffset":13256,"endOffset":13314,"count":0},{"startOffset":13319,"endOffset":13330,"count":0},{"startOffset":13352,"endOffset":13410,"count":0},{"startOffset":13416,"endOffset":13463,"count":0},{"startOffset":13468,"endOffset":13479,"count":0},{"startOffset":13501,"endOffset":13557,"count":0},{"startOffset":13562,"endOffset":13573,"count":0},{"startOffset":13595,"endOffset":13651,"count":0},{"startOffset":13655,"endOffset":13708,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13755,"endOffset":14115,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":14177,"endOffset":14620,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14674,"endOffset":15053,"count":492},{"startOffset":14730,"endOffset":14797,"count":0},{"startOffset":14818,"endOffset":14885,"count":0},{"startOffset":14926,"endOffset":15049,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15111,"endOffset":15385,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15427,"endOffset":15697,"count":1078},{"startOffset":15489,"endOffset":15511,"count":0},{"startOffset":15513,"endOffset":15599,"count":0},{"startOffset":15675,"endOffset":15695,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15742,"endOffset":15877,"count":496}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15925,"endOffset":16256,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":16297,"endOffset":16755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16892,"endOffset":17395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17436,"endOffset":18014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18077,"endOffset":18260,"count":0}],"isBlockCoverage":false}]},{"scriptId":"50","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5554,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1001,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1614,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1661,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1732,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":2735,"endOffset":3391,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3395,"endOffset":3805,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":3809,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":4090,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":4514,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":5141,"endOffset":5498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5163,"count":1}],"isBlockCoverage":false},{"functionName":"loadNativeModule","ranges":[{"startOffset":507,"endOffset":713,"count":527},{"startOffset":611,"endOffset":711,"count":61}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":962,"endOffset":2807,"count":462},{"startOffset":1076,"endOffset":2199,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1176,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":2221,"endOffset":2283,"count":944}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2292,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":2472,"endOffset":2594,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":2992,"endOffset":3118,"count":4},{"startOffset":3061,"endOffset":3098,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":3713,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":4831,"endOffset":5019,"count":462},{"startOffset":4984,"endOffset":5018,"count":0}],"isBlockCoverage":true}]},{"scriptId":"52","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29915,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1837,"endOffset":2113,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3791,"endOffset":4005,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4029,"endOffset":13457,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13460,"endOffset":14185,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15241,"endOffset":15947,"count":0}],"isBlockCoverage":false},{"functionName":"urlFormat","ranges":[{"startOffset":15993,"endOffset":16703,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":17395,"endOffset":19811,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":19814,"endOffset":19913,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19939,"endOffset":20040,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20043,"endOffset":20186,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20218,"endOffset":29337,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29366,"endOffset":29639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"53","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"54","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2957,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":811,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":815,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1061,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1116,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1208,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1261,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1353,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1404,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1485,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1534,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1675,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1751,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1939,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":2007,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2238,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2328,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2531,"endOffset":2702,"count":1},{"startOffset":2597,"endOffset":2700,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2704,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2830,"endOffset":2904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"55","url":"child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18659,"count":1}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":2144,"endOffset":3829,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":3831,"endOffset":4320,"count":1}],"isBlockCoverage":true},{"functionName":"onNewListener","ranges":[{"startOffset":4059,"endOffset":4168,"count":7},{"startOffset":4117,"endOffset":4141,"count":6},{"startOffset":4143,"endOffset":4164,"count":1}],"isBlockCoverage":true},{"functionName":"onRemoveListener","ranges":[{"startOffset":4202,"endOffset":4316,"count":1},{"startOffset":4289,"endOffset":4312,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":4322,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":4733,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":5016,"endOffset":5444,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5037,"endOffset":5441,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":5561,"endOffset":10415,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":10539,"endOffset":14778,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":14781,"endOffset":14983,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":14985,"endOffset":16471,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":16474,"endOffset":16903,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":16906,"endOffset":17316,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":17319,"endOffset":17695,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":17698,"endOffset":17886,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":17889,"endOffset":18162,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":18165,"endOffset":18528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"internal/child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30671,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2102,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2168,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2283,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2357,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2527,"endOffset":4081,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4088,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":4841,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5360,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5544,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5671,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":5839,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6188,"endOffset":7533,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":7656,"endOffset":8134,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8137,"endOffset":8248,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8251,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8482,"endOffset":8595,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8629,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12589,"endOffset":12650,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12683,"endOffset":13348,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13470,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13568,"endOffset":13625,"count":1}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":13630,"endOffset":13698,"count":1}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14012,"endOffset":14120,"count":3},{"startOffset":14054,"endOffset":14080,"count":1},{"startOffset":14082,"endOffset":14116,"count":1}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14124,"endOffset":14262,"count":2},{"startOffset":14168,"endOffset":14194,"count":0},{"startOffset":14196,"endOffset":14258,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14266,"endOffset":14337,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":14341,"endOffset":14416,"count":2}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14420,"endOffset":14491,"count":2},{"startOffset":14475,"endOffset":14486,"count":0}],"isBlockCoverage":true},{"functionName":"setupChannel","ranges":[{"startOffset":14641,"endOffset":26294,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14870,"endOffset":14912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14968,"endOffset":15012,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15505,"endOffset":16684,"count":2},{"startOffset":15839,"endOffset":15866,"count":0},{"startOffset":16188,"endOffset":16421,"count":0},{"startOffset":16504,"endOffset":16680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16838,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"target.send","ranges":[{"startOffset":19199,"endOffset":20013,"count":8},{"startOffset":19284,"endOffset":19369,"count":0},{"startOffset":19410,"endOffset":19470,"count":0},{"startOffset":19502,"endOffset":19569,"count":0},{"startOffset":19571,"endOffset":19646,"count":0},{"startOffset":19793,"endOffset":20012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19955,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20033,"endOffset":24298,"count":8},{"startOffset":20106,"endOffset":20121,"count":0},{"startOffset":20162,"endOffset":20200,"count":0},{"startOffset":20525,"endOffset":20563,"count":0},{"startOffset":20564,"endOffset":20603,"count":0},{"startOffset":20605,"endOffset":20722,"count":0},{"startOffset":20803,"endOffset":20854,"count":0},{"startOffset":20931,"endOffset":22648,"count":0},{"startOffset":22676,"endOffset":22810,"count":0},{"startOffset":22812,"endOffset":23069,"count":0},{"startOffset":23276,"endOffset":23452,"count":0},{"startOffset":23479,"endOffset":23670,"count":2},{"startOffset":23670,"endOffset":23763,"count":6},{"startOffset":23712,"endOffset":23763,"count":0},{"startOffset":23769,"endOffset":24171,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":23506,"endOffset":23631,"count":2},{"startOffset":23606,"endOffset":23621,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24117,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":24872,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"target._disconnect","ranges":[{"startOffset":25322,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":25944,"endOffset":26028,"count":2}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26032,"endOffset":26250,"count":2},{"startOffset":26115,"endOffset":26122,"count":0},{"startOffset":26156,"endOffset":26175,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":26329,"endOffset":26611,"count":2},{"startOffset":26473,"endOffset":26529,"count":0},{"startOffset":26530,"endOffset":26607,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":26613,"endOffset":26631,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":26633,"endOffset":29369,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":29372,"endOffset":29688,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":29691,"endOffset":29892,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":29894,"endOffset":30546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47095,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3350,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3370,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3466,"endOffset":3847,"count":2},{"startOffset":3633,"endOffset":3655,"count":0},{"startOffset":3689,"endOffset":3846,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":3850,"endOffset":3988,"count":2},{"startOffset":3945,"endOffset":3963,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":3991,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4076,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4403,"endOffset":4694,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5189,"endOffset":5915,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":5987,"endOffset":6590,"count":2},{"startOffset":6343,"endOffset":6584,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":6725,"endOffset":10576,"count":2},{"startOffset":6785,"endOffset":6812,"count":0},{"startOffset":7362,"endOffset":7388,"count":0},{"startOffset":7932,"endOffset":8040,"count":0},{"startOffset":8137,"endOffset":8216,"count":0},{"startOffset":8217,"endOffset":8265,"count":0},{"startOffset":8267,"endOffset":8498,"count":0},{"startOffset":9049,"endOffset":9083,"count":0},{"startOffset":9163,"endOffset":9174,"count":1},{"startOffset":9263,"endOffset":9792,"count":0},{"startOffset":10158,"endOffset":10423,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":10749,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":10999,"endOffset":11647,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":11651,"endOffset":12030,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12237,"endOffset":12693,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":12775,"endOffset":13279,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":13313,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":13798,"endOffset":14045,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14076,"endOffset":14120,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14187,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14291,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14438,"endOffset":14768,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14837,"endOffset":14945,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15013,"endOffset":15058,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":15065,"endOffset":15311,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":15403,"endOffset":15632,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":15659,"endOffset":15811,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":15840,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":16204,"endOffset":16388,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":16416,"endOffset":16602,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":16649,"endOffset":16934,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":16968,"endOffset":17115,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":17147,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":18136,"endOffset":18427,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":18430,"endOffset":18590,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":18617,"endOffset":18708,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":18741,"endOffset":18807,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":18839,"endOffset":18903,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":18933,"endOffset":18993,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":19030,"endOffset":19315,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":19347,"endOffset":19412,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":19442,"endOffset":19501,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":19543,"endOffset":19590,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":19626,"endOffset":20387,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":20418,"endOffset":20486,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":20516,"endOffset":20597,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":20790,"endOffset":20894,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":20926,"endOffset":21867,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":21872,"endOffset":22671,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":22674,"endOffset":24379,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":24409,"endOffset":25713,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":25717,"endOffset":28633,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":28636,"endOffset":28695,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":28721,"endOffset":28908,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":28937,"endOffset":29130,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":29134,"endOffset":30382,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":30385,"endOffset":31714,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":31825,"endOffset":31890,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":31958,"endOffset":33423,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":33425,"endOffset":35776,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":35843,"endOffset":35905,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":35908,"endOffset":36023,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":36026,"endOffset":37244,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":37273,"endOffset":40780,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":40783,"endOffset":41195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41258,"endOffset":41301,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":41376,"endOffset":41678,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":41681,"endOffset":42342,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":42379,"endOffset":43132,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":43161,"endOffset":44028,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":44070,"endOffset":44456,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":44460,"endOffset":44543,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":44602,"endOffset":44764,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44967,"endOffset":45003,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45007,"endOffset":45048,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45108,"endOffset":45139,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":45143,"endOffset":45179,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":45217,"endOffset":45443,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":45469,"endOffset":45567,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":45595,"endOffset":45694,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":45855,"endOffset":46524,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":46563,"endOffset":46804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2144,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1935,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7443,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":551,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1945,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2318,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":2399,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":2481,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":2564,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2637,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2962,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":3255,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":3481,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3866,"endOffset":7414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1134,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1223,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1443,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1732,"endOffset":2269,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2271,"endOffset":3041,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3043,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3183,"endOffset":3459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5649,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5625,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2081,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":96,"endOffset":144,"count":4}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":258,"endOffset":2053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"63","url":"_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38275,"count":1}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2299,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3108,"endOffset":6492,"count":2},{"startOffset":3507,"endOffset":3550,"count":0},{"startOffset":4083,"endOffset":4119,"count":0},{"startOffset":6304,"endOffset":6490,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6495,"endOffset":7065,"count":2},{"startOffset":6563,"endOffset":6592,"count":0},{"startOffset":6915,"endOffset":6941,"count":0},{"startOffset":6996,"endOffset":7028,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":7202,"endOffset":7234,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7285,"endOffset":7323,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7552,"endOffset":7638,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7734,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7822,"endOffset":10074,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10076,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10766,"endOffset":10878,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10942,"endOffset":11586,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11647,"endOffset":12012,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12125,"endOffset":12530,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12627,"endOffset":16845,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16848,"endOffset":17668,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17869,"endOffset":18196,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18198,"endOffset":18834,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19184,"endOffset":19340,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19342,"endOffset":21138,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21409,"endOffset":21475,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21504,"endOffset":25891,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25894,"endOffset":26568,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26599,"endOffset":27268,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27394,"endOffset":28301,"count":2},{"startOffset":27526,"endOffset":27858,"count":0},{"startOffset":27887,"endOffset":28284,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28396,"endOffset":28910,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29013,"endOffset":29551,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29554,"endOffset":30064,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30066,"endOffset":30154,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30308,"endOffset":30633,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30636,"endOffset":30786,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30788,"endOffset":31039,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31068,"endOffset":31335,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31338,"endOffset":31485,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31669,"endOffset":33169,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33214,"endOffset":33429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33628,"endOffset":34017,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34023,"endOffset":34153,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34219,"endOffset":34285,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34344,"endOffset":34426,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34486,"endOffset":34546,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34557,"endOffset":34666,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34720,"endOffset":34774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34832,"endOffset":34920,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34976,"endOffset":35061,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35110,"endOffset":35244,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35250,"endOffset":35539,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35592,"endOffset":35680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35743,"endOffset":35788,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35811,"endOffset":35862,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35868,"endOffset":35917,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":36221,"endOffset":36783,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":36785,"endOffset":37006,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":37008,"endOffset":37940,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":37942,"endOffset":38109,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":38127,"endOffset":38273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"64","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3784,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":190,"endOffset":274,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":278,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":469,"endOffset":627,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":631,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":862,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":934,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1109,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1456,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1914,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1958,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2129,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2794,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3585,"endOffset":3780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":4},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":4},{"startOffset":546,"endOffset":737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22228,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2225,"endOffset":6390,"count":2},{"startOffset":2620,"endOffset":2663,"count":0},{"startOffset":3214,"endOffset":3250,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6392,"endOffset":6524,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":6562,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7105,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7355,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7417,"endOffset":8589,"count":2},{"startOffset":8058,"endOffset":8098,"count":0},{"startOffset":8104,"endOffset":8133,"count":0},{"startOffset":8272,"endOffset":8300,"count":0},{"startOffset":8354,"endOffset":8384,"count":0},{"startOffset":8439,"endOffset":8471,"count":0},{"startOffset":8524,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":8685,"endOffset":8753,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8783,"endOffset":10007,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10036,"endOffset":10082,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10113,"endOffset":10268,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10311,"endOffset":10622,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10812,"endOffset":11765,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":11767,"endOffset":12145,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12147,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12569,"endOffset":13822,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":13824,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":13965,"endOffset":14375,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":14447,"endOffset":14768,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":14834,"endOffset":16267,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16297,"endOffset":16466,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16530,"endOffset":17714,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":17717,"endOffset":17930,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":17932,"endOffset":18192,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18194,"endOffset":18542,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18544,"endOffset":18871,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":18873,"endOffset":19491,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":19557,"endOffset":20021,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20088,"endOffset":20175,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20181,"endOffset":20363,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20388,"endOffset":20780,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20786,"endOffset":20920,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20953,"endOffset":21039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21074,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21193,"endOffset":21275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21305,"endOffset":21389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21427,"endOffset":21511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21542,"endOffset":21622,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21653,"endOffset":21730,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":21806,"endOffset":22017,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22105,"endOffset":22137,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22188,"endOffset":22226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"67","url":"_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3657,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1917,"endOffset":2341,"count":2},{"startOffset":1981,"endOffset":2008,"count":0},{"startOffset":2229,"endOffset":2251,"count":0},{"startOffset":2294,"endOffset":2335,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2482,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2700,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2999,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3114,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3227,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3337,"endOffset":3423,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3454,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3564,"endOffset":3648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7707,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":3891,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4411,"endOffset":5239,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5241,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5482,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6100,"endOffset":6189,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6221,"endOffset":6559,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6731,"endOffset":7104,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7139,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7240,"endOffset":7706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1520,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1699,"endOffset":1751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"internal/net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1691,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":971,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1021,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1071,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1159,"endOffset":1573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"internal/stream_base_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6821,"count":1}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1106,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":1963,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2475,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2678,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3321,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3530,"endOffset":3839,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":3841,"endOffset":5692,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5694,"endOffset":6596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/dtrace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26457,"count":1}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":2676,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":3685,"endOffset":3763,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":3766,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":4202,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":4774,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5133,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":5582,"endOffset":9172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9202,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":9948,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":10296,"endOffset":10938,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":10971,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":11383,"endOffset":11824,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":11828,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":12216,"endOffset":12543,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12546,"endOffset":12958,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":12961,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":13084,"endOffset":13208,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":13211,"endOffset":13408,"count":0}],"isBlockCoverage":false},{"functionName":"isConnected","ranges":[{"startOffset":13410,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":14097,"endOffset":16691,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":16694,"endOffset":17833,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":17835,"endOffset":18012,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":18039,"endOffset":18574,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":18578,"endOffset":18632,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18662,"endOffset":18852,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":18888,"endOffset":19198,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":19234,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":19412,"endOffset":19586,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":19625,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":19861,"endOffset":20061,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":20106,"endOffset":20368,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":20404,"endOffset":20778,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":20816,"endOffset":21193,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":21243,"endOffset":22000,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":22052,"endOffset":22815,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":22819,"endOffset":22982,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":22985,"endOffset":23149,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":23152,"endOffset":23406,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":23432,"endOffset":23539,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":23568,"endOffset":23677,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":23718,"endOffset":23775,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":23816,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":23914,"endOffset":23971,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":24012,"endOffset":24069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24170,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24297,"endOffset":24353,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24486,"endOffset":24543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24619,"endOffset":24678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24814,"endOffset":24871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24947,"endOffset":25006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25138,"endOffset":25191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25263,"endOffset":25318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25450,"endOffset":25507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25583,"endOffset":25642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25748,"endOffset":25783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25892,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26195,"endOffset":26231,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26235,"endOffset":26276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"internal/dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1844,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":448,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":552,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":649,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1320,"endOffset":1768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"internal/socket_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/child_process/serialization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":775,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1090,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1513,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1629,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":2285,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":2726,"endOffset":2831,"count":1}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":2836,"endOffset":3598,"count":2},{"startOffset":2910,"endOffset":2917,"count":0},{"startOffset":2972,"endOffset":3024,"count":1},{"startOffset":3284,"endOffset":3338,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3603,"endOffset":3766,"count":8}],"isBlockCoverage":true}]},{"scriptId":"77","url":"string_decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":1850,"endOffset":2112,"count":1},{"startOffset":1962,"endOffset":2095,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2382,"endOffset":2581,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2615,"endOffset":2916,"count":2},{"startOffset":2672,"endOffset":2683,"count":0},{"startOffset":2719,"endOffset":2870,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":2949,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3237,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3511,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3735,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3869,"endOffset":3984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"v8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9278,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":1665,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":1869,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":3626,"endOffset":3728,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":3730,"endOffset":4514,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":4516,"endOffset":5211,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":5213,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":5718,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":7120,"endOffset":7208,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":7212,"endOffset":7826,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":7881,"endOffset":8719,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8723,"endOffset":8867,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":8869,"endOffset":8994,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"internal/heap_utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":322,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":480,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":553,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":737,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42270,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":3333,"endOffset":3402,"count":1}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":3706,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4523,"endOffset":4840,"count":2697},{"startOffset":4621,"endOffset":4715,"count":80},{"startOffset":4697,"endOffset":4711,"count":16},{"startOffset":4715,"endOffset":4789,"count":2681},{"startOffset":4789,"endOffset":4821,"count":64},{"startOffset":4821,"endOffset":4839,"count":2681}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":4842,"endOffset":5017,"count":886},{"startOffset":4915,"endOffset":4933,"count":885},{"startOffset":4950,"endOffset":4988,"count":885},{"startOffset":4960,"endOffset":4987,"count":420},{"startOffset":4994,"endOffset":5015,"count":884}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5019,"endOffset":5256,"count":466}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":5707,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5929,"endOffset":6051,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6056,"endOffset":6189,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6236,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6269,"endOffset":6323,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6373,"endOffset":6409,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6414,"endOffset":6476,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":6895,"endOffset":7739,"count":2660},{"startOffset":7075,"endOffset":7091,"count":2435},{"startOffset":7091,"endOffset":7191,"count":225},{"startOffset":7191,"endOffset":7257,"count":123},{"startOffset":7257,"endOffset":7275,"count":102},{"startOffset":7275,"endOffset":7370,"count":0},{"startOffset":7370,"endOffset":7622,"count":102},{"startOffset":7622,"endOffset":7737,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":7741,"endOffset":8214,"count":1124},{"startOffset":7950,"endOffset":8196,"count":2308},{"startOffset":8065,"endOffset":8078,"count":0},{"startOffset":8136,"endOffset":8192,"count":1124},{"startOffset":8196,"endOffset":8213,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageMain","ranges":[{"startOffset":8216,"endOffset":8334,"count":163},{"startOffset":8309,"endOffset":8319,"count":132},{"startOffset":8320,"endOffset":8331,"count":31}],"isBlockCoverage":true},{"functionName":"readPackageExports","ranges":[{"startOffset":8336,"endOffset":8460,"count":189},{"startOffset":8432,"endOffset":8445,"count":141},{"startOffset":8446,"endOffset":8457,"count":48}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":8462,"endOffset":9761,"count":163},{"startOffset":8582,"endOffset":8663,"count":73},{"startOffset":8663,"endOffset":8757,"count":90},{"startOffset":8757,"endOffset":8801,"count":4},{"startOffset":8802,"endOffset":8869,"count":2},{"startOffset":8895,"endOffset":9742,"count":0},{"startOffset":9742,"endOffset":9760,"count":90}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":10102,"endOffset":10312,"count":1208},{"startOffset":10190,"endOffset":10197,"count":643},{"startOffset":10197,"endOffset":10221,"count":565},{"startOffset":10221,"endOffset":10231,"count":0},{"startOffset":10233,"endOffset":10276,"count":0},{"startOffset":10276,"endOffset":10311,"count":565}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":10314,"endOffset":10445,"count":582}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":10520,"endOffset":10726,"count":690},{"startOffset":10602,"endOffset":10708,"count":1116},{"startOffset":10674,"endOffset":10704,"count":477},{"startOffset":10708,"endOffset":10725,"count":213}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":10815,"endOffset":11251,"count":466},{"startOffset":11023,"endOffset":11233,"count":467},{"startOffset":11074,"endOffset":11083,"count":0},{"startOffset":11205,"endOffset":11229,"count":466},{"startOffset":11233,"endOffset":11250,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":11253,"endOffset":11863,"count":661},{"startOffset":11362,"endOffset":11367,"count":0},{"startOffset":11410,"endOffset":11423,"count":645},{"startOffset":11423,"endOffset":11460,"count":16},{"startOffset":11460,"endOffset":11473,"count":0},{"startOffset":11473,"endOffset":11520,"count":16},{"startOffset":11520,"endOffset":11545,"count":0},{"startOffset":11545,"endOffset":11705,"count":16},{"startOffset":11607,"endOffset":11676,"count":0},{"startOffset":11705,"endOffset":11862,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalDotExportSugar","ranges":[{"startOffset":11865,"endOffset":12684,"count":2},{"startOffset":11974,"endOffset":12683,"count":0}],"isBlockCoverage":true},{"functionName":"applyExports","ranges":[{"startOffset":12686,"endOffset":14595,"count":189},{"startOffset":12850,"endOffset":12872,"count":2},{"startOffset":12878,"endOffset":12891,"count":187},{"startOffset":12891,"endOffset":14527,"count":2},{"startOffset":13270,"endOffset":14523,"count":0},{"startOffset":14527,"endOffset":14594,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":14756,"endOffset":15195,"count":627},{"startOffset":14958,"endOffset":14963,"count":438},{"startOffset":14978,"endOffset":15001,"count":438},{"startOffset":15001,"endOffset":15126,"count":189},{"startOffset":15126,"endOffset":15171,"count":2},{"startOffset":15171,"endOffset":15194,"count":187}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":15197,"endOffset":15446,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":15448,"endOffset":18694,"count":2},{"startOffset":16009,"endOffset":16036,"count":0},{"startOffset":16070,"endOffset":16106,"count":0},{"startOffset":16114,"endOffset":16141,"count":0},{"startOffset":16186,"endOffset":16308,"count":0},{"startOffset":16650,"endOffset":18693,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18760,"endOffset":21512,"count":663},{"startOffset":18870,"endOffset":18893,"count":3},{"startOffset":18893,"endOffset":18956,"count":660},{"startOffset":18933,"endOffset":18956,"count":0},{"startOffset":19032,"endOffset":19042,"count":521},{"startOffset":19043,"endOffset":19063,"count":142},{"startOffset":19128,"endOffset":19141,"count":82},{"startOffset":19141,"endOffset":19264,"count":581},{"startOffset":19288,"endOffset":19425,"count":581},{"startOffset":19425,"endOffset":21493,"count":864},{"startOffset":19523,"endOffset":19543,"count":862},{"startOffset":19545,"endOffset":19554,"count":235},{"startOffset":19554,"endOffset":19582,"count":629},{"startOffset":19582,"endOffset":19837,"count":627},{"startOffset":19756,"endOffset":19762,"count":0},{"startOffset":19790,"endOffset":19831,"count":2},{"startOffset":19837,"endOffset":21144,"count":627},{"startOffset":19988,"endOffset":20921,"count":16},{"startOffset":20021,"endOffset":20189,"count":15},{"startOffset":20055,"endOffset":20115,"count":0},{"startOffset":20189,"endOffset":20913,"count":1},{"startOffset":20221,"endOffset":20853,"count":0},{"startOffset":20944,"endOffset":21138,"count":611},{"startOffset":21034,"endOffset":21072,"count":563},{"startOffset":21144,"endOffset":21164,"count":627},{"startOffset":21164,"endOffset":21175,"count":211},{"startOffset":21177,"endOffset":21393,"count":163},{"startOffset":21287,"endOffset":21325,"count":0},{"startOffset":21393,"endOffset":21413,"count":627},{"startOffset":21413,"endOffset":21489,"count":579},{"startOffset":21493,"endOffset":21511,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":21756,"endOffset":23147,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23239,"endOffset":24280,"count":466},{"startOffset":23517,"endOffset":23542,"count":0},{"startOffset":23835,"endOffset":24173,"count":55703},{"startOffset":23915,"endOffset":24043,"count":4805},{"startOffset":23952,"endOffset":24002,"count":4309},{"startOffset":24043,"endOffset":24167,"count":50898},{"startOffset":24063,"endOffset":24167,"count":12937},{"startOffset":24098,"endOffset":24124,"count":8628},{"startOffset":24124,"endOffset":24159,"count":4309}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":24314,"endOffset":25452,"count":662},{"startOffset":24392,"endOffset":24458,"count":0},{"startOffset":24527,"endOffset":24678,"count":518},{"startOffset":24591,"endOffset":24625,"count":375},{"startOffset":24626,"endOffset":24677,"count":0},{"startOffset":24680,"endOffset":24924,"count":144},{"startOffset":24735,"endOffset":24750,"count":143},{"startOffset":24751,"endOffset":24773,"count":143},{"startOffset":24775,"endOffset":24824,"count":143},{"startOffset":24913,"endOffset":24919,"count":0},{"startOffset":24924,"endOffset":24992,"count":518},{"startOffset":24993,"endOffset":25012,"count":518},{"startOffset":25014,"endOffset":25263,"count":0},{"startOffset":25263,"endOffset":25451,"count":518}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":25455,"endOffset":25638,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25831,"endOffset":26203,"count":1},{"startOffset":26119,"endOffset":26139,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":26208,"endOffset":26449,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":26649,"endOffset":27258,"count":6},{"startOffset":27085,"endOffset":27230,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":27670,"endOffset":30440,"count":947},{"startOffset":27753,"endOffset":28530,"count":946},{"startOffset":28173,"endOffset":28526,"count":224},{"startOffset":28363,"endOffset":28413,"count":0},{"startOffset":28458,"endOffset":28526,"count":0},{"startOffset":28530,"endOffset":28684,"count":723},{"startOffset":28684,"endOffset":28857,"count":196},{"startOffset":28770,"endOffset":28820,"count":6},{"startOffset":28820,"endOffset":28857,"count":190},{"startOffset":28857,"endOffset":28920,"count":527},{"startOffset":28920,"endOffset":28947,"count":61},{"startOffset":28949,"endOffset":28968,"count":61},{"startOffset":28968,"endOffset":29099,"count":466},{"startOffset":29099,"endOffset":29158,"count":1},{"startOffset":29158,"endOffset":29532,"count":466},{"startOffset":29532,"endOffset":29722,"count":0},{"startOffset":29722,"endOffset":30412,"count":466},{"startOffset":29813,"endOffset":30195,"count":0},{"startOffset":30220,"endOffset":30332,"count":465},{"startOffset":30334,"endOffset":30408,"count":2},{"startOffset":30412,"endOffset":30439,"count":466}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30469,"endOffset":32657,"count":723},{"startOffset":30564,"endOffset":30589,"count":61},{"startOffset":30589,"endOffset":30639,"count":662},{"startOffset":30639,"endOffset":30658,"count":0},{"startOffset":30660,"endOffset":31643,"count":0},{"startOffset":31643,"endOffset":31726,"count":662},{"startOffset":31726,"endOffset":31744,"count":661},{"startOffset":31746,"endOffset":32008,"count":661},{"startOffset":31822,"endOffset":32004,"count":0},{"startOffset":32008,"endOffset":32171,"count":662},{"startOffset":32171,"endOffset":32656,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":32748,"endOffset":34178,"count":466},{"startOffset":33067,"endOffset":33097,"count":0},{"startOffset":33099,"endOffset":33145,"count":0},{"startOffset":33508,"endOffset":33538,"count":0},{"startOffset":33540,"endOffset":33648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33950,"endOffset":34165,"count":0}],"isBlockCoverage":false},{"functionName":"Module.require","ranges":[{"startOffset":34296,"endOffset":34595,"count":946},{"startOffset":34356,"endOffset":34474,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":34775,"endOffset":35643,"count":462},{"startOffset":34848,"endOffset":35188,"count":0},{"startOffset":35532,"endOffset":35641,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35029,"endOffset":35175,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35358,"endOffset":35518,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":35843,"endOffset":37657,"count":462},{"startOffset":35923,"endOffset":36070,"count":0},{"startOffset":36251,"endOffset":36275,"count":0},{"startOffset":36277,"endOffset":37013,"count":0},{"startOffset":37236,"endOffset":37258,"count":1},{"startOffset":37283,"endOffset":37422,"count":0},{"startOffset":37621,"endOffset":37638,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":37716,"endOffset":38247,"count":462},{"startOffset":37935,"endOffset":38150,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":38311,"endOffset":38660,"count":4},{"startOffset":38410,"endOffset":38512,"count":0},{"startOffset":38577,"endOffset":38658,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":38724,"endOffset":39027,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":39030,"endOffset":39455,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":39740,"endOffset":40293,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":40354,"endOffset":41262,"count":1},{"startOffset":40395,"endOffset":40420,"count":0},{"startOffset":40472,"endOffset":40495,"count":0},{"startOffset":40703,"endOffset":40745,"count":0},{"startOffset":41012,"endOffset":41141,"count":0}],"isBlockCoverage":true},{"functionName":"pathsFilterCB","ranges":[{"startOffset":41064,"endOffset":41121,"count":0}],"isBlockCoverage":false},{"functionName":"Module._preloadModules","ranges":[{"startOffset":41290,"endOffset":41796,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":41830,"endOffset":41986,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13190,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":1965,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4129,"endOffset":4424,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4428,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4853,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":5028,"endOffset":5247,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5249,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5842,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6759,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":6976,"endOffset":7809,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":7811,"endOffset":7887,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8041,"endOffset":8479,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8481,"endOffset":8878,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":8880,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9234,"endOffset":9420,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9422,"endOffset":11839,"count":462},{"startOffset":10122,"endOffset":10171,"count":0},{"startOffset":10275,"endOffset":10536,"count":0},{"startOffset":10998,"endOffset":11071,"count":0},{"startOffset":11098,"endOffset":11155,"count":0},{"startOffset":11259,"endOffset":11450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9636,"endOffset":9687,"count":2310}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10645,"endOffset":10777,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":11770,"endOffset":11797,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11974,"endOffset":12703,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1921,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":431,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":772,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":1273,"endOffset":1920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9480,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1415,"endOffset":3784,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3788,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":4415,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":5442,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":6142,"endOffset":6313,"count":0}],"isBlockCoverage":false},{"functionName":"hook","ranges":[{"startOffset":6317,"endOffset":7276,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":7280,"endOffset":8084,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":8088,"endOffset":9404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":394,"endOffset":467,"count":466}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":470,"endOffset":746,"count":466},{"startOffset":598,"endOffset":668,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":749,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3570,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":309,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":593,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"instantiate","ranges":[{"startOffset":1923,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"_instantiate","ranges":[{"startOffset":2280,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":3299,"endOffset":3490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22390,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":1376,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":1839,"endOffset":1944,"count":0}],"isBlockCoverage":false},{"functionName":"readIfFile","ranges":[{"startOffset":1946,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":2196,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3563,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":4797,"endOffset":4876,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":4878,"endOffset":6458,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":6460,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":6647,"endOffset":6904,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIndex","ranges":[{"startOffset":6906,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":6995,"endOffset":7814,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":7816,"endOffset":7989,"count":0}],"isBlockCoverage":false},{"functionName":"throwSubpathInvalid","ranges":[{"startOffset":7991,"endOffset":8162,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsInvalid","ranges":[{"startOffset":8164,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTargetString","ranges":[{"startOffset":8567,"endOffset":9657,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":9712,"endOffset":9852,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":9854,"endOffset":11963,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":11965,"endOffset":12894,"count":0}],"isBlockCoverage":false},{"functionName":"packageMainResolve","ranges":[{"startOffset":12897,"endOffset":14403,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":14588,"endOffset":15860,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":15862,"endOffset":15980,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":16093,"endOffset":19551,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":19553,"endOffset":19923,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":20036,"endOffset":20493,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":20495,"endOffset":22309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2437,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1105,"endOffset":2391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":977,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":373,"endOffset":931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":190,"endOffset":380,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":382,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":613,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7303,"count":1}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":1242,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":1404,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":1601,"endOffset":1883,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1885,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2136,"endOffset":2662,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":2822,"endOffset":3732,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":3858,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":4281,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6391,"endOffset":7300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11983,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1453,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3643,"endOffset":3780,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3784,"endOffset":3917,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":3921,"endOffset":4198,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4202,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4359,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4613,"endOffset":5092,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5096,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6101,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6691,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":6732,"endOffset":9056,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9060,"endOffset":9359,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9363,"endOffset":9632,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":9636,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":9836,"endOffset":10098,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10143,"endOffset":11049,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11053,"endOffset":11355,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11359,"endOffset":11821,"count":462}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11464,"endOffset":11777,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":11943,"endOffset":11978,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2442,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":220,"endOffset":658,"count":1},{"startOffset":487,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":660,"endOffset":1212,"count":1},{"startOffset":784,"endOffset":796,"count":0},{"startOffset":941,"endOffset":953,"count":0},{"startOffset":1048,"endOffset":1060,"count":0},{"startOffset":1111,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1214,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2059,"endOffset":2394,"count":1},{"startOffset":2239,"endOffset":2282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"94","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6497,"count":1}],"isBlockCoverage":true},{"functionName":"supportsESM","ranges":[{"startOffset":247,"endOffset":415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":474,"endOffset":6268,"count":1},{"startOffset":5186,"endOffset":5191,"count":0},{"startOffset":5194,"endOffset":5350,"count":0},{"startOffset":5568,"endOffset":5799,"count":0},{"startOffset":6069,"endOffset":6135,"count":0},{"startOffset":6139,"endOffset":6266,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1028,"endOffset":1234,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1695,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1858,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2076,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2100,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2247,"endOffset":2852,"count":1},{"startOffset":2336,"endOffset":2402,"count":0},{"startOffset":2407,"endOffset":2548,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2578,"endOffset":2847,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2622,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2694,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2889,"endOffset":3071,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getRunner","ranges":[{"startOffset":3125,"endOffset":3177,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3543,"endOffset":3574,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3583,"endOffset":3609,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3845,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4216,"endOffset":4245,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":4310,"endOffset":5133,"count":1},{"startOffset":4418,"endOffset":4976,"count":0},{"startOffset":5018,"endOffset":5104,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6276,"endOffset":6494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/currently-unhandled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/currently-unhandled/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":129,"endOffset":244,"count":0}],"isBlockCoverage":false},{"functionName":"onRejectionHandled","ranges":[{"startOffset":247,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"currentlyUnhandled","ranges":[{"startOffset":436,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/array-find-index/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/ensure-forked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1},{"startOffset":226,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"99","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5810,"count":1},{"startOffset":1506,"endOffset":1738,"count":44},{"startOffset":2031,"endOffset":2326,"count":8},{"startOffset":2360,"endOffset":2726,"count":8},{"startOffset":5685,"endOffset":5704,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":404,"endOffset":783,"count":4},{"startOffset":451,"endOffset":532,"count":2},{"startOffset":534,"endOffset":612,"count":0},{"startOffset":683,"endOffset":702,"count":0},{"startOffset":752,"endOffset":764,"count":1},{"startOffset":765,"endOffset":780,"count":3}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":806,"endOffset":915,"count":2}],"isBlockCoverage":true},{"functionName":"chalkFactory","ranges":[{"startOffset":940,"endOffset":1382,"count":4}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1022,"endOffset":1080,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1209,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1385,"endOffset":1443,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1533,"endOffset":1732,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1760,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2054,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2450,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2766,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2822,"endOffset":2866,"count":33}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2870,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2950,"endOffset":3224,"count":4},{"startOffset":3075,"endOffset":3158,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3249,"endOffset":3833,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3297,"endOffset":3550,"count":33},{"startOffset":3523,"endOffset":3545,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":3855,"endOffset":4895,"count":33},{"startOffset":3908,"endOffset":3950,"count":0},{"startOffset":4008,"endOffset":4029,"count":0},{"startOffset":4106,"endOffset":4435,"count":0},{"startOffset":4772,"endOffset":4855,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":4929,"endOffset":5501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":5},{"startOffset":2869,"endOffset":3201,"count":15},{"startOffset":2929,"endOffset":3108,"count":220}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2765,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2456,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1675,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2458,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"os.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7480,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":1877,"endOffset":2118,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":1936,"endOffset":2114,"count":1},{"startOffset":2048,"endOffset":2094,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2396,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2429,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2462,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2510,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2563,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2618,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2671,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2724,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":2784,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":2843,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":2895,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3003,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3105,"endOffset":3517,"count":1},{"startOffset":3207,"endOffset":3212,"count":0},{"startOffset":3274,"endOffset":3498,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":3519,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":3588,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":3609,"endOffset":3659,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":3690,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":3715,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":4261,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":4278,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":4358,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":4463,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":4718,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":5434,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":6113,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":6404,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":6661,"endOffset":6887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1611,"count":3}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1613,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2246,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2465,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3722,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4206,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4383,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4565,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4746,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4921,"endOffset":4971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6291,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2451,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3061,"endOffset":5812,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":5814,"endOffset":6238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"106","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107,"endOffset":399,"count":2},{"startOffset":139,"endOffset":153,"count":0},{"startOffset":186,"endOffset":260,"count":1},{"startOffset":263,"endOffset":323,"count":0},{"startOffset":326,"endOffset":373,"count":1},{"startOffset":376,"endOffset":394,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":496,"endOffset":575,"count":8}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":599,"endOffset":645,"count":2}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":709,"endOffset":1010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":965,"count":1}],"isBlockCoverage":true}]},{"scriptId":"108","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8851,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":300,"endOffset":478,"count":28},{"startOffset":373,"endOffset":405,"count":9},{"startOffset":407,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"assertListener","ranges":[{"startOffset":480,"endOffset":613,"count":9},{"startOffset":553,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"getListeners","ranges":[{"startOffset":615,"endOffset":804,"count":25},{"startOffset":730,"endOffset":770,"count":10}],"isBlockCoverage":true},{"functionName":"getEventProducers","ranges":[{"startOffset":806,"endOffset":1067,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1069,"endOffset":1479,"count":16},{"startOffset":1207,"endOffset":1300,"count":0},{"startOffset":1335,"endOffset":1477,"count":0}],"isBlockCoverage":true},{"functionName":"iterator","ranges":[{"startOffset":1481,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2397,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"isListenerSymbol","ranges":[{"startOffset":2945,"endOffset":3009,"count":25},{"startOffset":2980,"endOffset":3009,"count":18}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3037,"endOffset":4117,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":4120,"endOffset":4240,"count":2}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4243,"endOffset":4523,"count":7}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":4526,"endOffset":4761,"count":2}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":4764,"endOffset":4936,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4803,"endOffset":4931,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4881,"endOffset":4925,"count":2}],"isBlockCoverage":true},{"functionName":"events","ranges":[{"startOffset":4939,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5030,"endOffset":5689,"count":16},{"startOffset":5336,"endOffset":5340,"count":9},{"startOffset":5341,"endOffset":5360,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5437,"endOffset":5535,"count":7},{"startOffset":5530,"endOffset":5534,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5567,"endOffset":5679,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":5692,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":6310,"endOffset":6475,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":6478,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":6521,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":6652,"endOffset":7206,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":7209,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":7733,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8322,"endOffset":8346,"count":13}],"isBlockCoverage":true}]},{"scriptId":"109","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":48,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":164,"endOffset":276,"count":1},{"startOffset":194,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/chalk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":77,"endOffset":172,"count":1},{"startOffset":96,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"exports.set","ranges":[{"startOffset":189,"endOffset":324,"count":1},{"startOffset":212,"endOffset":272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"111","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/now-and-timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"112","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/provider-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1241,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":235,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"exports.babel","ranges":[{"startOffset":1123,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"exports.typescript","ranges":[{"startOffset":1190,"endOffset":1239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/globs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535,"endOffset":563,"count":7}],"isBlockCoverage":true},{"functionName":"buildExtensionPattern","ranges":[{"startOffset":965,"endOffset":1048,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePatterns","ranges":[{"startOffset":1051,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGlobs","ranges":[{"startOffset":1504,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":3417,"endOffset":3487,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":3546,"endOffset":4193,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":4196,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"findTests","ranges":[{"startOffset":4384,"endOffset":4558,"count":0}],"isBlockCoverage":false},{"functionName":"getChokidarIgnorePatterns","ranges":[{"startOffset":4592,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"processMatchingPatterns","ranges":[{"startOffset":4943,"endOffset":5493,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":5496,"endOffset":5605,"count":0}],"isBlockCoverage":false},{"functionName":"matchesIgnorePatterns","ranges":[{"startOffset":5665,"endOffset":5807,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFileForMatching","ranges":[{"startOffset":5810,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"isHelperish","ranges":[{"startOffset":6389,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":7048,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"applyTestFileFilter","ranges":[{"startOffset":7423,"endOffset":7569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1}],"isBlockCoverage":true},{"functionName":"DEFAULT_FILTER","ranges":[{"startOffset":323,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":356,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":416,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"checkCwdOption","ranges":[{"startOffset":599,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"getPathString","ranges":[{"startOffset":862,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobTasks","ranges":[{"startOffset":936,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"globDirs","ranges":[{"startOffset":1555,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"getPattern","ranges":[{"startOffset":1981,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterSync","ranges":[{"startOffset":2088,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"globToTask","ranges":[{"startOffset":2244,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2487,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":3240,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.stream","ranges":[{"startOffset":3705,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.hasMagic","ranges":[{"startOffset":4302,"endOffset":4409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"internal/fs/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13449,"count":1}],"isBlockCoverage":false},{"functionName":"allocNewPool","ranges":[{"startOffset":1130,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"checkPosition","ranges":[{"startOffset":1348,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"roundUpToMultipleOf8","ranges":[{"startOffset":1708,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1799,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4028,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"_openReadFs","ranges":[{"startOffset":4163,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":4675,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7202,"endOffset":7489,"count":0}],"isBlockCoverage":false},{"functionName":"closeFsStream","ranges":[{"startOffset":7492,"endOffset":7648,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":7679,"endOffset":7765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7826,"endOffset":7860,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":7888,"endOffset":10133,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._final","ranges":[{"startOffset":10276,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10479,"endOffset":10515,"count":0}],"isBlockCoverage":false},{"functionName":"_openWriteFs","ranges":[{"startOffset":10618,"endOffset":11051,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":11085,"endOffset":11753,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11789,"endOffset":12679,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12777,"endOffset":13174,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13337,"endOffset":13371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15615,"count":1}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":1696,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncId","ranges":[{"startOffset":1792,"endOffset":1849,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":1853,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":1893,"endOffset":1967,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":1971,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2023,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2083,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2131,"endOffset":2167,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2171,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":2276,"endOffset":2349,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2353,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":2416,"endOffset":2468,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":2532,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2602,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":2709,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":2788,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2865,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"validateFileHandle","ranges":[{"startOffset":2942,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":3094,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":3445,"endOffset":4308,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":4461,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4684,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":5162,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5489,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":6243,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":6595,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":7549,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":7913,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":8221,"endOffset":8356,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":8358,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":8549,"endOffset":8812,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":8814,"endOffset":8933,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":8935,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":9048,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":9582,"endOffset":10034,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":10036,"endOffset":10279,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":10281,"endOffset":10694,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":10696,"endOffset":10904,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":10906,"endOffset":11176,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":11178,"endOffset":11445,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":11447,"endOffset":11770,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":11772,"endOffset":11910,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":11912,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":12077,"endOffset":12263,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":12265,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":12488,"endOffset":12730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":12732,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":12927,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":13168,"endOffset":13440,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":13442,"endOffset":13671,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":13673,"endOffset":13850,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":13852,"endOffset":14182,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":14184,"endOffset":14680,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":14682,"endOffset":14923,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":14925,"endOffset":15229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7030,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1122,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1585,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2446,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2884,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3185,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3860,"endOffset":4058,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4061,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4769,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5255,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6534,"endOffset":6970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/array-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2792,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2242,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2281,"endOffset":2791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1},{"startOffset":2151,"endOffset":2169,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":284,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":627,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":654,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":874,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1411,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1710,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":1981,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":2173,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":2477,"endOffset":2794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2972,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":115,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":827,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1424,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":1578,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":1893,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2363,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":2646,"endOffset":2906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true}]},{"scriptId":"123","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":583,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":79,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":218,"endOffset":549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":79,"endOffset":154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":108,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":582,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":314,"endOffset":387,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":417,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":539,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":660,"endOffset":1158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4298,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":554,"endOffset":655,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":701,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":1523,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":1703,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":1841,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":1990,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":2121,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":2266,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":2411,"endOffset":2511,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":2559,"endOffset":2633,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":2671,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":2819,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":3064,"endOffset":3254,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":3334,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":3529,"endOffset":3826,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":3872,"endOffset":3959,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":3987,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":4158,"endOffset":4266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":447,"endOffset":1104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":405,"endOffset":1151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13682,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":187,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":807,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2804,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3457,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4220,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5371,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6710,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7742,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8840,"endOffset":9096,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":9897,"endOffset":10105,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10816,"endOffset":11112,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11564,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":11951,"endOffset":11987,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12373,"endOffset":12593,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13160,"endOffset":13397,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13451,"endOffset":13620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8085,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2076,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2140,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2189,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2270,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2332,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2394,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":2456,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2515,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2593,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2698,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2764,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2885,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":3083,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3399,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":4288,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":4906,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5242,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5671,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7054,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":7631,"endOffset":7836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"144","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9377,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":14},{"startOffset":242,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":15},{"startOffset":1087,"endOffset":1365,"count":1},{"startOffset":1365,"endOffset":1400,"count":14},{"startOffset":1400,"endOffset":1414,"count":0},{"startOffset":1415,"endOffset":1428,"count":0},{"startOffset":1449,"endOffset":1490,"count":14},{"startOffset":1478,"endOffset":1489,"count":0},{"startOffset":1492,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1597,"count":14},{"startOffset":1669,"endOffset":1705,"count":0},{"startOffset":1710,"endOffset":1756,"count":14},{"startOffset":1861,"endOffset":2015,"count":0},{"startOffset":2015,"endOffset":2783,"count":14},{"startOffset":2783,"endOffset":2815,"count":0},{"startOffset":2815,"endOffset":2835,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":1161,"count":14}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1189,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1829,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":2035,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7249,"endOffset":7765,"count":14},{"startOffset":7344,"endOffset":7375,"count":0},{"startOffset":7439,"endOffset":7443,"count":0},{"startOffset":7482,"endOffset":7486,"count":0},{"startOffset":7594,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":7787,"endOffset":8538,"count":14},{"startOffset":7895,"endOffset":7956,"count":0},{"startOffset":8104,"endOffset":8172,"count":0},{"startOffset":8226,"endOffset":8245,"count":8},{"startOffset":8248,"endOffset":8299,"count":8},{"startOffset":8422,"endOffset":8461,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9000,"endOffset":9228,"count":14},{"startOffset":9120,"endOffset":9125,"count":0},{"startOffset":9138,"endOffset":9226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8955,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1438,"endOffset":8929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":36},{"startOffset":1010,"endOffset":1049,"count":0},{"startOffset":1051,"endOffset":1084,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":22},{"startOffset":1505,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":6},{"startOffset":1682,"endOffset":1686,"count":0},{"startOffset":1728,"endOffset":1732,"count":0},{"startOffset":1821,"endOffset":1864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":14}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":22},{"startOffset":4410,"endOffset":4425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27098,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":24549,"count":14},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2111,"endOffset":2115,"count":0},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2212,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2287,"count":0},{"startOffset":2359,"endOffset":2397,"count":0},{"startOffset":6228,"endOffset":7451,"count":6},{"startOffset":7025,"endOffset":7258,"count":0},{"startOffset":7285,"endOffset":7310,"count":3},{"startOffset":7312,"endOffset":7367,"count":0},{"startOffset":7451,"endOffset":7532,"count":8},{"startOffset":7532,"endOffset":23426,"count":43},{"startOffset":7586,"endOffset":7609,"count":0},{"startOffset":7678,"endOffset":8506,"count":0},{"startOffset":8652,"endOffset":8715,"count":0},{"startOffset":8717,"endOffset":9849,"count":0},{"startOffset":9992,"endOffset":10008,"count":0},{"startOffset":10010,"endOffset":10125,"count":0},{"startOffset":10188,"endOffset":10345,"count":0},{"startOffset":10406,"endOffset":10494,"count":0},{"startOffset":10519,"endOffset":10954,"count":0},{"startOffset":11019,"endOffset":11378,"count":0},{"startOffset":11403,"endOffset":12858,"count":0},{"startOffset":12913,"endOffset":12937,"count":0},{"startOffset":12939,"endOffset":13206,"count":0},{"startOffset":13231,"endOffset":14361,"count":0},{"startOffset":14416,"endOffset":14569,"count":0},{"startOffset":14625,"endOffset":14886,"count":0},{"startOffset":14943,"endOffset":15553,"count":7},{"startOffset":15234,"endOffset":15268,"count":0},{"startOffset":15270,"endOffset":15469,"count":0},{"startOffset":15553,"endOffset":15607,"count":36},{"startOffset":15607,"endOffset":16173,"count":3},{"startOffset":15636,"endOffset":15658,"count":0},{"startOffset":15660,"endOffset":15909,"count":0},{"startOffset":15980,"endOffset":16004,"count":0},{"startOffset":16006,"endOffset":16093,"count":0},{"startOffset":16173,"endOffset":16237,"count":33},{"startOffset":16237,"endOffset":17174,"count":0},{"startOffset":17174,"endOffset":17235,"count":33},{"startOffset":17235,"endOffset":17535,"count":0},{"startOffset":17535,"endOffset":17589,"count":33},{"startOffset":17589,"endOffset":18139,"count":0},{"startOffset":18139,"endOffset":18199,"count":33},{"startOffset":18199,"endOffset":18424,"count":0},{"startOffset":18424,"endOffset":18484,"count":33},{"startOffset":18484,"endOffset":18785,"count":8},{"startOffset":18528,"endOffset":18567,"count":0},{"startOffset":18785,"endOffset":18881,"count":25},{"startOffset":18883,"endOffset":19090,"count":0},{"startOffset":19090,"endOffset":19175,"count":25},{"startOffset":19177,"endOffset":19234,"count":0},{"startOffset":19234,"endOffset":19266,"count":25},{"startOffset":19266,"endOffset":22465,"count":9},{"startOffset":19304,"endOffset":19355,"count":0},{"startOffset":19466,"endOffset":19489,"count":2},{"startOffset":19522,"endOffset":19579,"count":7},{"startOffset":19611,"endOffset":19656,"count":0},{"startOffset":19658,"endOffset":19736,"count":0},{"startOffset":19777,"endOffset":19830,"count":0},{"startOffset":19872,"endOffset":19924,"count":0},{"startOffset":19945,"endOffset":19970,"count":0},{"startOffset":19971,"endOffset":19982,"count":0},{"startOffset":19983,"endOffset":19996,"count":0},{"startOffset":19998,"endOffset":20076,"count":0},{"startOffset":20153,"endOffset":20330,"count":0},{"startOffset":20363,"endOffset":20371,"count":2},{"startOffset":20373,"endOffset":20590,"count":0},{"startOffset":20625,"endOffset":20653,"count":7},{"startOffset":20654,"endOffset":20667,"count":7},{"startOffset":20668,"endOffset":20676,"count":7},{"startOffset":20678,"endOffset":21078,"count":0},{"startOffset":21113,"endOffset":21141,"count":7},{"startOffset":21142,"endOffset":21160,"count":7},{"startOffset":21162,"endOffset":21695,"count":7},{"startOffset":21210,"endOffset":21214,"count":0},{"startOffset":21695,"endOffset":21746,"count":2},{"startOffset":21748,"endOffset":22078,"count":2},{"startOffset":22078,"endOffset":22465,"count":0},{"startOffset":22465,"endOffset":22553,"count":16},{"startOffset":22553,"endOffset":22734,"count":0},{"startOffset":22734,"endOffset":22802,"count":16},{"startOffset":22803,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22897,"count":0},{"startOffset":22897,"endOffset":22935,"count":16},{"startOffset":22935,"endOffset":22959,"count":14},{"startOffset":22960,"endOffset":22982,"count":0},{"startOffset":22984,"endOffset":23404,"count":16},{"startOffset":23017,"endOffset":23102,"count":0},{"startOffset":23131,"endOffset":23218,"count":0},{"startOffset":23322,"endOffset":23398,"count":7},{"startOffset":23404,"endOffset":23426,"count":16},{"startOffset":23426,"endOffset":23457,"count":8},{"startOffset":23457,"endOffset":23635,"count":0},{"startOffset":23635,"endOffset":23664,"count":8},{"startOffset":23664,"endOffset":23840,"count":0},{"startOffset":23840,"endOffset":23869,"count":8},{"startOffset":23869,"endOffset":24045,"count":0},{"startOffset":24045,"endOffset":24133,"count":8},{"startOffset":24106,"endOffset":24132,"count":1},{"startOffset":24135,"endOffset":24215,"count":7},{"startOffset":24215,"endOffset":24309,"count":8},{"startOffset":24309,"endOffset":24530,"count":0},{"startOffset":24530,"endOffset":24548,"count":8}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1977,"endOffset":2083,"count":9},{"startOffset":2044,"endOffset":2056,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2891,"endOffset":2920,"count":60}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2950,"endOffset":2983,"count":16}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":3019,"endOffset":3045,"count":52}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3067,"endOffset":3101,"count":33}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3121,"endOffset":3204,"count":59}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3223,"endOffset":3334,"count":50},{"startOffset":3275,"endOffset":3289,"count":42},{"startOffset":3290,"endOffset":3303,"count":8}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3354,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3653,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3730,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4104,"endOffset":5060,"count":50},{"startOffset":4147,"endOffset":4639,"count":9},{"startOffset":4188,"endOffset":4237,"count":0},{"startOffset":4304,"endOffset":4352,"count":0},{"startOffset":4387,"endOffset":4410,"count":0},{"startOffset":4411,"endOffset":4422,"count":0},{"startOffset":4423,"endOffset":4436,"count":0},{"startOffset":4438,"endOffset":4633,"count":0},{"startOffset":4665,"endOffset":4688,"count":0},{"startOffset":4689,"endOffset":4717,"count":0},{"startOffset":4719,"endOffset":4782,"count":0},{"startOffset":4802,"endOffset":4815,"count":7},{"startOffset":4867,"endOffset":4889,"count":7},{"startOffset":4891,"endOffset":4996,"count":0}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5085,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5542,"endOffset":6126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6320,"endOffset":6991,"count":4},{"startOffset":6387,"endOffset":6442,"count":0},{"startOffset":6469,"endOffset":6730,"count":0},{"startOffset":6757,"endOffset":6815,"count":3},{"startOffset":6815,"endOffset":6842,"count":1},{"startOffset":6842,"endOffset":6952,"count":0},{"startOffset":6952,"endOffset":6970,"count":1},{"startOffset":6970,"endOffset":6973,"count":0},{"startOffset":6974,"endOffset":6984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7162,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":24772,"endOffset":27071,"count":8},{"startOffset":24874,"endOffset":24912,"count":0},{"startOffset":24972,"endOffset":25068,"count":0},{"startOffset":25422,"endOffset":25431,"count":0},{"startOffset":25470,"endOffset":25485,"count":0},{"startOffset":25527,"endOffset":25531,"count":0},{"startOffset":25620,"endOffset":25627,"count":0},{"startOffset":25657,"endOffset":25686,"count":0},{"startOffset":26979,"endOffset":27009,"count":0},{"startOffset":27011,"endOffset":27051,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":25707,"endOffset":25860,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":25880,"endOffset":26880,"count":10},{"startOffset":25914,"endOffset":25968,"count":0},{"startOffset":25976,"endOffset":26037,"count":0},{"startOffset":26045,"endOffset":26122,"count":0},{"startOffset":26130,"endOffset":26220,"count":0},{"startOffset":26228,"endOffset":26277,"count":0},{"startOffset":26285,"endOffset":26391,"count":0},{"startOffset":26399,"endOffset":26528,"count":0},{"startOffset":26536,"endOffset":26646,"count":0},{"startOffset":26735,"endOffset":26742,"count":8},{"startOffset":26742,"endOffset":26813,"count":2},{"startOffset":26813,"endOffset":26870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":621,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":114,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":512,"endOffset":619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":79,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":179,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1041,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":224,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":344,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":811,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":296,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":436,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":528,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1311,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1630,"endOffset":1887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":250,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":559,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":731,"endOffset":937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1116,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":960,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1034,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":139,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":574,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":242,"endOffset":464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":303,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":655,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":885,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1123,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":152,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":371,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":778,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":852,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3115,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":326,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":843,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1080,"endOffset":1280,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1286,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1364,"endOffset":1438,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1444,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1520,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1768,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2157,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2399,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3007,"endOffset":3078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":957,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":250,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":568,"endOffset":711,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":749,"endOffset":955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3471,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":244,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":523,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1490,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2086,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3315,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3389,"endOffset":3469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":30,"endOffset":898,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":509,"endOffset":552,"count":0},{"startOffset":675,"endOffset":707,"count":0}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":108,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":582,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":206,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":455,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1320,"endOffset":1868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":215,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":962,"endOffset":1050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":302,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3517,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":48,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3121,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3142,"endOffset":3488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":79,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":275,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":411,"endOffset":526,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":596,"endOffset":721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":136,"endOffset":337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":190,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":557,"endOffset":918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":149,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":331,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":431,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":583,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":674,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":829,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1175,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1323,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1847,"endOffset":1912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":183,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1122,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":211,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":537,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":639,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":946,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":315,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":712,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":811,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1593,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2299,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":193,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":342,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":595,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":721,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":982,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1534,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":1628,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1758,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2000,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2139,"endOffset":2263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1459,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":174,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1930,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":139,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":395,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":1118,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1727,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2224,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":143,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":325,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":637,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1310,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1393,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1481,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1586,"endOffset":1701,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1707,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2002,"endOffset":2187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":143,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":217,"endOffset":294,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":300,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":222,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":304,"endOffset":829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":262,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":382,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":998,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":219,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":337,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":573,"endOffset":764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":257,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":401,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":491,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":909,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1246,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2526,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":396,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2258,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2352,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/dir-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":106,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":206,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"addExtensions","ranges":[{"startOffset":376,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"getGlob","ranges":[{"startOffset":525,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1344,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1877,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/path-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":71,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"typeSync","ranges":[{"startOffset":367,"endOffset":619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/path-type/node_modules/pify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1808,"count":1}],"isBlockCoverage":true},{"functionName":"processFn","ranges":[{"startOffset":33,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1030,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/gitignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2570,"count":1}],"isBlockCoverage":true},{"functionName":"mapGitIgnorePatternTo","ranges":[{"startOffset":392,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"parseGitIgnore","ranges":[{"startOffset":568,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"reduceIgnore","ranges":[{"startOffset":830,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"ensureAbsolutePathForCwd","ranges":[{"startOffset":1053,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"getIsIgnoredPredecate","ranges":[{"startOffset":1257,"endOffset":1369,"count":0}],"isBlockCoverage":false},{"functionName":"getFile","ranges":[{"startOffset":1388,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSync","ranges":[{"startOffset":1571,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1753,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1855,"endOffset":2210,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2235,"endOffset":2568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11552,"count":1},{"startOffset":390,"endOffset":405,"count":0},{"startOffset":11141,"endOffset":11498,"count":0}],"isBlockCoverage":true},{"functionName":"make_array","ranges":[{"startOffset":41,"endOffset":136,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":422,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":665,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":1769,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":1881,"endOffset":1890,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2545,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":2703,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":2874,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":3138,"endOffset":3147,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":3238,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_PREFIX","ranges":[{"startOffset":3670,"endOffset":3689,"count":0}],"isBlockCoverage":false},{"functionName":"startingReplacer","ranges":[{"startOffset":3946,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":4690,"endOffset":5164,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5437,"endOffset":5466,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_SUFFIX","ranges":[{"startOffset":5527,"endOffset":5862,"count":0}],"isBlockCoverage":false},{"functionName":"DEFAULT_REPLACER_SUFFIX","ranges":[{"startOffset":5908,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"POSITIVE_REPLACERS","ranges":[{"startOffset":6364,"endOffset":6392,"count":0}],"isBlockCoverage":false},{"functionName":"NEGATIVE_REPLACERS","ranges":[{"startOffset":6811,"endOffset":6840,"count":0}],"isBlockCoverage":false},{"functionName":"make_regex","ranges":[{"startOffset":7029,"endOffset":7422,"count":0}],"isBlockCoverage":false},{"functionName":"checkPattern","ranges":[{"startOffset":7529,"endOffset":7701,"count":0}],"isBlockCoverage":false},{"functionName":"createRule","ranges":[{"startOffset":7722,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreBase","ranges":[{"startOffset":8456,"endOffset":8620,"count":0}],"isBlockCoverage":false},{"functionName":"_initCache","ranges":[{"startOffset":8624,"endOffset":8681,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":8736,"endOffset":9078,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":9094,"endOffset":9149,"count":0}],"isBlockCoverage":false},{"functionName":"_addPattern","ranges":[{"startOffset":9153,"endOffset":9483,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":9487,"endOffset":9571,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":9575,"endOffset":9634,"count":0}],"isBlockCoverage":false},{"functionName":"ignores","ranges":[{"startOffset":9638,"endOffset":9689,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":9751,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"_test","ranges":[{"startOffset":10452,"endOffset":10844,"count":0}],"isBlockCoverage":false},{"functionName":"make_posix","ranges":[{"startOffset":11250,"endOffset":11349,"count":0}],"isBlockCoverage":false},{"functionName":"filterWin32","ranges":[{"startOffset":11384,"endOffset":11496,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":11517,"endOffset":11551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/stream-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectTransform","ranges":[{"startOffset":97,"endOffset":151,"count":0}],"isBlockCoverage":false},{"functionName":"FilterStream","ranges":[{"startOffset":201,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":264,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"UniqueStream","ranges":[{"startOffset":422,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":482,"endOffset":622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ignore-by-default/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"exports.directories","ranges":[{"startOffset":36,"endOffset":613,"count":1}],"isBlockCoverage":true}]},{"scriptId":"198","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13809,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":410,"endOffset":4934,"count":1},{"startOffset":491,"endOffset":496,"count":0},{"startOffset":672,"endOffset":677,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.registerUniqueTitle","ranges":[{"startOffset":1436,"endOffset":1560,"count":1},{"startOffset":1483,"endOffset":1507,"count":0}],"isBlockCoverage":true},{"functionName":"get snapshotDirectory","ranges":[{"startOffset":1676,"endOffset":1858,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.chain.createChain.serial","ranges":[{"startOffset":1892,"endOffset":4719,"count":2},{"startOffset":1971,"endOffset":2121,"count":0},{"startOffset":2147,"endOffset":2260,"count":1},{"startOffset":2367,"endOffset":3182,"count":0},{"startOffset":3228,"endOffset":3347,"count":0},{"startOffset":3489,"endOffset":3500,"count":1},{"startOffset":3502,"endOffset":3575,"count":0},{"startOffset":3595,"endOffset":3842,"count":1},{"startOffset":3633,"endOffset":3697,"count":0},{"startOffset":3724,"endOffset":3780,"count":0},{"startOffset":3878,"endOffset":3913,"count":1},{"startOffset":3915,"endOffset":3980,"count":0},{"startOffset":4123,"endOffset":4587,"count":1},{"startOffset":4158,"endOffset":4279,"count":0},{"startOffset":4316,"endOffset":4362,"count":0},{"startOffset":4397,"endOffset":4407,"count":0},{"startOffset":4587,"endOffset":4704,"count":1},{"startOffset":4668,"endOffset":4678,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2197,"endOffset":2253,"count":1}],"isBlockCoverage":true},{"functionName":"compareTestSnapshot","ranges":[{"startOffset":4937,"endOffset":5320,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotState","ranges":[{"startOffset":5323,"endOffset":5665,"count":1},{"startOffset":5367,"endOffset":5405,"count":0},{"startOffset":5435,"endOffset":5646,"count":0}],"isBlockCoverage":true},{"functionName":"onRun","ranges":[{"startOffset":5668,"endOffset":5726,"count":2}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":5729,"endOffset":5798,"count":2}],"isBlockCoverage":true},{"functionName":"attributeLeakedError","ranges":[{"startOffset":5801,"endOffset":5968,"count":0}],"isBlockCoverage":false},{"functionName":"beforeExitHandler","ranges":[{"startOffset":5971,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"runMultiple","ranges":[{"startOffset":6088,"endOffset":7304,"count":6}],"isBlockCoverage":true},{"functionName":"runAndStoreResult","ranges":[{"startOffset":6199,"endOffset":6357,"count":1},{"startOffset":6292,"endOffset":6321,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6426,"endOffset":7246,"count":1},{"startOffset":6500,"endOffset":6787,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6536,"endOffset":6754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6850,"endOffset":7234,"count":1},{"startOffset":7168,"endOffset":7195,"count":0}],"isBlockCoverage":true},{"functionName":"runSingle","ranges":[{"startOffset":7307,"endOffset":7578,"count":2}],"isBlockCoverage":true},{"functionName":"runHooks","ranges":[{"startOffset":7581,"endOffset":8665,"count":6},{"startOffset":8231,"endOffset":8633,"count":1},{"startOffset":8409,"endOffset":8629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7668,"endOffset":8120,"count":1},{"startOffset":7829,"endOffset":7894,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":7835,"endOffset":7894,"count":0}],"isBlockCoverage":false},{"functionName":"runTest","ranges":[{"startOffset":8668,"endOffset":10276,"count":1},{"startOffset":9122,"endOffset":9188,"count":0},{"startOffset":9809,"endOffset":10128,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":9129,"endOffset":9188,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":10279,"endOffset":13734,"count":1},{"startOffset":10391,"endOffset":10720,"count":0},{"startOffset":10797,"endOffset":10824,"count":0},{"startOffset":10826,"endOffset":10846,"count":0},{"startOffset":11080,"endOffset":11116,"count":0},{"startOffset":11211,"endOffset":11440,"count":0},{"startOffset":11477,"endOffset":11504,"count":0},{"startOffset":11506,"endOffset":11602,"count":0},{"startOffset":13676,"endOffset":13731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11829,"endOffset":12437,"count":1},{"startOffset":11972,"endOffset":11996,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12027,"endOffset":12425,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12517,"endOffset":13187,"count":1},{"startOffset":12762,"endOffset":12778,"count":0},{"startOffset":12781,"endOffset":12805,"count":0},{"startOffset":12876,"endOffset":12899,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13080,"endOffset":13144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13173,"endOffset":13181,"count":1}],"isBlockCoverage":true},{"functionName":"interrupt","ranges":[{"startOffset":13737,"endOffset":13780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/matcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1759,"count":1}],"isBlockCoverage":true},{"functionName":"makeRegexp","ranges":[{"startOffset":107,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":660,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.isMatch","ranges":[{"startOffset":1375,"endOffset":1757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/matcher/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/context-ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"ContextRef","ranges":[{"startOffset":74,"endOffset":111,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":114,"endOffset":145,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":148,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":194,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"LateBinding","ranges":[{"startOffset":310,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":479,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":482,"endOffset":544,"count":1}],"isBlockCoverage":true}]},{"scriptId":"203","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":967,"endOffset":1039,"count":1}],"isBlockCoverage":true}]},{"scriptId":"204","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseClone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"baseClone","ranges":[{"startOffset":3365,"endOffset":5545,"count":113},{"startOffset":3596,"endOffset":3682,"count":112},{"startOffset":3618,"endOffset":3657,"count":111},{"startOffset":3658,"endOffset":3677,"count":1},{"startOffset":3711,"endOffset":3735,"count":62},{"startOffset":3735,"endOffset":3760,"count":51},{"startOffset":3760,"endOffset":3783,"count":0},{"startOffset":3783,"endOffset":3827,"count":51},{"startOffset":3827,"endOffset":3932,"count":0},{"startOffset":3932,"endOffset":4550,"count":51},{"startOffset":4045,"endOffset":4093,"count":0},{"startOffset":4119,"endOffset":4136,"count":0},{"startOffset":4137,"endOffset":4159,"count":0},{"startOffset":4197,"endOffset":4201,"count":0},{"startOffset":4247,"endOffset":4399,"count":1},{"startOffset":4281,"endOffset":4332,"count":0},{"startOffset":4405,"endOffset":4546,"count":0},{"startOffset":4550,"endOffset":4630,"count":50},{"startOffset":4630,"endOffset":4652,"count":1},{"startOffset":4703,"endOffset":4728,"count":12},{"startOffset":4728,"endOffset":4778,"count":38},{"startOffset":4778,"endOffset":4914,"count":0},{"startOffset":4914,"endOffset":5079,"count":38},{"startOffset":4938,"endOffset":5079,"count":0},{"startOffset":5079,"endOffset":5147,"count":38},{"startOffset":5119,"endOffset":5133,"count":0},{"startOffset":5152,"endOffset":5178,"count":0},{"startOffset":5201,"endOffset":5212,"count":0},{"startOffset":5213,"endOffset":5230,"count":38},{"startOffset":5250,"endOffset":5258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4798,"endOffset":4908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4958,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5260,"endOffset":5524,"count":111}],"isBlockCoverage":true}]},{"scriptId":"205","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":402,"endOffset":507,"count":1}],"isBlockCoverage":true}]},{"scriptId":"206","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_ListCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":376,"endOffset":594,"count":1},{"startOffset":459,"endOffset":475,"count":0},{"startOffset":521,"endOffset":592,"count":0}],"isBlockCoverage":true}]},{"scriptId":"207","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":115,"endOffset":183,"count":1}],"isBlockCoverage":true}]},{"scriptId":"208","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":440,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_assocIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":286,"endOffset":454,"count":50},{"startOffset":370,"endOffset":439,"count":922},{"startOffset":407,"endOffset":435,"count":12},{"startOffset":439,"endOffset":453,"count":38}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":681,"endOffset":776,"count":922},{"startOffset":734,"endOffset":773,"count":910},{"startOffset":754,"endOffset":772,"count":0}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":240,"endOffset":387,"count":50},{"startOffset":356,"endOffset":367,"count":38},{"startOffset":368,"endOffset":384,"count":12}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":292,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheSet","ranges":[{"startOffset":292,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":148,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"stackDelete","ranges":[{"startOffset":237,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":183,"endOffset":242,"count":50}],"isBlockCoverage":true}]},{"scriptId":"217","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":235,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"stackSet","ranges":[{"startOffset":436,"endOffset":824,"count":38},{"startOffset":706,"endOffset":823,"count":0}],"isBlockCoverage":true}]},{"scriptId":"219","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"getNative","ranges":[{"startOffset":331,"endOffset":453,"count":7},{"startOffset":439,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"221","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":7},{"startOffset":1256,"endOffset":1279,"count":0},{"startOffset":1327,"endOffset":1341,"count":0}],"isBlockCoverage":true}]},{"scriptId":"222","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":7},{"startOffset":670,"endOffset":693,"count":0},{"startOffset":905,"endOffset":921,"count":0},{"startOffset":922,"endOffset":940,"count":0},{"startOffset":941,"endOffset":959,"count":0}],"isBlockCoverage":true}]},{"scriptId":"223","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":64},{"startOffset":584,"endOffset":646,"count":0},{"startOffset":712,"endOffset":730,"count":5},{"startOffset":735,"endOffset":758,"count":59}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":5},{"startOffset":899,"endOffset":911,"count":0},{"startOffset":995,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":59}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":116},{"startOffset":679,"endOffset":700,"count":14}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":7},{"startOffset":509,"endOffset":532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":12},{"startOffset":441,"endOffset":508,"count":0},{"startOffset":512,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"233","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":211,"endOffset":296,"count":7},{"startOffset":268,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"234","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_MapCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":389,"endOffset":606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":209,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":319,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":152,"endOffset":251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"239","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":279,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"hashGet","ranges":[{"startOffset":513,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":461,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":379,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":282,"endOffset":415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getMapData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":214,"endOffset":369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isKeyable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":201,"endOffset":400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheGet","ranges":[{"startOffset":228,"endOffset":298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":280,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":279,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":274,"endOffset":507,"count":38},{"startOffset":359,"endOffset":362,"count":0},{"startOffset":407,"endOffset":489,"count":111},{"startOffset":465,"endOffset":485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_assignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":629,"endOffset":867,"count":112},{"startOffset":743,"endOffset":765,"count":0},{"startOffset":767,"endOffset":817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"251","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":314,"endOffset":589,"count":112},{"startOffset":386,"endOffset":403,"count":0},{"startOffset":405,"endOffset":551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_defineProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64,"endOffset":194,"count":1},{"startOffset":180,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssign","ranges":[{"startOffset":339,"endOffset":439,"count":1}],"isBlockCoverage":true}]},{"scriptId":"254","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copyObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1044,"count":1}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":467,"endOffset":1013,"count":2},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":650,"endOffset":994,"count":1},{"startOffset":717,"endOffset":776,"count":0},{"startOffset":882,"endOffset":935,"count":0}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":761,"endOffset":859,"count":39},{"startOffset":814,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"256","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayLikeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":697,"endOffset":1744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseTimes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":313,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1026,"count":1},{"startOffset":851,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":853,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":355,"endOffset":452,"count":1}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":1}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1},{"startOffset":548,"endOffset":559,"count":0},{"startOffset":697,"endOffset":708,"count":0},{"startOffset":1072,"endOffset":1084,"count":0}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/stubFalse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":210,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":456,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1},{"startOffset":643,"endOffset":661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"266","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":2050,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":645,"endOffset":773,"count":39},{"startOffset":706,"endOffset":723,"count":0},{"startOffset":724,"endOffset":741,"count":0},{"startOffset":742,"endOffset":770,"count":0}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseUnary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":218,"endOffset":302,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254,"endOffset":299,"count":76}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nodeUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":615,"endOffset":962,"count":1},{"startOffset":806,"endOffset":911,"count":0},{"startOffset":912,"endOffset":942,"count":0},{"startOffset":948,"endOffset":960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":479,"endOffset":747,"count":39},{"startOffset":571,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"271","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":273,"endOffset":448,"count":90},{"startOffset":404,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"272","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":90}],"isBlockCoverage":true}]},{"scriptId":"274","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":695,"endOffset":798,"count":39},{"startOffset":774,"endOffset":795,"count":0}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignIn","ranges":[{"startOffset":345,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/keysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":643,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":523,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":292,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1},{"startOffset":508,"endOffset":519,"count":0},{"startOffset":567,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":783,"endOffset":1024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copyArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"copyArray","ranges":[{"startOffset":219,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":317,"endOffset":414,"count":1}],"isBlockCoverage":true}]},{"scriptId":"282","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getSymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":886,"count":1},{"startOffset":624,"endOffset":635,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":638,"endOffset":854,"count":39},{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":774,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayFilter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":289,"endOffset":600,"count":39},{"startOffset":377,"endOffset":380,"count":0},{"startOffset":464,"endOffset":581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"284","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/stubArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"stubArray","ranges":[{"startOffset":323,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copySymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbolsIn","ranges":[{"startOffset":335,"endOffset":436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getSymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":754,"count":1},{"startOffset":549,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbolsIn","ranges":[{"startOffset":563,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayPush.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":200,"endOffset":407,"count":38},{"startOffset":341,"endOffset":389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":342,"endOffset":424,"count":38}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseGetAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":537,"endOffset":704,"count":38},{"startOffset":652,"endOffset":660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"291","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getAllKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":367,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1},{"startOffset":1296,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":1309,"endOffset":1808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_DataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_WeakMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":329,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":1454,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneArrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Uint8Array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true}]},{"scriptId":"301","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneDataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDataView","ranges":[{"startOffset":267,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"cloneRegExp","ranges":[{"startOffset":243,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1},{"startOffset":138,"endOffset":149,"count":0},{"startOffset":205,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"cloneSymbol","ranges":[{"startOffset":394,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"cloneTypedArray","ranges":[{"startOffset":275,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":290,"endOffset":450,"count":51},{"startOffset":443,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"306","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":370,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":400,"endOffset":648,"count":51},{"startOffset":444,"endOffset":468,"count":0},{"startOffset":532,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMap","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"310","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsSet","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/create-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4201,"count":1}],"isBlockCoverage":true},{"functionName":"startChain","ranges":[{"startOffset":52,"endOffset":279,"count":11}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":108,"endOffset":154,"count":2}],"isBlockCoverage":true},{"functionName":"extendChain","ranges":[{"startOffset":281,"endOffset":647,"count":63},{"startOffset":338,"endOffset":357,"count":9}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":371,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"callWithFlag","ranges":[{"startOffset":649,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"createHookChain","ranges":[{"startOffset":981,"endOffset":1506,"count":8},{"startOffset":1311,"endOffset":1489,"count":4}],"isBlockCoverage":true},{"functionName":"createChain","ranges":[{"startOffset":1508,"endOffset":4169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/parse-test-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"parseTestArgs","ranges":[{"startOffset":14,"endOffset":599,"count":2},{"startOffset":91,"endOffset":105,"count":1},{"startOffset":106,"endOffset":117,"count":1},{"startOffset":233,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"buildTitle","ranges":[{"startOffset":290,"endOffset":511,"count":2},{"startOffset":347,"endOffset":388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/snapshot-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13484,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotError","ranges":[{"startOffset":1226,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"ChecksumError","ranges":[{"startOffset":1426,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"VersionMismatchError","ranges":[{"startOffset":1618,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"isLegacySnapshot","ranges":[{"startOffset":1929,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"LegacyError","ranges":[{"startOffset":2102,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"tryRead","ranges":[{"startOffset":2239,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLineEndings","ranges":[{"startOffset":2397,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"formatEntry","ranges":[{"startOffset":2625,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"combineEntries","ranges":[{"startOffset":2862,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"generateReport","ranges":[{"startOffset":3513,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"appendReportEntries","ranges":[{"startOffset":4043,"endOffset":4454,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshots","ranges":[{"startOffset":4456,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshots","ranges":[{"startOffset":6472,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"Manager","ranges":[{"startOffset":8488,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":8896,"endOffset":9599,"count":0}],"isBlockCoverage":false},{"functionName":"deferRecord","ranges":[{"startOffset":9602,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":10646,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":10737,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11500,"endOffset":11992,"count":0}],"isBlockCoverage":false},{"functionName":"mem.cacheKey.file.file","ranges":[{"startOffset":12029,"endOffset":12612,"count":0}],"isBlockCoverage":false},{"functionName":"cacheKey","ranges":[{"startOffset":12625,"endOffset":12643,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":12702,"endOffset":13461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7286,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3104,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3188,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3290,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3394,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3500,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3608,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3766,"endOffset":3848,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3850,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3908,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":3992,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4076,"endOffset":4162,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsDisabled","ranges":[{"startOffset":5155,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5230,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsDisabled","ranges":[{"startOffset":5320,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5364,"endOffset":5404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3513,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":617,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1448,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":1962,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2439,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":3376,"endOffset":3443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2937,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":781,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":844,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1078,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1368,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1444,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1490,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"timingSafeEqual","ranges":[{"startOffset":1858,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2406,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10339,"count":1}],"isBlockCoverage":false},{"functionName":"KeyObject","ranges":[{"startOffset":1041,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":1475,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":1566,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":1624,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":1704,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":1863,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2067,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2125,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":2356,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2415,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":2644,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":2973,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":3827,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":3925,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":4521,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":4617,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":6116,"endOffset":6252,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":6452,"endOffset":6568,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":6570,"endOffset":7132,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":7134,"endOffset":8398,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":8400,"endOffset":8488,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":8490,"endOffset":8585,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":8587,"endOffset":9101,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9103,"endOffset":9386,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":9388,"endOffset":9623,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":9625,"endOffset":9892,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":9894,"endOffset":9958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7719,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":950,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2127,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":2542,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":2818,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3241,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":3508,"endOffset":3680,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":3791,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4065,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4269,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":4467,"endOffset":4623,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":4627,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5092,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5247,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":5466,"endOffset":5984,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":5987,"endOffset":6122,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6124,"endOffset":6447,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6517,"endOffset":7632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5972,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2100,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2371,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3037,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3837,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4321,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4958,"endOffset":5899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"zlib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28199,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3264,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":3989,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4143,"endOffset":4228,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4230,"endOffset":4684,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4686,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5228,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5794,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6867,"endOffset":8421,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8627,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9087,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9280,"endOffset":9332,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9472,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9726,"endOffset":9798,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10396,"endOffset":10471,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10912,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11357,"endOffset":11439,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11472,"endOffset":11532,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11567,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12168,"endOffset":12397,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12400,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14606,"endOffset":15196,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15198,"endOffset":17500,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":17502,"endOffset":17692,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":17888,"endOffset":20363,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":20713,"endOffset":20979,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21005,"endOffset":21417,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":21461,"endOffset":21585,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":21681,"endOffset":21805,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":21901,"endOffset":22013,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":22103,"endOffset":22223,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":22317,"endOffset":22511,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":22613,"endOffset":22749,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":22851,"endOffset":22967,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":23059,"endOffset":23473,"count":18},{"startOffset":23118,"endOffset":23471,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":23131,"endOffset":23232,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":23256,"endOffset":23466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23536,"endOffset":23611,"count":107},{"startOffset":23588,"endOffset":23604,"count":9},{"startOffset":23605,"endOffset":23608,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":23827,"endOffset":24938,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25032,"endOffset":25185,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":25299,"endOffset":25458,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":25577,"endOffset":25741,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":25677,"endOffset":25734,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25951,"endOffset":25987,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":25991,"endOffset":26032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"329","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1}],"isBlockCoverage":true},{"functionName":"shortcircuitPrimitive","ranges":[{"startOffset":408,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"compareDescriptors","ranges":[{"startOffset":730,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2864,"endOffset":3352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"331","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/describe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5980,"count":1}],"isBlockCoverage":true},{"functionName":"describePrimitive","ranges":[{"startOffset":2448,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"unboxComplex","ranges":[{"startOffset":2959,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"registerPlugins","ranges":[{"startOffset":3326,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"describeComplex","ranges":[{"startOffset":3728,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":4700,"endOffset":5953,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1384,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":408,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":651,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1159,"endOffset":1381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7182,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":436,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":742,"endOffset":838,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectValue","ranges":[{"startOffset":949,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1206,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":1402,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1473,"endOffset":1560,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1564,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":1999,"endOffset":6369,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2066,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2437,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2567,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":3034,"endOffset":3470,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":3476,"endOffset":4492,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":4498,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":6411,"endOffset":7135,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6481,"endOffset":6777,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":6783,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":7058,"endOffset":7129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getObjectKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1043,"count":1}],"isBlockCoverage":true},{"functionName":"getObjectKeys","ranges":[{"startOffset":14,"endOffset":1011,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/formatUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":60,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"formatCtorAndStringTag","ranges":[{"startOffset":168,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFormatter","ranges":[{"startOffset":621,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":844,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":1193,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":1877,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"shouldFormat","ranges":[{"startOffset":2165,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"customize","ranges":[{"startOffset":2206,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"SingleValueFormatter","ranges":[{"startOffset":2579,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2790,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":2965,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":3120,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/lineBuilder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7142,"count":1}],"isBlockCoverage":true},{"functionName":"translateGutter","ranges":[{"startOffset":123,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Line","ranges":[{"startOffset":502,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":674,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":721,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":762,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":820,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":884,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":938,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1031,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":1206,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":1483,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":1634,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":1787,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":1875,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":2048,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2093,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2219,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":2279,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":2397,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2528,"endOffset":2630,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":2634,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2727,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":3538,"endOffset":4285,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":4289,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":4425,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":4563,"endOffset":4669,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":4673,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":5452,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5721,"endOffset":5764,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5769,"endOffset":5846,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":5851,"endOffset":5927,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":5932,"endOffset":6009,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6014,"endOffset":6091,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6096,"endOffset":6165,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6184,"endOffset":6267,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6274,"endOffset":6356,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6363,"endOffset":6446,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6453,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6543,"endOffset":6642,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6667,"endOffset":6752,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6759,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6850,"endOffset":6935,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6942,"endOffset":7027,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":7034,"endOffset":7135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/hasLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"hasLength","ranges":[{"startOffset":104,"endOffset":275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.islength/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1187,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":1030,"endOffset":1158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/recursorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1892,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51,"endOffset":74,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":116,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":416,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"replay","ranges":[{"startOffset":578,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"sequence","ranges":[{"startOffset":1273,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"singleValue","ranges":[{"startOffset":1521,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1689,"endOffset":1865,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/stats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3834,"count":1}],"isBlockCoverage":true},{"functionName":"describeIterableRecursor","ranges":[{"startOffset":228,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"describeListRecursor","ranges":[{"startOffset":380,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"describePropertyRecursor","ranges":[{"startOffset":516,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeIterableStats","ranges":[{"startOffset":668,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeListStats","ranges":[{"startOffset":807,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePropertyStats","ranges":[{"startOffset":930,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":1306,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1355,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1436,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2991,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3139,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3385,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3623,"endOffset":3753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/arrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":342,"endOffset":443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/typedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4437,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":382,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":628,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":909,"endOffset":1009,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeBytes","ranges":[{"startOffset":1045,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"Bytes","ranges":[{"startOffset":1291,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1346,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1485,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2300,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"TypedArrayValue","ranges":[{"startOffset":2465,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":2542,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":3047,"endOffset":3867,"count":3}],"isBlockCoverage":true},{"functionName":"createListRecursor","ranges":[{"startOffset":3235,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":3311,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":3753,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":3975,"endOffset":4318,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/boxed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":264,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedBoxedValue","ranges":[{"startOffset":632,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":711,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":781,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1124,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":306,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"basicEscape","ranges":[{"startOffset":707,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLinebreak","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"themeControlPictures","ranges":[{"startOffset":1221,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuotes","ranges":[{"startOffset":1537,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"includesLinebreaks","ranges":[{"startOffset":1836,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLine","ranges":[{"startOffset":1934,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"gatherLines","ranges":[{"startOffset":3615,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"StringValue","ranges":[{"startOffset":3947,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3999,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"get includesLinebreaks","ranges":[{"startOffset":4127,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4204,"endOffset":5175,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":5179,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5557,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":10823,"endOffset":10863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-diff/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27285,"count":1}],"isBlockCoverage":true},{"functionName":"diff_main","ranges":[{"startOffset":1553,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"diff_compute_","ranges":[{"startOffset":2987,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisect_","ranges":[{"startOffset":4922,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisectSplit_","ranges":[{"startOffset":8763,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":9335,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":10396,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"diff_halfMatch_","ranges":[{"startOffset":11745,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15072,"endOffset":22357,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_start","ranges":[{"startOffset":22360,"endOffset":22457,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_end","ranges":[{"startOffset":22459,"endOffset":22554,"count":0}],"isBlockCoverage":false},{"functionName":"starts_with_pair_end","ranges":[{"startOffset":22556,"endOffset":22645,"count":0}],"isBlockCoverage":false},{"functionName":"ends_with_pair_start","ranges":[{"startOffset":22647,"endOffset":22751,"count":0}],"isBlockCoverage":false},{"functionName":"remove_empty_tuples","ranges":[{"startOffset":22753,"endOffset":22939,"count":0}],"isBlockCoverage":false},{"functionName":"make_edit_splice","ranges":[{"startOffset":22941,"endOffset":23244,"count":0}],"isBlockCoverage":false},{"functionName":"find_cursor_edit_diff","ranges":[{"startOffset":23246,"endOffset":26986,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":26988,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"347","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":0}],"isBlockCoverage":false},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/dataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":948,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":348,"endOffset":446,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2613,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":304,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":499,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"formatDate","ranges":[{"startOffset":680,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"DateValue","ranges":[{"startOffset":990,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1069,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2122,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedDateValue","ranges":[{"startOffset":2460,"endOffset":2610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/date-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":723,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/time-zone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3607,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":331,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":637,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorValue","ranges":[{"startOffset":868,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":941,"endOffset":1081,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1085,"endOffset":2195,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2199,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedErrorValue","ranges":[{"startOffset":2402,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2589,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedErrorValue","ranges":[{"startOffset":3514,"endOffset":3604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/isEnumerable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"isEnumerable","ranges":[{"startOffset":14,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3274,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":377,"endOffset":599,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":629,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionValue","ranges":[{"startOffset":869,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":942,"endOffset":1708,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedFunctionValue","ranges":[{"startOffset":1860,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1957,"endOffset":2205,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2209,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2751,"endOffset":2811,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedFunctionValue","ranges":[{"startOffset":2899,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2993,"endOffset":3207,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3211,"endOffset":3271,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":412,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":512,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1842,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":369,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"MapValue","ranges":[{"startOffset":594,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":667,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":864,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1029,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1226,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMapValue","ranges":[{"startOffset":1749,"endOffset":1839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":167,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":268,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":630,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":916,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2731,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":219,"endOffset":401,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":431,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedFlags","ranges":[{"startOffset":616,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"RegexpValue","ranges":[{"startOffset":823,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":929,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1110,"endOffset":2315,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2319,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedRegexpValue","ranges":[{"startOffset":2610,"endOffset":2728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1812,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":369,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"SetValue","ranges":[{"startOffset":594,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":667,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":864,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1027,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1224,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSetValue","ranges":[{"startOffset":1719,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7789,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":228,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":354,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":519,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":653,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexItem","ranges":[{"startOffset":1017,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1099,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1175,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1723,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":4316,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveItem","ranges":[{"startOffset":4531,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4613,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4774,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":5333,"endOffset":6842,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":6846,"endOffset":7575,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7579,"endOffset":7633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/mapEntry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7281,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":318,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":615,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithKey","ranges":[{"startOffset":974,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"MapEntry","ranges":[{"startOffset":1443,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1639,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1920,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":2403,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3008,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":3352,"endOffset":4183,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":4187,"endOffset":7062,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7066,"endOffset":7140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/themeUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5232,"count":1}],"isBlockCoverage":true},{"functionName":"freezeTheme","ranges":[{"startOffset":151,"endOffset":490,"count":1},{"startOffset":233,"endOffset":472,"count":42},{"startOffset":338,"endOffset":468,"count":120},{"startOffset":397,"endOffset":425,"count":118},{"startOffset":427,"endOffset":462,"count":41}],"isBlockCoverage":true},{"functionName":"normalizePlugins","ranges":[{"startOffset":2401,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3190,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"addModifier","ranges":[{"startOffset":4127,"endOffset":4319,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiers","ranges":[{"startOffset":4427,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiersToOriginal","ranges":[{"startOffset":5043,"endOffset":5171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.clonedeep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45025,"count":1},{"startOffset":3163,"endOffset":3170,"count":0},{"startOffset":3171,"endOffset":3196,"count":0},{"startOffset":3197,"endOffset":3204,"count":0},{"startOffset":3278,"endOffset":3289,"count":0},{"startOffset":3290,"endOffset":3318,"count":0},{"startOffset":9479,"endOffset":9490,"count":0},{"startOffset":9927,"endOffset":9938,"count":0},{"startOffset":10650,"endOffset":10661,"count":0},{"startOffset":10717,"endOffset":10728,"count":0},{"startOffset":31859,"endOffset":31870,"count":0},{"startOffset":32442,"endOffset":32973,"count":0},{"startOffset":41056,"endOffset":41068,"count":0}],"isBlockCoverage":true},{"functionName":"addMapEntry","ranges":[{"startOffset":3912,"endOffset":4055,"count":0}],"isBlockCoverage":false},{"functionName":"addSetEntry","ranges":[{"startOffset":4222,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEach","ranges":[{"startOffset":4631,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPush","ranges":[{"startOffset":5058,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReduce","ranges":[{"startOffset":5698,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":6329,"endOffset":6490,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":6703,"endOffset":6788,"count":6},{"startOffset":6760,"endOffset":6771,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":6982,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":7468,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":7899,"endOffset":7999,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7944,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":8152,"endOffset":8315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8636,"endOffset":8788,"count":1},{"startOffset":8686,"endOffset":8704,"count":0},{"startOffset":8705,"endOffset":8732,"count":0},{"startOffset":8754,"endOffset":8780,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":10854,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":11165,"endOffset":11247,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":11528,"endOffset":11609,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":11792,"endOffset":12023,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":12258,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":12622,"endOffset":12775,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":13097,"endOffset":13307,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":13424,"endOffset":13475,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":13723,"endOffset":14007,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":14201,"endOffset":14348,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":14594,"endOffset":14672,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":14918,"endOffset":15129,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":15529,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":15847,"endOffset":15980,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":16220,"endOffset":16299,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":16485,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":16793,"endOffset":16863,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":17100,"endOffset":17192,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":17583,"endOffset":17652,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":17760,"endOffset":17818,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":18057,"endOffset":18125,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":18310,"endOffset":18369,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":18606,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":18903,"endOffset":19240,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":19717,"endOffset":20266,"count":0}],"isBlockCoverage":false},{"functionName":"assignValue","ranges":[{"startOffset":20637,"endOffset":20859,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21120,"endOffset":21288,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":21555,"endOffset":21655,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":22224,"endOffset":23887,"count":0}],"isBlockCoverage":false},{"functionName":"baseCreate","ranges":[{"startOffset":24122,"endOffset":24205,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":24666,"endOffset":24833,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":24986,"endOffset":25053,"count":5}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":25274,"endOffset":25501,"count":6},{"startOffset":25348,"endOffset":25371,"count":0},{"startOffset":25407,"endOffset":25429,"count":0},{"startOffset":25444,"endOffset":25458,"count":0}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":25713,"endOffset":25981,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":26185,"endOffset":26366,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":26550,"endOffset":26736,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":26949,"endOffset":27155,"count":0}],"isBlockCoverage":false},{"functionName":"cloneMap","ranges":[{"startOffset":27407,"endOffset":27590,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":27742,"endOffset":27906,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSet","ranges":[{"startOffset":28158,"endOffset":28341,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":28518,"endOffset":28616,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":28837,"endOffset":29053,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":29274,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":29849,"endOffset":30257,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbols","ranges":[{"startOffset":30499,"endOffset":30596,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":30815,"endOffset":30897,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":31071,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":31472,"endOffset":31594,"count":6},{"startOffset":31580,"endOffset":31591,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":32455,"endOffset":32970,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneArray","ranges":[{"startOffset":33124,"endOffset":33448,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":33604,"endOffset":33764,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneByTag","ranges":[{"startOffset":34260,"endOffset":35097,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":35372,"endOffset":35595,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35798,"endOffset":35997,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36186,"endOffset":36260,"count":6},{"startOffset":36234,"endOffset":36257,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36454,"endOffset":36629,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":36790,"endOffset":36978,"count":11},{"startOffset":36892,"endOffset":36959,"count":0},{"startOffset":36963,"endOffset":36977,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":37394,"endOffset":37462,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":38145,"endOffset":38240,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":38629,"endOffset":38897,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":39975,"endOffset":40078,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":40604,"endOffset":40693,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":41409,"endOffset":41701,"count":6},{"startOffset":41652,"endOffset":41656,"count":0},{"startOffset":41682,"endOffset":41698,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":42248,"endOffset":42376,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":42959,"endOffset":43076,"count":12}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":43575,"endOffset":43653,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":44283,"endOffset":44381,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":44706,"endOffset":44743,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":44955,"endOffset":44995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51155,"count":1},{"startOffset":3263,"endOffset":3270,"count":0},{"startOffset":3271,"endOffset":3296,"count":0},{"startOffset":3297,"endOffset":3304,"count":0},{"startOffset":3378,"endOffset":3389,"count":0},{"startOffset":3390,"endOffset":3418,"count":0},{"startOffset":7827,"endOffset":7838,"count":0},{"startOffset":7946,"endOffset":7957,"count":0},{"startOffset":8194,"endOffset":8205,"count":0},{"startOffset":8501,"endOffset":8512,"count":0},{"startOffset":28453,"endOffset":28463,"count":0},{"startOffset":41292,"endOffset":41434,"count":0},{"startOffset":43594,"endOffset":43606,"count":0},{"startOffset":47661,"endOffset":47679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3992,"endOffset":4339,"count":1},{"startOffset":4183,"endOffset":4288,"count":0},{"startOffset":4289,"endOffset":4319,"count":0},{"startOffset":4325,"endOffset":4337,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":4811,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":5440,"endOffset":5601,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":5821,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5857,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":6118,"endOffset":6203,"count":3},{"startOffset":6175,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":6459,"endOffset":6559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7078,"endOffset":7230,"count":1},{"startOffset":7128,"endOffset":7146,"count":0},{"startOffset":7147,"endOffset":7174,"count":0},{"startOffset":7196,"endOffset":7222,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8230,"endOffset":8360,"count":1},{"startOffset":8346,"endOffset":8358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9258,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":8977,"endOffset":8997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9007,"endOffset":9255,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":9387,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":9706,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":10086,"endOffset":10221,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":10404,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":10870,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":11236,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":11749,"endOffset":11967,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":12084,"endOffset":12152,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":12400,"endOffset":12699,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":12893,"endOffset":13040,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":13286,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":13610,"endOffset":13838,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":14238,"endOffset":14455,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":14564,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":14954,"endOffset":15087,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":15273,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":15581,"endOffset":15651,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":15888,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":16457,"endOffset":16562,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":16670,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":16984,"endOffset":17120,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":17305,"endOffset":17364,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":17601,"endOffset":17660,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":17898,"endOffset":18286,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":18763,"endOffset":19810,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":20074,"endOffset":20277,"count":0}],"isBlockCoverage":false},{"functionName":"assignValue","ranges":[{"startOffset":20648,"endOffset":20886,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21147,"endOffset":21315,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignValue","ranges":[{"startOffset":21579,"endOffset":21854,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":22565,"endOffset":22792,"count":4},{"startOffset":22615,"endOffset":22677,"count":0},{"startOffset":22743,"endOffset":22761,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":22978,"endOffset":23075,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":23296,"endOffset":23498,"count":3},{"startOffset":23370,"endOffset":23393,"count":0},{"startOffset":23441,"endOffset":23455,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":23721,"endOffset":23856,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeysIn","ranges":[{"startOffset":24070,"endOffset":24386,"count":0}],"isBlockCoverage":false},{"functionName":"baseMerge","ranges":[{"startOffset":24803,"endOffset":25402,"count":0}],"isBlockCoverage":false},{"functionName":"baseMergeDeep","ranges":[{"startOffset":26039,"endOffset":27758,"count":0}],"isBlockCoverage":false},{"functionName":"baseRest","ranges":[{"startOffset":28067,"endOffset":28167,"count":1}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":28466,"endOffset":28645,"count":1}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":28850,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":29275,"endOffset":29461,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":29682,"endOffset":29898,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":30119,"endOffset":30324,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":30694,"endOffset":31240,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":31423,"endOffset":32158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31477,"endOffset":32154,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseFor","ranges":[{"startOffset":32377,"endOffset":32774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32422,"endOffset":32771,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":32948,"endOffset":33103,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":33349,"endOffset":33471,"count":3},{"startOffset":33457,"endOffset":33468,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":33672,"endOffset":34080,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":34236,"endOffset":34396,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":34671,"endOffset":34946,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":35316,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35847,"endOffset":36046,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36235,"endOffset":36309,"count":3},{"startOffset":36283,"endOffset":36306,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36503,"endOffset":36678,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeysIn","ranges":[{"startOffset":36972,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":37322,"endOffset":37399,"count":4}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":37754,"endOffset":38318,"count":1},{"startOffset":37858,"endOffset":37865,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37880,"endOffset":38315,"count":0}],"isBlockCoverage":false},{"functionName":"safeGet","ranges":[{"startOffset":38563,"endOffset":38748,"count":0}],"isBlockCoverage":false},{"functionName":"shortOut","ranges":[{"startOffset":39310,"endOffset":39688,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39385,"endOffset":39685,"count":1},{"startOffset":39528,"endOffset":39606,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":39849,"endOffset":40037,"count":3},{"startOffset":39951,"endOffset":40018,"count":0},{"startOffset":40022,"endOffset":40036,"count":0}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":40720,"endOffset":40815,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41238,"endOffset":41270,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":41294,"endOffset":41434,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":42513,"endOffset":42616,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":43142,"endOffset":43231,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":43947,"endOffset":44292,"count":3},{"startOffset":44000,"endOffset":44023,"count":0},{"startOffset":44235,"endOffset":44251,"count":0},{"startOffset":44252,"endOffset":44270,"count":0},{"startOffset":44271,"endOffset":44289,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":44839,"endOffset":44967,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":45550,"endOffset":45673,"count":6}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":46172,"endOffset":46256,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":46857,"endOffset":47244,"count":0}],"isBlockCoverage":false},{"functionName":"toPlainObject","ranges":[{"startOffset":48238,"endOffset":48314,"count":0}],"isBlockCoverage":false},{"functionName":"keysIn","ranges":[{"startOffset":48822,"endOffset":48930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49954,"endOffset":50031,"count":0}],"isBlockCoverage":false},{"functionName":"constant","ranges":[{"startOffset":50461,"endOffset":50534,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50497,"endOffset":50531,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":50833,"endOffset":50877,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":51089,"endOffset":51129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/pluginRegistry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6129,"count":1}],"isBlockCoverage":true},{"functionName":"PluginError","ranges":[{"startOffset":707,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"PluginTypeError","ranges":[{"startOffset":864,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedApiError","ranges":[{"startOffset":1031,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedError","ranges":[{"startOffset":1210,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorTagError","ranges":[{"startOffset":1406,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorIdError","ranges":[{"startOffset":1657,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1949,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"modifyTheme","ranges":[{"startOffset":3521,"endOffset":3635,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3637,"endOffset":5078,"count":0}],"isBlockCoverage":false},{"functionName":"getDeserializers","ranges":[{"startOffset":5098,"endOffset":5361,"count":0}],"isBlockCoverage":false},{"functionName":"getThemes","ranges":[{"startOffset":5407,"endOffset":5590,"count":0}],"isBlockCoverage":false},{"functionName":"getTryDescribeValues","ranges":[{"startOffset":5622,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDescriptorRef","ranges":[{"startOffset":5780,"endOffset":6076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38803,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":7960,"endOffset":8033,"count":35},{"startOffset":7995,"endOffset":8031,"count":32}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":35}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8057,"endOffset":8579,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":8603,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":8728,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":8885,"endOffset":10577,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10605,"endOffset":10796,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.toString","ranges":[{"startOffset":10826,"endOffset":10863,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":10892,"endOffset":11117,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11150,"endOffset":11420,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11452,"endOffset":12239,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":12409,"endOffset":15470,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":15490,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":15769,"endOffset":16297,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":16373,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":16670,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":16767,"endOffset":16832,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":16856,"endOffset":16921,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":16945,"endOffset":17010,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17038,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"compareLoose","ranges":[{"startOffset":17170,"endOffset":17231,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":17261,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":17348,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":17485,"endOffset":17600,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":17618,"endOffset":17681,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":17699,"endOffset":17762,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":17780,"endOffset":17845,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":17865,"endOffset":17931,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":17951,"endOffset":18016,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":18036,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":18121,"endOffset":18835,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator","ranges":[{"startOffset":18869,"endOffset":19521,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.parse","ranges":[{"startOffset":19565,"endOffset":19998,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.toString","ranges":[{"startOffset":20032,"endOffset":20067,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.test","ranges":[{"startOffset":20097,"endOffset":20380,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.intersects","ranges":[{"startOffset":20416,"endOffset":22036,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":22060,"endOffset":23117,"count":0}],"isBlockCoverage":false},{"functionName":"Range.format","ranges":[{"startOffset":23144,"endOffset":23283,"count":0}],"isBlockCoverage":false},{"functionName":"Range.toString","ranges":[{"startOffset":23312,"endOffset":23347,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":23378,"endOffset":24600,"count":0}],"isBlockCoverage":false},{"functionName":"Range.intersects","ranges":[{"startOffset":24631,"endOffset":25086,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":25176,"endOffset":25376,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":25522,"endOffset":25857,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":25859,"endOffset":25935,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":26208,"endOffset":26360,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":26362,"endOffset":27146,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":27345,"endOffset":27497,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":27499,"endOffset":28980,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":28982,"endOffset":29170,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":29172,"endOffset":30696,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":30821,"endOffset":31013,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":31227,"endOffset":31797,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":31884,"endOffset":32180,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":32182,"endOffset":33203,"count":0}],"isBlockCoverage":false},{"functionName":"satisfies","ranges":[{"startOffset":33235,"endOffset":33396,"count":0}],"isBlockCoverage":false},{"functionName":"maxSatisfying","ranges":[{"startOffset":33436,"endOffset":33882,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":33922,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":34401,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":35678,"endOffset":35917,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":36013,"endOffset":36102,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":36202,"endOffset":36291,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":36319,"endOffset":38110,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":38144,"endOffset":38298,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":38332,"endOffset":38460,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":38486,"endOffset":38802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6145,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":331,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":457,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":622,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":756,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":1125,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"compareKeys","ranges":[{"startOffset":1171,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1696,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexProperty","ranges":[{"startOffset":2877,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2949,"endOffset":3021,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3025,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3304,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3811,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveProperty","ranges":[{"startOffset":3977,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4049,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4328,"endOffset":5010,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5014,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6007,"endOffset":6059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2775,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":329,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":704,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolValue","ranges":[{"startOffset":1010,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1113,"endOffset":1403,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":1407,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1542,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":1653,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1790,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSymbolValue","ranges":[{"startOffset":2157,"endOffset":2230,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2234,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":2728,"endOffset":2772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/js-string-escape/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/well-known-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":689,"count":12}],"isBlockCoverage":true},{"functionName":"exports.isWellKnown","ranges":[{"startOffset":715,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getLabel","ranges":[{"startOffset":767,"endOffset":799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanValue","ranges":[{"startOffset":425,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":477,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":741,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/bigInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":718,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":406,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":501,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"NumberValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":781,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/undefined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":421,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":516,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getCtor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"getCtor","ranges":[{"startOffset":59,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getStringTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":727,"count":1},{"startOffset":473,"endOffset":726,"count":0}],"isBlockCoverage":true},{"functionName":"getStringTag","ranges":[{"startOffset":51,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":225,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"getStringTagWithPromiseWorkaround","ranges":[{"startOffset":525,"endOffset":671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Registry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"Registry","ranges":[{"startOffset":33,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":107,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":222,"endOffset":372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/shouldCompareDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"shouldCompareDeep","ranges":[{"startOffset":206,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/symbolProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2757,"count":1}],"isBlockCoverage":true},{"functionName":"Comparable","ranges":[{"startOffset":247,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":352,"endOffset":533,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":537,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1297,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"Collector","ranges":[{"startOffset":2150,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"collectAll","ranges":[{"startOffset":2290,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2540,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Circular.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"Circular","ranges":[{"startOffset":33,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":84,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":365,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":587,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":651,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13745,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":630,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"compareComplexShape","ranges":[{"startOffset":642,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"diffDescriptors","ranges":[{"startOffset":1888,"endOffset":13545,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":13589,"endOffset":13724,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Indenter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"Indenter","ranges":[{"startOffset":33,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"increase","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"decrease","ranges":[{"startOffset":220,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":292,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3070,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":241,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptor","ranges":[{"startOffset":295,"endOffset":2902,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2948,"endOffset":3045,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/serialize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4107,"endOffset":4142,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4189,"endOffset":4224,"count":31}],"isBlockCoverage":true},{"functionName":"DescriptorSerializationError","ranges":[{"startOffset":4281,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPluginError","ranges":[{"startOffset":4482,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"PointerLookupError","ranges":[{"startOffset":4717,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedPluginError","ranges":[{"startOffset":4935,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedVersion","ranges":[{"startOffset":5266,"endOffset":5469,"count":0}],"isBlockCoverage":false},{"functionName":"shallowSerializeDescriptor","ranges":[{"startOffset":5473,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"serializeState","ranges":[{"startOffset":5658,"endOffset":6286,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6288,"endOffset":8094,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeState","ranges":[{"startOffset":8126,"endOffset":8445,"count":0}],"isBlockCoverage":false},{"functionName":"shallowDeserializeDescriptor","ranges":[{"startOffset":8447,"endOffset":8642,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeRecord","ranges":[{"startOffset":8644,"endOffset":9330,"count":0}],"isBlockCoverage":false},{"functionName":"buildPluginMap","ranges":[{"startOffset":9332,"endOffset":10671,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":10673,"endOffset":11782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":477,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9576,"count":1}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":689,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"encodeValue","ranges":[{"startOffset":830,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"decodeValue","ranges":[{"startOffset":3038,"endOffset":5525,"count":0}],"isBlockCoverage":false},{"functionName":"buildBuffer","ranges":[{"startOffset":5527,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6174,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"decodePlugins","ranges":[{"startOffset":7927,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRecord","ranges":[{"startOffset":8475,"endOffset":9190,"count":0}],"isBlockCoverage":false},{"functionName":"extractVersion","ranges":[{"startOffset":9228,"endOffset":9296,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9338,"endOffset":9551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.flattendeep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8925,"count":1},{"startOffset":889,"endOffset":896,"count":0},{"startOffset":897,"endOffset":922,"count":0},{"startOffset":923,"endOffset":930,"count":0},{"startOffset":1004,"endOffset":1015,"count":0},{"startOffset":1016,"endOffset":1044,"count":0},{"startOffset":1998,"endOffset":2009,"count":0}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":1247,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"baseFlatten","ranges":[{"startOffset":2489,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"isFlattenable","ranges":[{"startOffset":3300,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDeep","ranges":[{"startOffset":3731,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":4245,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":5591,"endOffset":5694,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":6220,"endOffset":6309,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":6649,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":7488,"endOffset":7616,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":8199,"endOffset":8316,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":8815,"endOffset":8893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":63,"endOffset":120,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer","ranges":[{"startOffset":249,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":392,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":439,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/indent-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":389,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":643,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":740,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":801,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1292,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":1624,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toBase64","ranges":[{"startOffset":1732,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":1876,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":2165,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":2253,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":2497,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":2605,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":2677,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":2746,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":2837,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":2936,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":3140,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":3358,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":3582,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":3753,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":3854,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":3963,"endOffset":4111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/write-file-atomic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6812,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":593,"endOffset":850,"count":1},{"startOffset":765,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"getTmpname","ranges":[{"startOffset":875,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupOnExit","ranges":[{"startOffset":1079,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"serializeActiveFile","ranges":[{"startOffset":1240,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"isChownErrOk","ranges":[{"startOffset":1682,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileAsync","ranges":[{"startOffset":1945,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4412,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":4689,"endOffset":6811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":1},{"startOffset":896,"endOffset":903,"count":0},{"startOffset":963,"endOffset":980,"count":0},{"startOffset":982,"endOffset":1018,"count":0},{"startOffset":1044,"endOffset":1077,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":1},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4124,"count":1},{"startOffset":379,"endOffset":405,"count":0},{"startOffset":456,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":1479,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2013,"endOffset":2731,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":2052,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":2759,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2841,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":3433,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":3743,"endOffset":4123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28226,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2104,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":2868,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3454,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3572,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":4667,"endOffset":5607,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":5609,"endOffset":7253,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":7255,"endOffset":8980,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":8982,"endOffset":11830,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":11832,"endOffset":12439,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":12521,"endOffset":12582,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":12729,"endOffset":13100,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":13207,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":13665,"endOffset":14029,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":14118,"endOffset":14490,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":14538,"endOffset":14926,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":14977,"endOffset":15373,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":15396,"endOffset":15708,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":15735,"endOffset":16055,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":16079,"endOffset":16452,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":16456,"endOffset":17173,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":17175,"endOffset":20533,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":20535,"endOffset":20741,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":20743,"endOffset":21107,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":21109,"endOffset":21823,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":21825,"endOffset":23439,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":23441,"endOffset":24022,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":24024,"endOffset":24674,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":24692,"endOffset":24786,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":24806,"endOffset":24918,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":24943,"endOffset":25037,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":25063,"endOffset":25175,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":25195,"endOffset":26564,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":26567,"endOffset":27639,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27656,"endOffset":27748,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":27773,"endOffset":27879,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":27924,"endOffset":27993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"internal/assert/assertion_error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16115,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1239,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1517,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2126,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":10553,"endOffset":14965,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14969,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15048,"endOffset":16078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"402","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-typedarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArray","ranges":[{"startOffset":475,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictTypedArray","ranges":[{"startOffset":583,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isLooseTypedArray","ranges":[{"startOffset":945,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/typedarray-to-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"typedarrayToBuffer","ranges":[{"startOffset":245,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"worker_threads.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":false}]},{"scriptId":"405","url":"internal/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11882,"count":1}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1947,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":2070,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6536,"endOffset":7025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7029,"endOffset":7125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7129,"endOffset":7298,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7302,"endOffset":8049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8053,"endOffset":8521,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":8525,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":8644,"endOffset":9478,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":9482,"endOffset":9588,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":9592,"endOffset":9704,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":9708,"endOffset":9807,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":9811,"endOffset":9869,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":9873,"endOffset":9933,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":9937,"endOffset":9997,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":10001,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":10141,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":10554,"endOffset":10876,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":10950,"endOffset":11460,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":11462,"endOffset":11705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"internal/worker/io.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7900,"count":1}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":2646,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3200,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3252,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":3543,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3802,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":4007,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":4238,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":4852,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":5614,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5967,"endOffset":6272,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":6323,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":6476,"endOffset":6752,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6756,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6909,"endOffset":7148,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":7152,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":7423,"endOffset":7584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"internal/error-serdes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3774,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":586,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1387,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1806,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1953,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2140,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3063,"endOffset":3717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/mem/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"mem","ranges":[{"startOffset":149,"endOffset":1157,"count":2},{"startOffset":431,"endOffset":459,"count":0},{"startOffset":1089,"endOffset":1101,"count":0}],"isBlockCoverage":true},{"functionName":"cacheKey","ranges":[{"startOffset":317,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"memoized","ranges":[{"startOffset":479,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.clear","ranges":[{"startOffset":1206,"endOffset":1413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/mem/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2660,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":36,"endOffset":632,"count":4},{"startOffset":295,"endOffset":322,"count":2},{"startOffset":324,"endOffset":535,"count":2},{"startOffset":535,"endOffset":559,"count":0},{"startOffset":561,"endOffset":575,"count":0},{"startOffset":575,"endOffset":631,"count":2}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":838,"endOffset":1204,"count":2},{"startOffset":944,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1231,"endOffset":1409,"count":2},{"startOffset":1363,"endOffset":1408,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1436,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":1968,"endOffset":2350,"count":2},{"startOffset":2020,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFn","ranges":[{"startOffset":2369,"endOffset":2631,"count":2},{"startOffset":2491,"endOffset":2554,"count":4}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/map-age-cleaner/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3903,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":671,"endOffset":752,"count":1},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"mapAgeCleaner","ranges":[{"startOffset":872,"endOffset":3774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/p-defer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/concordance-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3939,"count":1},{"startOffset":3636,"endOffset":3648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3513,"endOffset":3589,"count":112},{"startOffset":3556,"endOffset":3587,"count":62}],"isBlockCoverage":true},{"functionName":"get maxDepth","ranges":[{"startOffset":3738,"endOffset":3814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":62},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":315,"count":62},{"startOffset":294,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/cloneDeepWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":817,"endOffset":1012,"count":1},{"startOffset":921,"endOffset":932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":1437,"endOffset":1927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/elementFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":188,"endOffset":10493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/node_modules/arrify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/diffShallow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12237,"count":1}],"isBlockCoverage":true},{"functionName":"diffShallow","ranges":[{"startOffset":14,"endOffset":12207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/escapeText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"escapeText","ranges":[{"startOffset":14,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/testJsonFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1551,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":48,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/serialize-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4238,"count":1}],"isBlockCoverage":true},{"functionName":"isAvaAssertionError","ranges":[{"startOffset":379,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":470,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"extractSource","ranges":[{"startOffset":654,"endOffset":813,"count":0}],"isBlockCoverage":false},{"functionName":"buildSource","ranges":[{"startOffset":815,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"trySerializeError","ranges":[{"startOffset":1542,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3592,"endOffset":4203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/clean-yaml-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"cleanYamlObj","ranges":[{"startOffset":132,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"setProp","ranges":[{"startOffset":1903,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFilter","ranges":[{"startOffset":2133,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":160,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7481,"count":1}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":44,"endOffset":364,"count":3},{"startOffset":109,"endOffset":185,"count":0},{"startOffset":200,"endOffset":205,"count":2},{"startOffset":305,"endOffset":310,"count":2}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":413,"endOffset":929,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":702,"endOffset":778,"count":224}],"isBlockCoverage":true},{"functionName":"StackUtils.clean","ranges":[{"startOffset":960,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"StackUtils.captureString","ranges":[{"startOffset":2104,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"StackUtils.capture","ranges":[{"startOffset":2532,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3202,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"StackUtils._setFile","ranges":[{"startOffset":4166,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":5456,"endOffset":7340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7416,"endOffset":7478,"count":6}],"isBlockCoverage":true}]},{"scriptId":"426","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23180,"count":1}],"isBlockCoverage":true},{"functionName":"formatDescriptorDiff","ranges":[{"startOffset":331,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptorWithLabel","ranges":[{"startOffset":591,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithLabel","ranges":[{"startOffset":747,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"formatPowerAssertValue","ranges":[{"startOffset":882,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":1004,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1087,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":1120,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1207,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorWithLongStackTrace","ranges":[{"startOffset":2003,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"validateExpectations","ranges":[{"startOffset":2202,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpectations","ranges":[{"startOffset":4812,"endOffset":7124,"count":0}],"isBlockCoverage":false},{"functionName":"Assertions","ranges":[{"startOffset":7146,"endOffset":23144,"count":2},{"startOffset":22768,"endOffset":23141,"count":0}],"isBlockCoverage":true},{"functionName":"withSkip","ranges":[{"startOffset":7347,"endOffset":7418,"count":36}],"isBlockCoverage":true},{"functionName":"withPowerAssert","ranges":[{"startOffset":7598,"endOffset":7945,"count":0}],"isBlockCoverage":false},{"functionName":"checkMessage","ranges":[{"startOffset":7971,"endOffset":8390,"count":1},{"startOffset":8056,"endOffset":8086,"count":0},{"startOffset":8111,"endOffset":8389,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8416,"endOffset":8438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8465,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8678,"endOffset":9581,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9607,"endOffset":9938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9970,"endOffset":10582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10617,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11173,"endOffset":12738,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12772,"endOffset":15125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15157,"endOffset":15744,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15781,"endOffset":17657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17688,"endOffset":19254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19283,"endOffset":19579,"count":1},{"startOffset":19347,"endOffset":19365,"count":0},{"startOffset":19400,"endOffset":19575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19607,"endOffset":19899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19926,"endOffset":20206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20234,"endOffset":20518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20546,"endOffset":21440,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21471,"endOffset":22386,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22451,"endOffset":22762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22855,"endOffset":23130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":29,"endOffset":164,"count":2},{"startOffset":98,"endOffset":126,"count":0}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/beautify-stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2399,"count":1}],"isBlockCoverage":true},{"functionName":"extractFrames","ranges":[{"startOffset":754,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1869,"endOffset":2397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/clean-stack/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1055,"count":1},{"startOffset":273,"endOffset":277,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":312,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4475,"count":1},{"startOffset":661,"endOffset":1266,"count":0},{"startOffset":1269,"endOffset":1370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1594,"endOffset":1634,"count":238}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1643,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2177,"endOffset":2316,"count":1},{"startOffset":2240,"endOffset":2279,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2389,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2825,"endOffset":2940,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3029,"endOffset":3113,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3194,"endOffset":3451,"count":1},{"startOffset":3239,"endOffset":3277,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3568,"endOffset":3614,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3779,"endOffset":3982,"count":1},{"startOffset":3915,"endOffset":3980,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4147,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4371,"endOffset":4473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5930,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":5904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":390,"endOffset":432,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1056,"endOffset":1334,"count":1},{"startOffset":1152,"endOffset":1257,"count":3}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1504,"endOffset":3251,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1557,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3254,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3434,"endOffset":3637,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3798,"endOffset":4545,"count":1},{"startOffset":3971,"endOffset":3983,"count":0},{"startOffset":4132,"endOffset":4369,"count":0},{"startOffset":4428,"endOffset":4542,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4631,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4999,"endOffset":5386,"count":1},{"startOffset":5061,"endOffset":5082,"count":0},{"startOffset":5165,"endOffset":5235,"count":0},{"startOffset":5297,"endOffset":5366,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5504,"endOffset":5640,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5729,"endOffset":5838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18195,"count":1}],"isBlockCoverage":true},{"functionName":"formatErrorValue","ranges":[{"startOffset":337,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"captureSavedError","ranges":[{"startOffset":502,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext","ranges":[{"startOffset":746,"endOffset":3973,"count":2}],"isBlockCoverage":true},{"functionName":"pass","ranges":[{"startOffset":785,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"pending","ranges":[{"startOffset":844,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":911,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":969,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"compareWithSnapshot","ranges":[{"startOffset":1040,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.snapshot.skip","ranges":[{"startOffset":1195,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.log","ranges":[{"startOffset":1246,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan","ranges":[{"startOffset":1502,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan.skip","ranges":[{"startOffset":1580,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.timeout","ranges":[{"startOffset":1608,"endOffset":1640,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.try","ranges":[{"startOffset":1656,"endOffset":3969,"count":0}],"isBlockCoverage":false},{"functionName":"get end","ranges":[{"startOffset":3976,"endOffset":4115,"count":0}],"isBlockCoverage":false},{"functionName":"get title","ranges":[{"startOffset":4118,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4171,"endOffset":4234,"count":2}],"isBlockCoverage":true},{"functionName":"set context","ranges":[{"startOffset":4237,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"get passed","ranges":[{"startOffset":4310,"endOffset":4366,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgStart","ranges":[{"startOffset":4369,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgEnd","ranges":[{"startOffset":4473,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4550,"endOffset":7462,"count":2},{"startOffset":4654,"endOffset":4659,"count":0}],"isBlockCoverage":true},{"functionName":"Test.compareWithSnapshot","ranges":[{"startOffset":5282,"endOffset":5834,"count":0}],"isBlockCoverage":false},{"functionName":"Test.skipSnapshot","ranges":[{"startOffset":5859,"endOffset":6115,"count":0}],"isBlockCoverage":false},{"functionName":"Test.runAttempt","ranges":[{"startOffset":6138,"endOffset":6951,"count":0}],"isBlockCoverage":false},{"functionName":"bindEndCallback","ranges":[{"startOffset":7465,"endOffset":7874,"count":0}],"isBlockCoverage":false},{"functionName":"endCallback","ranges":[{"startOffset":7877,"endOffset":8349,"count":0}],"isBlockCoverage":false},{"functionName":"createExecutionContext","ranges":[{"startOffset":8352,"endOffset":8418,"count":2}],"isBlockCoverage":true},{"functionName":"countPassedAssertion","ranges":[{"startOffset":8421,"endOffset":8773,"count":1},{"startOffset":8468,"endOffset":8559,"count":0},{"startOffset":8597,"endOffset":8722,"count":0}],"isBlockCoverage":true},{"functionName":"addLog","ranges":[{"startOffset":8776,"endOffset":8817,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingAssertion","ranges":[{"startOffset":8820,"endOffset":9407,"count":0}],"isBlockCoverage":false},{"functionName":"addFailedAssertion","ranges":[{"startOffset":9410,"endOffset":9795,"count":0}],"isBlockCoverage":false},{"functionName":"finishAttempt","ranges":[{"startOffset":9798,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"saveFirstError","ranges":[{"startOffset":10819,"endOffset":10905,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":10908,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":11207,"endOffset":11504,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":11507,"endOffset":11687,"count":1},{"startOffset":11568,"endOffset":11684,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":11690,"endOffset":11785,"count":2}],"isBlockCoverage":true},{"functionName":"verifyPlan","ranges":[{"startOffset":11788,"endOffset":12149,"count":2},{"startOffset":11854,"endOffset":11892,"count":0},{"startOffset":11894,"endOffset":12146,"count":0}],"isBlockCoverage":true},{"functionName":"verifyAssertions","ranges":[{"startOffset":12152,"endOffset":12797,"count":2},{"startOffset":12197,"endOffset":12213,"count":0},{"startOffset":12251,"endOffset":12369,"count":0},{"startOffset":12409,"endOffset":12512,"count":0},{"startOffset":12548,"endOffset":12794,"count":1},{"startOffset":12582,"endOffset":12648,"count":0},{"startOffset":12680,"endOffset":12698,"count":0},{"startOffset":12700,"endOffset":12790,"count":0}],"isBlockCoverage":true},{"functionName":"trackThrows","ranges":[{"startOffset":12800,"endOffset":12866,"count":0}],"isBlockCoverage":false},{"functionName":"detectImproperThrows","ranges":[{"startOffset":12869,"endOffset":13542,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingThrowsAssertion","ranges":[{"startOffset":13545,"endOffset":13998,"count":0}],"isBlockCoverage":false},{"functionName":"attributeLeakedError","ranges":[{"startOffset":14001,"endOffset":14150,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":14153,"endOffset":14335,"count":2},{"startOffset":14270,"endOffset":14332,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":14338,"endOffset":17248,"count":2},{"startOffset":14436,"endOffset":14765,"count":0},{"startOffset":15000,"endOffset":15149,"count":0},{"startOffset":15326,"endOffset":16228,"count":0},{"startOffset":17212,"endOffset":17247,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15027,"endOffset":15143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15795,"endOffset":16222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16269,"endOffset":17206,"count":2}],"isBlockCoverage":true},{"functionName":"finishDueToAttributedError","ranges":[{"startOffset":16320,"endOffset":16370,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToTimeout","ranges":[{"startOffset":16403,"endOffset":16453,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToInactivity","ranges":[{"startOffset":16489,"endOffset":16737,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16764,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17111,"endOffset":17147,"count":2}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":17251,"endOffset":18077,"count":2},{"startOffset":17344,"endOffset":17397,"count":0},{"startOffset":17612,"endOffset":17803,"count":0}],"isBlockCoverage":true},{"functionName":"finishPromised","ranges":[{"startOffset":18080,"endOffset":18168,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18120,"endOffset":18163,"count":2}],"isBlockCoverage":true}]},{"scriptId":"435","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/plur/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":87,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/irregular-plurals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":227,"count":4}],"isBlockCoverage":true}]},{"scriptId":"437","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/dependency-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":151,"endOffset":311,"count":3},{"startOffset":205,"endOffset":219,"count":1},{"startOffset":219,"endOffset":310,"count":2}],"isBlockCoverage":true},{"functionName":"track","ranges":[{"startOffset":337,"endOffset":552,"count":131},{"startOffset":401,"endOffset":415,"count":0},{"startOffset":452,"endOffset":483,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":578,"endOffset":869,"count":1},{"startOffset":659,"endOffset":867,"count":3}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":740,"endOffset":863,"count":132},{"startOffset":794,"endOffset":821,"count":131}],"isBlockCoverage":true}]},{"scriptId":"438","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19050,"count":1},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":238,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":965,"endOffset":1269,"count":4},{"startOffset":1027,"endOffset":1039,"count":0},{"startOffset":1087,"endOffset":1171,"count":0},{"startOffset":1172,"endOffset":1265,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":1271,"endOffset":1416,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":1418,"endOffset":1620,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1456,"endOffset":1617,"count":8},{"startOffset":1561,"endOffset":1590,"count":1},{"startOffset":1596,"endOffset":1616,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1703,"endOffset":2733,"count":4},{"startOffset":1831,"endOffset":2132,"count":0},{"startOffset":2166,"endOffset":2207,"count":0},{"startOffset":2251,"endOffset":2511,"count":0},{"startOffset":2542,"endOffset":2636,"count":1},{"startOffset":2641,"endOffset":2685,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1965,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":2908,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":3398,"endOffset":4441,"count":4},{"startOffset":3476,"endOffset":3964,"count":0},{"startOffset":4367,"endOffset":4385,"count":0},{"startOffset":4416,"endOffset":4440,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4848,"endOffset":5589,"count":4},{"startOffset":4959,"endOffset":5588,"count":0}],"isBlockCoverage":true},{"functionName":"mapSourcePosition","ranges":[{"startOffset":5593,"endOffset":7405,"count":250},{"startOffset":5701,"endOffset":6613,"count":4},{"startOffset":5859,"endOffset":6496,"count":0},{"startOffset":6714,"endOffset":6772,"count":0},{"startOffset":6774,"endOffset":7383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6241,"endOffset":6480,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":7545,"endOffset":8241,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":8637,"endOffset":10627,"count":250},{"startOffset":8731,"endOffset":8765,"count":0},{"startOffset":8839,"endOffset":8855,"count":0},{"startOffset":8857,"endOffset":8976,"count":0},{"startOffset":9035,"endOffset":9265,"count":0},{"startOffset":9688,"endOffset":9704,"count":150},{"startOffset":9727,"endOffset":10349,"count":125},{"startOffset":9871,"endOffset":9903,"count":0},{"startOffset":10030,"endOffset":10071,"count":50},{"startOffset":10211,"endOffset":10264,"count":25},{"startOffset":10270,"endOffset":10345,"count":0},{"startOffset":10349,"endOffset":10548,"count":125},{"startOffset":10374,"endOffset":10433,"count":25},{"startOffset":10411,"endOffset":10427,"count":0},{"startOffset":10433,"endOffset":10548,"count":100},{"startOffset":10488,"endOffset":10548,"count":0}],"isBlockCoverage":true},{"functionName":"cloneCallSite","ranges":[{"startOffset":10629,"endOffset":10934,"count":250}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10875,"count":5000},{"startOffset":10808,"endOffset":10856,"count":4500},{"startOffset":10857,"endOffset":10870,"count":500}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":10810,"endOffset":10856,"count":1250}],"isBlockCoverage":true},{"functionName":"wrapCallSite","ranges":[{"startOffset":10936,"endOffset":13284,"count":250},{"startOffset":11048,"endOffset":11107,"count":0},{"startOffset":11131,"endOffset":11184,"count":0},{"startOffset":11424,"endOffset":11459,"count":0},{"startOffset":12066,"endOffset":12070,"count":0},{"startOffset":12091,"endOffset":12115,"count":0},{"startOffset":12116,"endOffset":12133,"count":0},{"startOffset":12134,"endOffset":12152,"count":0},{"startOffset":12154,"endOffset":12191,"count":0},{"startOffset":12920,"endOffset":13029,"count":0},{"startOffset":13045,"endOffset":13283,"count":0}],"isBlockCoverage":true},{"functionName":"frame.getFunctionName","ranges":[{"startOffset":12451,"endOffset":12620,"count":250},{"startOffset":12502,"endOffset":12550,"count":25},{"startOffset":12550,"endOffset":12613,"count":225}],"isBlockCoverage":true},{"functionName":"frame.getFileName","ranges":[{"startOffset":12646,"endOffset":12684,"count":0}],"isBlockCoverage":false},{"functionName":"frame.getLineNumber","ranges":[{"startOffset":12712,"endOffset":12748,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getColumnNumber","ranges":[{"startOffset":12778,"endOffset":12820,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getScriptNameOrSourceURL","ranges":[{"startOffset":12859,"endOffset":12897,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getEvalOrigin","ranges":[{"startOffset":13143,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":13396,"endOffset":14009,"count":25},{"startOffset":13474,"endOffset":13532,"count":0},{"startOffset":13558,"endOffset":13568,"count":0},{"startOffset":13600,"endOffset":13605,"count":0},{"startOffset":13781,"endOffset":13900,"count":250}],"isBlockCoverage":true},{"functionName":"getErrorSource","ranges":[{"startOffset":14076,"endOffset":14895,"count":0}],"isBlockCoverage":false},{"functionName":"printErrorAndExit","ranges":[{"startOffset":14897,"endOffset":15274,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":15276,"endOffset":15695,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":16019,"endOffset":18695,"count":2},{"startOffset":16059,"endOffset":16064,"count":0},{"startOffset":16200,"endOffset":16321,"count":0},{"startOffset":16451,"endOffset":16598,"count":0},{"startOffset":16733,"endOffset":16888,"count":0},{"startOffset":16981,"endOffset":16998,"count":0},{"startOffset":17000,"endOffset":17539,"count":0},{"startOffset":17677,"endOffset":17720,"count":0},{"startOffset":17802,"endOffset":17892,"count":1},{"startOffset":18030,"endOffset":18036,"count":0},{"startOffset":18576,"endOffset":18609,"count":0},{"startOffset":18611,"endOffset":18689,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":17283,"endOffset":17468,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":18730,"endOffset":19049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"440","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/buffer-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1595,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":184,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":281,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":824,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":1154,"endOffset":1565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/test/index.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1409,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":162,"count":1},{"startOffset":141,"endOffset":159,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":164,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":352,"endOffset":1095,"count":1},{"startOffset":434,"endOffset":507,"count":0},{"startOffset":509,"endOffset":605,"count":0},{"startOffset":607,"endOffset":735,"count":0},{"startOffset":758,"endOffset":1094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1117,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1185,"endOffset":1238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1266,"endOffset":1368,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1302,"endOffset":1364,"count":1}],"isBlockCoverage":true}]},{"scriptId":"452","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":269,"count":1},{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"453","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"makeCjsExport","ranges":[{"startOffset":89,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":98,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":151,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true}]},{"scriptId":"455","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":1},{"startOffset":351,"endOffset":356,"count":0}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2069,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":173,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":361,"endOffset":1104,"count":1},{"startOffset":443,"endOffset":516,"count":0},{"startOffset":518,"endOffset":614,"count":0},{"startOffset":616,"endOffset":744,"count":0},{"startOffset":767,"endOffset":1103,"count":0}],"isBlockCoverage":true},{"functionName":"createPlugin","ranges":[{"startOffset":1180,"endOffset":2005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1284,"endOffset":2000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/change-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true}]},{"scriptId":"458","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/tslib/tslib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12993,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1296,"endOffset":2268,"count":1},{"startOffset":1369,"endOffset":1441,"count":0},{"startOffset":1481,"endOffset":1494,"count":0},{"startOffset":1496,"endOffset":1623,"count":0},{"startOffset":1784,"endOffset":1843,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1536,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"createExporter","ranges":[{"startOffset":1849,"endOffset":2265,"count":2},{"startOffset":1925,"endOffset":2167,"count":1},{"startOffset":2077,"endOffset":2156,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2184,"endOffset":2257,"count":44},{"startOffset":2233,"endOffset":2250,"count":22},{"startOffset":2251,"endOffset":2254,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2272,"endOffset":12989,"count":1},{"startOffset":2341,"endOffset":2429,"count":0},{"startOffset":2430,"endOffset":2516,"count":0},{"startOffset":2769,"endOffset":3009,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":2392,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":2442,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":2537,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"__assign","ranges":[{"startOffset":2772,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"__rest","ranges":[{"startOffset":3027,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"__decorate","ranges":[{"startOffset":3550,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"__param","ranges":[{"startOffset":4118,"endOffset":4238,"count":0}],"isBlockCoverage":false},{"functionName":"__metadata","ranges":[{"startOffset":4260,"endOffset":4443,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":4464,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":5162,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"__exportStar","ranges":[{"startOffset":7057,"endOffset":7164,"count":11},{"startOffset":7107,"endOffset":7157,"count":17}],"isBlockCoverage":true},{"functionName":"__values","ranges":[{"startOffset":7184,"endOffset":7652,"count":0}],"isBlockCoverage":false},{"functionName":"__read","ranges":[{"startOffset":7670,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"__spread","ranges":[{"startOffset":8215,"endOffset":8367,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArrays","ranges":[{"startOffset":8393,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"__await","ranges":[{"startOffset":8714,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncGenerator","ranges":[{"startOffset":8842,"endOffset":9772,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncDelegator","ranges":[{"startOffset":9800,"endOffset":10143,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncValues","ranges":[{"startOffset":10168,"endOffset":10854,"count":0}],"isBlockCoverage":false},{"functionName":"__makeTemplateObject","ranges":[{"startOffset":10886,"endOffset":11062,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":11086,"endOffset":11346,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":11373,"endOffset":11464,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":11498,"endOffset":11717,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":11751,"endOffset":12000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/camel-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":845,"count":1}],"isBlockCoverage":true},{"functionName":"camelCaseTransform","ranges":[{"startOffset":153,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"camelCaseTransformMerge","ranges":[{"startOffset":365,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":590,"endOffset":780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/pascal-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":943,"count":1}],"isBlockCoverage":true},{"functionName":"pascalCaseTransform","ranges":[{"startOffset":145,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCaseTransformMerge","ranges":[{"startOffset":498,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCase","ranges":[{"startOffset":677,"endOffset":876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/no-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1636,"count":1}],"isBlockCoverage":true},{"functionName":"noCase","ranges":[{"startOffset":443,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":1405,"endOffset":1602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lower-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"localeLowerCase","ranges":[{"startOffset":833,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"lowerCase","ranges":[{"startOffset":1141,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/capital-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"capitalCaseTransform","ranges":[{"startOffset":199,"endOffset":306,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase","ranges":[{"startOffset":360,"endOffset":562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"upperCaseFirst","ranges":[{"startOffset":139,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/constant-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"constantCase","ranges":[{"startOffset":187,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/upper-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"localeUpperCase","ranges":[{"startOffset":688,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"upperCase","ranges":[{"startOffset":996,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/dot-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":371,"count":1}],"isBlockCoverage":true},{"functionName":"dotCase","ranges":[{"startOffset":145,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/header-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"headerCase","ranges":[{"startOffset":155,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/param-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"paramCase","ranges":[{"startOffset":147,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/path-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":378,"count":1}],"isBlockCoverage":true},{"functionName":"pathCase","ranges":[{"startOffset":147,"endOffset":315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/sentence-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"sentenceCaseTransform","ranges":[{"startOffset":199,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceCase","ranges":[{"startOffset":439,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/snake-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"snakeCase","ranges":[{"startOffset":147,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/replace-visitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4266,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":455,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":643,"endOffset":1386,"count":1},{"startOffset":725,"endOffset":798,"count":0},{"startOffset":800,"endOffset":896,"count":0},{"startOffset":898,"endOffset":1026,"count":0},{"startOffset":1049,"endOffset":1385,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1388,"endOffset":1483,"count":1},{"startOffset":1456,"endOffset":1461,"count":0}],"isBlockCoverage":true},{"functionName":"ReplaceVisitor","ranges":[{"startOffset":1535,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"get nodeType","ranges":[{"startOffset":1646,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"onProgramNode","ranges":[{"startOffset":1713,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"onIdentifierNode","ranges":[{"startOffset":1807,"endOffset":4010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1254,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":296,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":426,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":621,"endOffset":716,"count":2},{"startOffset":695,"endOffset":713,"count":0}],"isBlockCoverage":true},{"functionName":"addDefault","ranges":[{"startOffset":718,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":848,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":986,"endOffset":1118,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":1120,"endOffset":1254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/import-injector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8994,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":364,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":552,"endOffset":1295,"count":1},{"startOffset":634,"endOffset":707,"count":0},{"startOffset":709,"endOffset":805,"count":0},{"startOffset":807,"endOffset":935,"count":0},{"startOffset":958,"endOffset":1294,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1297,"endOffset":1392,"count":3},{"startOffset":1365,"endOffset":1370,"count":2},{"startOffset":1371,"endOffset":1389,"count":1}],"isBlockCoverage":true},{"functionName":"ImportInjector","ranges":[{"startOffset":1419,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"addDefault","ranges":[{"startOffset":1931,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":2036,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":2238,"endOffset":2364,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":2368,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"_applyDefaults","ranges":[{"startOffset":2500,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"_generateImport","ranges":[{"startOffset":3294,"endOffset":8518,"count":0}],"isBlockCoverage":false},{"functionName":"_insertStatements","ranges":[{"startOffset":8522,"endOffset":8956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16255,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1508,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1659,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1825,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1967,"endOffset":2015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2089,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2211,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2347,"endOffset":2405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2489,"endOffset":2543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2622,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2751,"endOffset":2801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2890,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3040,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3186,"endOffset":3241,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3333,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3478,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3611,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3753,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3891,"endOffset":3937,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4019,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4152,"endOffset":4203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4284,"endOffset":4335,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4414,"endOffset":4463,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4552,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4691,"endOffset":4741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4821,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4964,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5104,"endOffset":5151,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5245,"endOffset":5309,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5394,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5538,"endOffset":5597,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5686,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5835,"endOffset":5895,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5990,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6132,"endOffset":6179,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6260,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6392,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6514,"endOffset":6555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6633,"endOffset":6681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6763,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6895,"endOffset":6945,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7019,"endOffset":7063,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7138,"endOffset":7183,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7269,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7411,"endOffset":7467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7548,"endOffset":7599,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7675,"endOffset":7721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7808,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7940,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8074,"endOffset":8133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8219,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8349,"endOffset":8393,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8476,"endOffset":8529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8606,"endOffset":8653,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8748,"endOffset":8813,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9274,"endOffset":9547,"count":285},{"startOffset":9340,"endOffset":9347,"count":0},{"startOffset":9411,"endOffset":9418,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9490,"endOffset":9539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9876,"endOffset":10150,"count":558},{"startOffset":9942,"endOffset":9949,"count":0},{"startOffset":10013,"endOffset":10020,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10092,"endOffset":10142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11255,"endOffset":11529,"count":44},{"startOffset":11321,"endOffset":11328,"count":0},{"startOffset":11392,"endOffset":11399,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11471,"endOffset":11521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11607,"endOffset":11880,"count":20},{"startOffset":11673,"endOffset":11680,"count":0},{"startOffset":11744,"endOffset":11751,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11823,"endOffset":11872,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12814,"endOffset":13089,"count":11},{"startOffset":12880,"endOffset":12887,"count":0},{"startOffset":12951,"endOffset":12958,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13030,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15715,"endOffset":15989,"count":285},{"startOffset":15781,"endOffset":15788,"count":0},{"startOffset":15852,"endOffset":15859,"count":1},{"startOffset":15859,"endOffset":15988,"count":284}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15931,"endOffset":15981,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":15993,"endOffset":16088,"count":57},{"startOffset":16067,"endOffset":16085,"count":0}],"isBlockCoverage":true}]},{"scriptId":"477","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":282,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"478","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":300,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1002,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":157,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114992,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13854,"endOffset":13949,"count":1},{"startOffset":13928,"endOffset":13946,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":13951,"endOffset":14242,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":14244,"endOffset":14545,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":14547,"endOffset":14840,"count":0}],"isBlockCoverage":false},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":14842,"endOffset":15143,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15145,"endOffset":15424,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15426,"endOffset":15719,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":15721,"endOffset":16010,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":16012,"endOffset":16301,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16303,"endOffset":16592,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":16594,"endOffset":16877,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":16879,"endOffset":17182,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":17184,"endOffset":17479,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17481,"endOffset":17776,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":17778,"endOffset":18071,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":18073,"endOffset":18362,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":18364,"endOffset":18663,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":18665,"endOffset":18934,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":18936,"endOffset":19225,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":19227,"endOffset":19512,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":19514,"endOffset":19813,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":19815,"endOffset":20112,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":20114,"endOffset":20395,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":20397,"endOffset":20680,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":20682,"endOffset":20975,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":20977,"endOffset":21264,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":21266,"endOffset":21555,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteral","ranges":[{"startOffset":21557,"endOffset":21840,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":21842,"endOffset":22131,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":22133,"endOffset":22420,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":22422,"endOffset":22717,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpression","ranges":[{"startOffset":22719,"endOffset":23012,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":23014,"endOffset":23301,"count":0}],"isBlockCoverage":false},{"functionName":"isProgram","ranges":[{"startOffset":23303,"endOffset":23578,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectExpression","ranges":[{"startOffset":23580,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":23875,"endOffset":24160,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":24162,"endOffset":24451,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":24453,"endOffset":24736,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":24738,"endOffset":25029,"count":0}],"isBlockCoverage":false},{"functionName":"isSequenceExpression","ranges":[{"startOffset":25031,"endOffset":25328,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":25330,"endOffset":25637,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchCase","ranges":[{"startOffset":25639,"endOffset":25920,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":25922,"endOffset":26213,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":26215,"endOffset":26504,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":26506,"endOffset":26795,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":26797,"endOffset":27082,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":27084,"endOffset":27375,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":27377,"endOffset":27670,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":27672,"endOffset":27971,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":27973,"endOffset":28270,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":28272,"endOffset":28561,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":28563,"endOffset":28850,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":28852,"endOffset":29147,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayPattern","ranges":[{"startOffset":29149,"endOffset":29434,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":29436,"endOffset":29743,"count":0}],"isBlockCoverage":false},{"functionName":"isClassBody","ranges":[{"startOffset":29745,"endOffset":30024,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":30026,"endOffset":30317,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":30319,"endOffset":30612,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":30614,"endOffset":30915,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":30917,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":31228,"endOffset":31533,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":31535,"endOffset":31826,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":31828,"endOffset":32117,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":32119,"endOffset":32414,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":32416,"endOffset":32721,"count":0}],"isBlockCoverage":false},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":32723,"endOffset":33032,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":33034,"endOffset":33325,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":33327,"endOffset":33612,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":33614,"endOffset":33897,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":33899,"endOffset":34186,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":34188,"endOffset":34475,"count":0}],"isBlockCoverage":false},{"functionName":"isSuper","ranges":[{"startOffset":34477,"endOffset":34748,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":34750,"endOffset":35059,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateElement","ranges":[{"startOffset":35061,"endOffset":35352,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":35354,"endOffset":35645,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":35647,"endOffset":35938,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":35940,"endOffset":36235,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":36237,"endOffset":36536,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":36538,"endOffset":36841,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":36843,"endOffset":37160,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":37162,"endOffset":37473,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":37475,"endOffset":37766,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":37768,"endOffset":38053,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":38055,"endOffset":38346,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":38348,"endOffset":38641,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":38643,"endOffset":38930,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":38932,"endOffset":39233,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":39235,"endOffset":39528,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":39530,"endOffset":39825,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":39827,"endOffset":40118,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":40120,"endOffset":40429,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":40431,"endOffset":40746,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":40748,"endOffset":41043,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":41045,"endOffset":41346,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":41348,"endOffset":41653,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":41655,"endOffset":41950,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":41952,"endOffset":42255,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":42257,"endOffset":42552,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":42554,"endOffset":42847,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":42849,"endOffset":43150,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":43152,"endOffset":43459,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":43461,"endOffset":43774,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":43776,"endOffset":44075,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":44077,"endOffset":44376,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":44378,"endOffset":44683,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":44685,"endOffset":45000,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":45002,"endOffset":45303,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":45305,"endOffset":45606,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":45608,"endOffset":45913,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":45915,"endOffset":46220,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":46222,"endOffset":46517,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":46519,"endOffset":46816,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":46818,"endOffset":47127,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":47129,"endOffset":47410,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":47412,"endOffset":47719,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":47721,"endOffset":48036,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":48038,"endOffset":48339,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":48341,"endOffset":48642,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":48644,"endOffset":48941,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":48943,"endOffset":49242,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":49244,"endOffset":49545,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":49547,"endOffset":49826,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":49828,"endOffset":50117,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":50119,"endOffset":50416,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":50418,"endOffset":50705,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":50707,"endOffset":51016,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":51018,"endOffset":51331,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":51333,"endOffset":51632,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":51634,"endOffset":51911,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":51913,"endOffset":52210,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":52212,"endOffset":52503,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":52505,"endOffset":52796,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":52798,"endOffset":53087,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":53089,"endOffset":53378,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":53380,"endOffset":53669,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":53671,"endOffset":53966,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":53968,"endOffset":54261,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":54263,"endOffset":54556,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":54558,"endOffset":54857,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":54859,"endOffset":55144,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":55146,"endOffset":55441,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":55443,"endOffset":55724,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":55726,"endOffset":56023,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":56025,"endOffset":56330,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":56332,"endOffset":56621,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":56623,"endOffset":56910,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":56912,"endOffset":57211,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":57213,"endOffset":57508,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":57510,"endOffset":57805,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":57807,"endOffset":58104,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":58106,"endOffset":58381,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":58383,"endOffset":58666,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":58668,"endOffset":58965,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":58967,"endOffset":59264,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":59266,"endOffset":59535,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":59537,"endOffset":59820,"count":0}],"isBlockCoverage":false},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":59822,"endOffset":60125,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":60127,"endOffset":60426,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":60428,"endOffset":60719,"count":0}],"isBlockCoverage":false},{"functionName":"isBindExpression","ranges":[{"startOffset":60721,"endOffset":61010,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":61012,"endOffset":61299,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":61301,"endOffset":61610,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":61612,"endOffset":61919,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":61921,"endOffset":62222,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":62224,"endOffset":62543,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":62545,"endOffset":62850,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":62852,"endOffset":63153,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":63155,"endOffset":63452,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":63454,"endOffset":63727,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":63729,"endOffset":64008,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":64010,"endOffset":64295,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":64297,"endOffset":64602,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":64604,"endOffset":64913,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":64915,"endOffset":65198,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":65200,"endOffset":65487,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":65489,"endOffset":65782,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":65784,"endOffset":66075,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":66077,"endOffset":66376,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":66378,"endOffset":66673,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":66675,"endOffset":66966,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":66968,"endOffset":67259,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":67261,"endOffset":67574,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":67576,"endOffset":67899,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":67901,"endOffset":68200,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":68202,"endOffset":68497,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":68499,"endOffset":68792,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":68794,"endOffset":69079,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":69081,"endOffset":69374,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":69376,"endOffset":69667,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":69669,"endOffset":69958,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":69960,"endOffset":70247,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":70249,"endOffset":70540,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":70542,"endOffset":70833,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":70835,"endOffset":71126,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":71128,"endOffset":71419,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":71421,"endOffset":71718,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":71720,"endOffset":72013,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":72015,"endOffset":72302,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":72304,"endOffset":72585,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":72587,"endOffset":72876,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":72878,"endOffset":73173,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":73175,"endOffset":73466,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":73468,"endOffset":73759,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":73761,"endOffset":74044,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":74046,"endOffset":74333,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":74335,"endOffset":74618,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":74620,"endOffset":74903,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":74905,"endOffset":75194,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":75196,"endOffset":75477,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":75479,"endOffset":75762,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":75764,"endOffset":76061,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":76063,"endOffset":76358,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":76360,"endOffset":76643,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":76645,"endOffset":76944,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":76946,"endOffset":77235,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":77237,"endOffset":77536,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":77538,"endOffset":77823,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":77825,"endOffset":78112,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":78114,"endOffset":78433,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":78435,"endOffset":78740,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":78742,"endOffset":79033,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":79035,"endOffset":79340,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":79342,"endOffset":79631,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":79633,"endOffset":79924,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":79926,"endOffset":80221,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":80223,"endOffset":80508,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":80510,"endOffset":80809,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":80811,"endOffset":81098,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":81100,"endOffset":81385,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":81387,"endOffset":81698,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":81700,"endOffset":82011,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":82013,"endOffset":82312,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":82314,"endOffset":82611,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":82613,"endOffset":82930,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":82932,"endOffset":83225,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":83227,"endOffset":83544,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":83546,"endOffset":83859,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":83861,"endOffset":84152,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":84154,"endOffset":86109,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":86111,"endOffset":86455,"count":0}],"isBlockCoverage":false},{"functionName":"isScopable","ranges":[{"startOffset":86457,"endOffset":87410,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockParent","ranges":[{"startOffset":87412,"endOffset":88302,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":88304,"endOffset":88738,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":88740,"endOffset":90857,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminatorless","ranges":[{"startOffset":90859,"endOffset":91352,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":91354,"endOffset":91789,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":91791,"endOffset":92144,"count":0}],"isBlockCoverage":false},{"functionName":"isLoop","ranges":[{"startOffset":92146,"endOffset":92580,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":92582,"endOffset":92921,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":92923,"endOffset":93335,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":93337,"endOffset":93701,"count":0}],"isBlockCoverage":false},{"functionName":"isForXStatement","ranges":[{"startOffset":93703,"endOffset":94056,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":94058,"endOffset":94550,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionParent","ranges":[{"startOffset":94552,"endOffset":95056,"count":0}],"isBlockCoverage":false},{"functionName":"isPureish","ranges":[{"startOffset":95058,"endOffset":95713,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":95715,"endOffset":97024,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternLike","ranges":[{"startOffset":97026,"endOffset":97572,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":97574,"endOffset":98179,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":98181,"endOffset":98597,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":98599,"endOffset":99171,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutable","ranges":[{"startOffset":99173,"endOffset":100019,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":100021,"endOffset":100578,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":100580,"endOffset":100951,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMember","ranges":[{"startOffset":100953,"endOffset":101302,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":101304,"endOffset":101685,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":101687,"endOffset":102032,"count":0}],"isBlockCoverage":false},{"functionName":"isPattern","ranges":[{"startOffset":102034,"endOffset":102473,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":102475,"endOffset":102815,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":102817,"endOffset":103271,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":103273,"endOffset":103691,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":103693,"endOffset":104220,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":104222,"endOffset":106552,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":106554,"endOffset":107797,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":107799,"endOffset":108483,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":108485,"endOffset":109237,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":109239,"endOffset":109598,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":109600,"endOffset":110010,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":110012,"endOffset":110437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":110439,"endOffset":111222,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":111224,"endOffset":111605,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":111607,"endOffset":112098,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":112100,"endOffset":113512,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":113514,"endOffset":113884,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":113886,"endOffset":114252,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":114254,"endOffset":114618,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":114620,"endOffset":114992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":113,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":112,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":289,"endOffset":384,"count":1},{"startOffset":363,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":386,"endOffset":857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":183,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44964,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":19973,"endOffset":20068,"count":1},{"startOffset":20047,"endOffset":20065,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":20070,"endOffset":20167,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":20169,"endOffset":20276,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":20278,"endOffset":20377,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":20379,"endOffset":20486,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":20488,"endOffset":20573,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":20575,"endOffset":20674,"count":0}],"isBlockCoverage":false},{"functionName":"BlockStatement","ranges":[{"startOffset":20676,"endOffset":20771,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement","ranges":[{"startOffset":20773,"endOffset":20868,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":20870,"endOffset":20965,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":20967,"endOffset":21056,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":21058,"endOffset":21167,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":21169,"endOffset":21270,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":21272,"endOffset":21373,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":21375,"endOffset":21474,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":21476,"endOffset":21571,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":21573,"endOffset":21678,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":21680,"endOffset":21755,"count":0}],"isBlockCoverage":false},{"functionName":"ForInStatement","ranges":[{"startOffset":21757,"endOffset":21852,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":21854,"endOffset":21945,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":21947,"endOffset":22052,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":22054,"endOffset":22157,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":22159,"endOffset":22246,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":22248,"endOffset":22337,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":22339,"endOffset":22438,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":22440,"endOffset":22533,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":22535,"endOffset":22630,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":22632,"endOffset":22721,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":22723,"endOffset":22818,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":22820,"endOffset":22913,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":22915,"endOffset":23016,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":23018,"endOffset":23117,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":23119,"endOffset":23212,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":23214,"endOffset":23295,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":23297,"endOffset":23396,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":23398,"endOffset":23489,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":23491,"endOffset":23586,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":23588,"endOffset":23677,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":23679,"endOffset":23776,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":23778,"endOffset":23881,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":23883,"endOffset":23996,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":23998,"endOffset":24085,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":24087,"endOffset":24184,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":24186,"endOffset":24281,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowStatement","ranges":[{"startOffset":24283,"endOffset":24378,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":24380,"endOffset":24471,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":24473,"endOffset":24570,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":24572,"endOffset":24671,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":24673,"endOffset":24778,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":24780,"endOffset":24883,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":24885,"endOffset":24980,"count":0}],"isBlockCoverage":false},{"functionName":"WithStatement","ranges":[{"startOffset":24982,"endOffset":25075,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":25077,"endOffset":25178,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPattern","ranges":[{"startOffset":25180,"endOffset":25271,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":25273,"endOffset":25386,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":25388,"endOffset":25473,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":25475,"endOffset":25572,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":25574,"endOffset":25673,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":25675,"endOffset":25782,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":25784,"endOffset":25899,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":25901,"endOffset":26012,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":26014,"endOffset":26111,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement","ranges":[{"startOffset":26113,"endOffset":26208,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":26210,"endOffset":26311,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":26313,"endOffset":26424,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":26426,"endOffset":26541,"count":0}],"isBlockCoverage":false},{"functionName":"ImportSpecifier","ranges":[{"startOffset":26543,"endOffset":26640,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":26642,"endOffset":26733,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":26735,"endOffset":26824,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":26826,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadElement","ranges":[{"startOffset":26921,"endOffset":27014,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":27016,"endOffset":27093,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":27095,"endOffset":27210,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":27212,"endOffset":27309,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":27311,"endOffset":27408,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":27410,"endOffset":27507,"count":0}],"isBlockCoverage":false},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":27509,"endOffset":27610,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":27612,"endOffset":27717,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":27719,"endOffset":27828,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":27830,"endOffset":27953,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":27955,"endOffset":28072,"count":0}],"isBlockCoverage":false},{"functionName":"ClassImplements","ranges":[{"startOffset":28074,"endOffset":28171,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":28173,"endOffset":28264,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":28266,"endOffset":28363,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":28365,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":28466,"endOffset":28559,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":28561,"endOffset":28668,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":28670,"endOffset":28769,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":28771,"endOffset":28872,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":28874,"endOffset":28971,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":28973,"endOffset":29088,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":29090,"endOffset":29211,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":29213,"endOffset":29314,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":29316,"endOffset":29423,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":29425,"endOffset":29536,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":29538,"endOffset":29639,"count":0}],"isBlockCoverage":false},{"functionName":"GenericTypeAnnotation","ranges":[{"startOffset":29641,"endOffset":29750,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":29752,"endOffset":29853,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":29855,"endOffset":29954,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":29956,"endOffset":30063,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":30065,"endOffset":30178,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":30180,"endOffset":30299,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":30301,"endOffset":30406,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":30408,"endOffset":30513,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":30515,"endOffset":30626,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteralTypeAnnotation","ranges":[{"startOffset":30628,"endOffset":30749,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":30751,"endOffset":30858,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":30860,"endOffset":30967,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":30969,"endOffset":31080,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":31082,"endOffset":31193,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":31195,"endOffset":31296,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":31298,"endOffset":31401,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":31403,"endOffset":31518,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":31520,"endOffset":31607,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":31609,"endOffset":31722,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteralTypeAnnotation","ranges":[{"startOffset":31724,"endOffset":31845,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":31847,"endOffset":31954,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":31956,"endOffset":32063,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":32065,"endOffset":32168,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":32170,"endOffset":32275,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":32277,"endOffset":32384,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":32386,"endOffset":32471,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":32473,"endOffset":32568,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":32570,"endOffset":32673,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":32675,"endOffset":32768,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterDeclaration","ranges":[{"startOffset":32770,"endOffset":32885,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":32887,"endOffset":33006,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":33008,"endOffset":33113,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":33115,"endOffset":33198,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":33200,"endOffset":33303,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":33305,"endOffset":33402,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":33404,"endOffset":33501,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":33503,"endOffset":33598,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":33600,"endOffset":33695,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":33697,"endOffset":33792,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":33794,"endOffset":33895,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":33897,"endOffset":33996,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":33998,"endOffset":34097,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":34099,"endOffset":34204,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":34206,"endOffset":34297,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":34299,"endOffset":34400,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":34402,"endOffset":34489,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":34491,"endOffset":34594,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":34596,"endOffset":34707,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":34709,"endOffset":34804,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":34806,"endOffset":34899,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":34901,"endOffset":35006,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":35008,"endOffset":35109,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":35111,"endOffset":35212,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":35214,"endOffset":35317,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":35319,"endOffset":35400,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":35402,"endOffset":35491,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":35493,"endOffset":35596,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":35598,"endOffset":35701,"count":0}],"isBlockCoverage":false},{"functionName":"Noop","ranges":[{"startOffset":35703,"endOffset":35778,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":35780,"endOffset":35869,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":35871,"endOffset":35980,"count":0}],"isBlockCoverage":false},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":35982,"endOffset":36087,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":36089,"endOffset":36186,"count":0}],"isBlockCoverage":false},{"functionName":"BindExpression","ranges":[{"startOffset":36188,"endOffset":36283,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":36285,"endOffset":36378,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":36380,"endOffset":36495,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":36497,"endOffset":36610,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":36612,"endOffset":36719,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":36721,"endOffset":36846,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":36848,"endOffset":36959,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":36961,"endOffset":37068,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":37070,"endOffset":37173,"count":0}],"isBlockCoverage":false},{"functionName":"Import","ranges":[{"startOffset":37175,"endOffset":37254,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":37256,"endOffset":37341,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":37343,"endOffset":37434,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":37436,"endOffset":37547,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":37549,"endOffset":37664,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":37666,"endOffset":37755,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntLiteral","ranges":[{"startOffset":37757,"endOffset":37850,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":37852,"endOffset":37951,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":37953,"endOffset":38050,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":38052,"endOffset":38157,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":38159,"endOffset":38260,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":38262,"endOffset":38359,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":38361,"endOffset":38458,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":38460,"endOffset":38579,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":38581,"endOffset":38710,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":38712,"endOffset":38817,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":38819,"endOffset":38920,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":38922,"endOffset":39021,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":39023,"endOffset":39114,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":39116,"endOffset":39215,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":39217,"endOffset":39314,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":39316,"endOffset":39411,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":39413,"endOffset":39506,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":39508,"endOffset":39605,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":39607,"endOffset":39704,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":39706,"endOffset":39803,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":39805,"endOffset":39902,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":39904,"endOffset":40007,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":40009,"endOffset":40108,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":40110,"endOffset":40203,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":40205,"endOffset":40292,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":40294,"endOffset":40389,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":40391,"endOffset":40492,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":40494,"endOffset":40591,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":40593,"endOffset":40690,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":40692,"endOffset":40781,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":40783,"endOffset":40876,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":40878,"endOffset":40967,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":40969,"endOffset":41058,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":41060,"endOffset":41155,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":41157,"endOffset":41244,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":41246,"endOffset":41335,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":41337,"endOffset":41440,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":41442,"endOffset":41543,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":41545,"endOffset":41634,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":41636,"endOffset":41741,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":41743,"endOffset":41838,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":41840,"endOffset":41945,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":41947,"endOffset":42038,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":42040,"endOffset":42133,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":42135,"endOffset":42260,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":42262,"endOffset":42373,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":42375,"endOffset":42472,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":42474,"endOffset":42585,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":42587,"endOffset":42682,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":42684,"endOffset":42781,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":42783,"endOffset":42884,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":42886,"endOffset":42977,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":42979,"endOffset":43084,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":43086,"endOffset":43179,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":43181,"endOffset":43272,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":43274,"endOffset":43391,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":43393,"endOffset":43510,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":43512,"endOffset":43617,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":43619,"endOffset":43722,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":43724,"endOffset":43847,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":43849,"endOffset":43948,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":43950,"endOffset":44073,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterDeclaration","ranges":[{"startOffset":44075,"endOffset":44194,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":44196,"endOffset":44293,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":44295,"endOffset":44463,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":44465,"endOffset":44628,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":44630,"endOffset":44791,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":44793,"endOffset":44964,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":294,"endOffset":389,"count":2},{"startOffset":362,"endOffset":367,"count":1},{"startOffset":368,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":391,"endOffset":1063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2539,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":156,"endOffset":205,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":284,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":473,"count":44}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":553,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":682,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":815,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":959,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1100,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1243,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1400,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1817,"endOffset":1912,"count":1},{"startOffset":1885,"endOffset":1890,"count":0}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"FastObject","ranges":[{"startOffset":349,"endOffset":856,"count":18},{"startOffset":635,"endOffset":663,"count":9},{"startOffset":665,"endOffset":804,"count":9},{"startOffset":804,"endOffset":825,"count":1},{"startOffset":826,"endOffset":829,"count":8}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":944,"endOffset":999,"count":8}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27269,"count":1},{"startOffset":1884,"endOffset":1895,"count":0},{"startOffset":2626,"endOffset":2721,"count":0},{"startOffset":5253,"endOffset":5257,"count":0},{"startOffset":7667,"endOffset":7785,"count":0},{"startOffset":16344,"endOffset":16348,"count":0},{"startOffset":17968,"endOffset":17972,"count":0},{"startOffset":19021,"endOffset":19025,"count":0},{"startOffset":21241,"endOffset":21314,"count":0},{"startOffset":24824,"endOffset":24886,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":558,"endOffset":744,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":746,"endOffset":1489,"count":1},{"startOffset":828,"endOffset":901,"count":0},{"startOffset":903,"endOffset":999,"count":0},{"startOffset":1001,"endOffset":1129,"count":0},{"startOffset":1152,"endOffset":1488,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1491,"endOffset":1586,"count":2},{"startOffset":1565,"endOffset":1583,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2515,"count":1},{"startOffset":2182,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2341,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10037,"endOffset":10346,"count":1},{"startOffset":10112,"endOffset":10345,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10103,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10189,"endOffset":10341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11458,"endOffset":11695,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11812,"endOffset":13013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14811,"endOffset":15061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15823,"endOffset":16145,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15999,"endOffset":16136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18046,"endOffset":18388,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18242,"endOffset":18379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19112,"endOffset":19454,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19308,"endOffset":19445,"count":0}],"isBlockCoverage":false},{"functionName":"fields.shorthand.validate","ranges":[{"startOffset":19647,"endOffset":19892,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19894,"endOffset":20175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20511,"endOffset":20904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20674,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":21330,"endOffset":21697,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23723,"endOffset":23958,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":25573,"endOffset":25914,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26029,"endOffset":26478,"count":1},{"startOffset":26156,"endOffset":26477,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26337,"endOffset":26469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":371,"endOffset":466,"count":3},{"startOffset":445,"endOffset":463,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":468,"endOffset":916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":154,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":165,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":199,"endOffset":589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":739,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":899,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1188,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11638,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10182,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":10435,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":10782,"endOffset":11228,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":11230,"endOffset":11638,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1020,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1123,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1251,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1347,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1487,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3200,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2252,"count":11}],"isBlockCoverage":true}]},{"scriptId":"498","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8141,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1041,"endOffset":1136,"count":1},{"startOffset":1115,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1624,"endOffset":1783,"count":13},{"startOffset":1674,"endOffset":1699,"count":0},{"startOffset":1723,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1785,"endOffset":1845,"count":130}],"isBlockCoverage":true},{"functionName":"typeIs","ranges":[{"startOffset":1847,"endOffset":1972,"count":164},{"startOffset":1913,"endOffset":1939,"count":147},{"startOffset":1940,"endOffset":1969,"count":17}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1974,"endOffset":2046,"count":91}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":2048,"endOffset":2136,"count":33}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":2138,"endOffset":2248,"count":39}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2250,"endOffset":2350,"count":34}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2352,"endOffset":2422,"count":34}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2424,"endOffset":2508,"count":12}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2510,"endOffset":2910,"count":71}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":2544,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2912,"endOffset":3208,"count":21}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2948,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3210,"endOffset":3668,"count":345}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3248,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3670,"endOffset":4167,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3715,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4169,"endOffset":4450,"count":140}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4204,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"assertShape","ranges":[{"startOffset":4452,"endOffset":5062,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4484,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5064,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":5789,"endOffset":5949,"count":80}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":5816,"endOffset":5901,"count":0}],"isBlockCoverage":false},{"functionName":"defineType","ranges":[{"startOffset":6122,"endOffset":8122,"count":237},{"startOffset":6194,"endOffset":6217,"count":3},{"startOffset":6218,"endOffset":6223,"count":234},{"startOffset":6269,"endOffset":6614,"count":25},{"startOffset":6314,"endOffset":6610,"count":1},{"startOffset":6411,"endOffset":6604,"count":5},{"startOffset":6647,"endOffset":6666,"count":41},{"startOffset":6667,"endOffset":6672,"count":38},{"startOffset":6705,"endOffset":6724,"count":24},{"startOffset":6725,"endOffset":6730,"count":23},{"startOffset":6763,"endOffset":6782,"count":176},{"startOffset":6783,"endOffset":6798,"count":173},{"startOffset":6799,"endOffset":6804,"count":23},{"startOffset":6844,"endOffset":6962,"count":695},{"startOffset":6887,"endOffset":6958,"count":0},{"startOffset":6992,"endOffset":7047,"count":4},{"startOffset":7094,"endOffset":7136,"count":803},{"startOffset":7126,"endOffset":7131,"count":16},{"startOffset":7179,"endOffset":7692,"count":538},{"startOffset":7249,"endOffset":7279,"count":109},{"startOffset":7281,"endOffset":7317,"count":43},{"startOffset":7356,"endOffset":7391,"count":429},{"startOffset":7391,"endOffset":7514,"count":109},{"startOffset":7417,"endOffset":7441,"count":13},{"startOffset":7443,"endOffset":7514,"count":13},{"startOffset":7556,"endOffset":7688,"count":1258},{"startOffset":7602,"endOffset":7682,"count":0},{"startOffset":8041,"endOffset":8097,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7895,"endOffset":8016,"count":443},{"startOffset":7964,"endOffset":7969,"count":44}],"isBlockCoverage":true}]},{"scriptId":"499","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":833,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":234,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"validateField","ranges":[{"startOffset":473,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"validateChild","ranges":[{"startOffset":644,"endOffset":833,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16057,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":420,"count":1},{"startOffset":399,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":422,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":610,"endOffset":1353,"count":1},{"startOffset":692,"endOffset":765,"count":0},{"startOffset":767,"endOffset":863,"count":0},{"startOffset":865,"endOffset":993,"count":0},{"startOffset":1016,"endOffset":1352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5053,"endOffset":5356,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5143,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"fields.declaration.validate","ranges":[{"startOffset":6255,"endOffset":6505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6507,"endOffset":6720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6861,"endOffset":7301,"count":1},{"startOffset":7138,"endOffset":7300,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7154,"endOffset":7292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8044,"endOffset":8620,"count":1},{"startOffset":8194,"endOffset":8619,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8406,"endOffset":8611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10392,"endOffset":10944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11493,"endOffset":11821,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11683,"endOffset":11814,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15116,"endOffset":15402,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15668,"endOffset":15918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16829,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":1038,"endOffset":1822,"count":3}],"isBlockCoverage":true}]},{"scriptId":"502","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5428,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"503","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":310,"endOffset":1053,"count":1},{"startOffset":392,"endOffset":465,"count":0},{"startOffset":467,"endOffset":563,"count":0},{"startOffset":565,"endOffset":693,"count":0},{"startOffset":716,"endOffset":1052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"504","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1062,"count":1},{"startOffset":567,"endOffset":674,"count":8},{"startOffset":622,"endOffset":637,"count":4},{"startOffset":639,"endOffset":672,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":820,"endOffset":1060,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":865,"endOffset":1056,"count":15},{"startOffset":948,"endOffset":1001,"count":11}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7852,"count":1},{"startOffset":1473,"endOffset":1635,"count":0},{"startOffset":3404,"endOffset":3503,"count":0},{"startOffset":4589,"endOffset":4688,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2934,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3095,"endOffset":3232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14066,"count":1},{"startOffset":4543,"endOffset":4639,"count":12}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":138,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":326,"endOffset":1069,"count":1},{"startOffset":408,"endOffset":481,"count":0},{"startOffset":483,"endOffset":579,"count":0},{"startOffset":581,"endOffset":709,"count":0},{"startOffset":732,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"507","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":257,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":280,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":154,"endOffset":238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16119,"endOffset":16214,"count":1},{"startOffset":16193,"endOffset":16211,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":16216,"endOffset":16424,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":16426,"endOffset":16518,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":16520,"endOffset":16622,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":16624,"endOffset":16718,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":16720,"endOffset":16822,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":16824,"endOffset":16904,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":16906,"endOffset":17000,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":17002,"endOffset":17092,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":17094,"endOffset":17184,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":17186,"endOffset":17276,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":17278,"endOffset":17362,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":17364,"endOffset":17468,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":17470,"endOffset":17566,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":17568,"endOffset":17664,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":17666,"endOffset":17760,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":17762,"endOffset":17852,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":17854,"endOffset":17954,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":17956,"endOffset":18026,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":18028,"endOffset":18118,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":18120,"endOffset":18206,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":18208,"endOffset":18308,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":18310,"endOffset":18408,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":18410,"endOffset":18492,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":18494,"endOffset":18578,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":18580,"endOffset":18674,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":18676,"endOffset":18764,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":18766,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":18858,"endOffset":18942,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":18944,"endOffset":19034,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":19036,"endOffset":19124,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":19126,"endOffset":19222,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":19224,"endOffset":19318,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":19320,"endOffset":19408,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":19410,"endOffset":19486,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":19488,"endOffset":19582,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":19584,"endOffset":19670,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":19672,"endOffset":19762,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":19764,"endOffset":19848,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":19850,"endOffset":19942,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":19944,"endOffset":20042,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20044,"endOffset":20152,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":20154,"endOffset":20236,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":20238,"endOffset":20330,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":20332,"endOffset":20422,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":20424,"endOffset":20514,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":20516,"endOffset":20602,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":20604,"endOffset":20696,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":20698,"endOffset":20792,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":20794,"endOffset":20894,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":20896,"endOffset":20994,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":20996,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21088,"endOffset":21176,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":21178,"endOffset":21274,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":21276,"endOffset":21362,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":21364,"endOffset":21472,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":21474,"endOffset":21554,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":21556,"endOffset":21648,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":21650,"endOffset":21744,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":21746,"endOffset":21848,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":21850,"endOffset":21960,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":21962,"endOffset":22068,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22070,"endOffset":22162,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22164,"endOffset":22254,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":22256,"endOffset":22352,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":22354,"endOffset":22460,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":22462,"endOffset":22572,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":22574,"endOffset":22666,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":22668,"endOffset":22754,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":22756,"endOffset":22840,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":22842,"endOffset":22930,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":22932,"endOffset":23020,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":23022,"endOffset":23094,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23096,"endOffset":23206,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":23208,"endOffset":23300,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":23302,"endOffset":23394,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":23396,"endOffset":23488,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":23490,"endOffset":23586,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":23588,"endOffset":23688,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":23690,"endOffset":23794,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":23796,"endOffset":23914,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":23916,"endOffset":24028,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":24030,"endOffset":24122,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":24124,"endOffset":24210,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":24212,"endOffset":24304,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":24306,"endOffset":24400,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":24402,"endOffset":24490,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":24492,"endOffset":24594,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":24596,"endOffset":24690,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":24692,"endOffset":24788,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":24790,"endOffset":24882,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":24884,"endOffset":24994,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":24996,"endOffset":25112,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":25114,"endOffset":25210,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":25212,"endOffset":25314,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":25316,"endOffset":25422,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":25424,"endOffset":25520,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":25522,"endOffset":25626,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":25628,"endOffset":25724,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":25726,"endOffset":25820,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":25822,"endOffset":25924,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":25926,"endOffset":26034,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":26036,"endOffset":26150,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":26152,"endOffset":26252,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":26254,"endOffset":26354,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":26356,"endOffset":26462,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":26464,"endOffset":26580,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":26582,"endOffset":26684,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":26686,"endOffset":26788,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":26790,"endOffset":26896,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":26898,"endOffset":27004,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":27006,"endOffset":27102,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":27104,"endOffset":27202,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":27204,"endOffset":27314,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":27316,"endOffset":27398,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":27400,"endOffset":27508,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":27510,"endOffset":27626,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":27628,"endOffset":27730,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":27732,"endOffset":27834,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":27836,"endOffset":27934,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":27936,"endOffset":28036,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":28038,"endOffset":28140,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":28142,"endOffset":28222,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":28224,"endOffset":28314,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":28316,"endOffset":28414,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":28416,"endOffset":28504,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":28506,"endOffset":28616,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":28618,"endOffset":28732,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":28734,"endOffset":28834,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":28836,"endOffset":28914,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":28916,"endOffset":29014,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":29016,"endOffset":29108,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":29110,"endOffset":29202,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":29204,"endOffset":29294,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":29296,"endOffset":29386,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":29388,"endOffset":29478,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":29480,"endOffset":29576,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":29578,"endOffset":29672,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":29674,"endOffset":29768,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":29770,"endOffset":29870,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":29872,"endOffset":29958,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":29960,"endOffset":30056,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":30058,"endOffset":30140,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":30142,"endOffset":30240,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":30242,"endOffset":30348,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":30350,"endOffset":30440,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":30442,"endOffset":30530,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":30532,"endOffset":30632,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":30634,"endOffset":30730,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":30732,"endOffset":30828,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":30830,"endOffset":30928,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":30930,"endOffset":31006,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":31008,"endOffset":31092,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":31094,"endOffset":31192,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":31194,"endOffset":31292,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":31294,"endOffset":31364,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":31366,"endOffset":31450,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":31452,"endOffset":31556,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":31558,"endOffset":31658,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":31660,"endOffset":31752,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":31754,"endOffset":31844,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":31846,"endOffset":31934,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":31936,"endOffset":32046,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":32048,"endOffset":32156,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":32158,"endOffset":32260,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":32262,"endOffset":32382,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":32384,"endOffset":32490,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":32492,"endOffset":32594,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":32596,"endOffset":32694,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":32696,"endOffset":32770,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":32772,"endOffset":32852,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":32854,"endOffset":32940,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":32942,"endOffset":33048,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":33050,"endOffset":33160,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":33162,"endOffset":33246,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":33248,"endOffset":33336,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":33338,"endOffset":33432,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":33434,"endOffset":33526,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":33528,"endOffset":33628,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":33630,"endOffset":33726,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":33728,"endOffset":33820,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":33822,"endOffset":33914,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":33916,"endOffset":34030,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":34032,"endOffset":34156,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":34158,"endOffset":34258,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":34260,"endOffset":34356,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":34358,"endOffset":34452,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":34454,"endOffset":34540,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":34542,"endOffset":34636,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":34638,"endOffset":34730,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":34732,"endOffset":34822,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":34824,"endOffset":34912,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":34914,"endOffset":35006,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":35008,"endOffset":35100,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":35102,"endOffset":35194,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":35196,"endOffset":35288,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":35290,"endOffset":35388,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":35390,"endOffset":35484,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":35486,"endOffset":35574,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":35576,"endOffset":35658,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":35660,"endOffset":35750,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":35752,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":35850,"endOffset":35942,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":35944,"endOffset":36036,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":36038,"endOffset":36122,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":36124,"endOffset":36212,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":36214,"endOffset":36298,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":36300,"endOffset":36384,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":36386,"endOffset":36476,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":36478,"endOffset":36560,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":36562,"endOffset":36646,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":36648,"endOffset":36746,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":36748,"endOffset":36844,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":36846,"endOffset":36930,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":36932,"endOffset":37032,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":37034,"endOffset":37124,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":37126,"endOffset":37226,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":37228,"endOffset":37314,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":37316,"endOffset":37404,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":37406,"endOffset":37526,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":37528,"endOffset":37634,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":37636,"endOffset":37728,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":37730,"endOffset":37836,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":37838,"endOffset":37928,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":37930,"endOffset":38022,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":38024,"endOffset":38120,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":38122,"endOffset":38208,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":38210,"endOffset":38310,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":38312,"endOffset":38400,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":38402,"endOffset":38488,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":38490,"endOffset":38602,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":38604,"endOffset":38716,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":38718,"endOffset":38818,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":38820,"endOffset":38918,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":38920,"endOffset":39038,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":39040,"endOffset":39134,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":39136,"endOffset":39254,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":39256,"endOffset":39370,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":39372,"endOffset":39464,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":39466,"endOffset":39548,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":39550,"endOffset":39624,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":39626,"endOffset":39704,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":39706,"endOffset":39790,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":39792,"endOffset":39864,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":39866,"endOffset":39946,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":39948,"endOffset":40038,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":40040,"endOffset":40140,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":40142,"endOffset":40226,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":40228,"endOffset":40298,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":40300,"endOffset":40372,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":40374,"endOffset":40470,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":40472,"endOffset":40540,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":40542,"endOffset":40630,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":40632,"endOffset":40710,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":40712,"endOffset":40802,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":40804,"endOffset":40880,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":40882,"endOffset":40966,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":40968,"endOffset":41052,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":41054,"endOffset":41124,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":41126,"endOffset":41212,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":41214,"endOffset":41290,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":41292,"endOffset":41372,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":41374,"endOffset":41470,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":41472,"endOffset":41546,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":41548,"endOffset":41634,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":41636,"endOffset":41714,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":41716,"endOffset":41796,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":41798,"endOffset":41874,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":41876,"endOffset":41948,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":41950,"endOffset":42046,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":42048,"endOffset":42144,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":42146,"endOffset":42238,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":42240,"endOffset":42310,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":42312,"endOffset":42390,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":42392,"endOffset":42490,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":42492,"endOffset":42584,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":42586,"endOffset":42674,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":42676,"endOffset":42754,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":42756,"endOffset":42838,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":42840,"endOffset":42908,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":42910,"endOffset":42986,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":42988,"endOffset":43076,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":43078,"endOffset":43152,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":43154,"endOffset":43320,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":43322,"endOffset":43484,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":43486,"endOffset":43646,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":43648,"endOffset":43816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":177,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/flow/createUnionTypeAnnotation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":280,"endOffset":375,"count":1},{"startOffset":354,"endOffset":372,"count":0}],"isBlockCoverage":true},{"functionName":"createUnionTypeAnnotation","ranges":[{"startOffset":377,"endOffset":617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":223,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":381,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":580,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCommentsWithoutLoc","ranges":[{"startOffset":2203,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2349,"endOffset":2484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":246,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":269,"endOffset":340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":250,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":273,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":260,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":283,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":279,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":255,"endOffset":273,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":278,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":112,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":264,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":287,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":169,"endOffset":264,"count":1},{"startOffset":237,"endOffset":242,"count":0}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":266,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/uniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":688,"count":1}],"isBlockCoverage":true},{"functionName":"uniq","ranges":[{"startOffset":582,"endOffset":663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseUniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1909,"count":1}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":704,"endOffset":1880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_SetCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":277,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setCacheAdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheAdd","ranges":[{"startOffset":302,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":316,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheHas","ranges":[{"startOffset":218,"endOffset":284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayIncludes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":347,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"baseIndexOf","ranges":[{"startOffset":458,"endOffset":627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseFindIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"baseFindIndex","ranges":[{"startOffset":443,"endOffset":732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNaN","ranges":[{"startOffset":211,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_strictIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"strictIndexOf","ranges":[{"startOffset":350,"endOffset":566,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayIncludesWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":336,"endOffset":577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"cacheHas","ranges":[{"startOffset":250,"endOffset":308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_createSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1},{"startOffset":415,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"createSet","ranges":[{"startOffset":424,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/noop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":177,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setToArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"setToArray","ranges":[{"startOffset":151,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":293,"count":2}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":266,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":289,"endOffset":398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":391,"endOffset":486,"count":3},{"startOffset":465,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":488,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":267,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":290,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":158,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6454,"count":1}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":271,"endOffset":376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":215,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":1},{"startOffset":270,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":293,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":207,"endOffset":302,"count":1},{"startOffset":281,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":304,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":221,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":647,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":167,"endOffset":647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":438,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":1016,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":2},{"startOffset":357,"endOffset":375,"count":0}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":380,"endOffset":509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":160,"endOffset":586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":765,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":333,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":609,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":293,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":316,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":408,"endOffset":503,"count":2},{"startOffset":482,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":505,"endOffset":2389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":176,"endOffset":1262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":219,"endOffset":932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":406,"endOffset":501,"count":3},{"startOffset":474,"endOffset":479,"count":1},{"startOffset":480,"endOffset":498,"count":2}],"isBlockCoverage":true},{"functionName":"valueToNode","ranges":[{"startOffset":503,"endOffset":2300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1},{"startOffset":602,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"559","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":382,"endOffset":478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":177,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":316,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":339,"endOffset":816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":178,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":291,"endOffset":309,"count":0}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":314,"endOffset":441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":156,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":391,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":212,"endOffset":307,"count":1},{"startOffset":286,"endOffset":304,"count":0}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":309,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":311,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":191,"endOffset":334,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":311,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1450,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":165,"endOffset":1450,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2350,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":113,"endOffset":2350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":150,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":161,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":594,"endOffset":719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":191,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/import-builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5178,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":224,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":412,"endOffset":1155,"count":1},{"startOffset":494,"endOffset":567,"count":0},{"startOffset":569,"endOffset":665,"count":0},{"startOffset":667,"endOffset":795,"count":0},{"startOffset":818,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1157,"endOffset":1252,"count":1},{"startOffset":1225,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"ImportBuilder","ranges":[{"startOffset":1278,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1518,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":1625,"endOffset":1748,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1752,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"namespace","ranges":[{"startOffset":1923,"endOffset":2328,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":2332,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"named","ranges":[{"startOffset":2723,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"var","ranges":[{"startOffset":3204,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInterop","ranges":[{"startOffset":3741,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"wildcardInterop","ranges":[{"startOffset":3839,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"_interop","ranges":[{"startOffset":3939,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":4474,"endOffset":5040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5044,"endOffset":5141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/is-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"isModule","ranges":[{"startOffset":109,"endOffset":381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@pwn/is/lib/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93,"endOffset":543,"count":1},{"startOffset":160,"endOffset":173,"count":0},{"startOffset":176,"endOffset":250,"count":0},{"startOffset":480,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":554,"endOffset":21011,"count":1},{"startOffset":1693,"endOffset":2831,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":1587,"count":1}],"isBlockCoverage":true},{"functionName":"tagOf","ranges":[{"startOffset":989,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1698,"endOffset":2513,"count":0}],"isBlockCoverage":true},{"functionName":"addPredicate","ranges":[{"startOffset":2999,"endOffset":3543,"count":37},{"startOffset":3084,"endOffset":3156,"count":0},{"startOffset":3204,"endOffset":3283,"count":0},{"startOffset":3330,"endOffset":3401,"count":0}],"isBlockCoverage":true},{"functionName":"delegate","ranges":[{"startOffset":3455,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":3667,"endOffset":4664,"count":8}],"isBlockCoverage":true},{"functionName":"nilBundle","ranges":[{"startOffset":4807,"endOffset":5747,"count":1}],"isBlockCoverage":true},{"functionName":"isNull","ranges":[{"startOffset":4964,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":5171,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"isExist","ranges":[{"startOffset":5402,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":5648,"endOffset":5740,"count":0}],"isBlockCoverage":false},{"functionName":"numberBundle","ranges":[{"startOffset":5796,"endOffset":8829,"count":1},{"startOffset":7506,"endOffset":7658,"count":0},{"startOffset":8112,"endOffset":8273,"count":0},{"startOffset":8490,"endOffset":8824,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":5962,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeral","ranges":[{"startOffset":6274,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":6755,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":6992,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":7219,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"isFiniteNumber","ranges":[{"startOffset":7550,"endOffset":7650,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinite","ranges":[{"startOffset":7824,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":8157,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8506,"endOffset":8814,"count":0}],"isBlockCoverage":true},{"functionName":"stringBundle","ranges":[{"startOffset":8878,"endOffset":11697,"count":1},{"startOffset":10730,"endOffset":11692,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":9044,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":9320,"endOffset":9419,"count":0}],"isBlockCoverage":false},{"functionName":"isSubstring","ranges":[{"startOffset":9611,"endOffset":10078,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefix","ranges":[{"startOffset":10315,"endOffset":10437,"count":0}],"isBlockCoverage":false},{"functionName":"isSuffix","ranges":[{"startOffset":10601,"endOffset":10721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10903,"count":0}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":10907,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"booleanBundle","ranges":[{"startOffset":11747,"endOffset":12006,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":11917,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"objectBundle","ranges":[{"startOffset":12055,"endOffset":14957,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":12222,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObject","ranges":[{"startOffset":12527,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDefined","ranges":[{"startOffset":12827,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"isConforms","ranges":[{"startOffset":14191,"endOffset":14950,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBundle","ranges":[{"startOffset":15005,"endOffset":17495,"count":1},{"startOffset":15218,"endOffset":15347,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":15261,"endOffset":15339,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":15717,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"isInArray","ranges":[{"startOffset":16497,"endOffset":17488,"count":0}],"isBlockCoverage":false},{"functionName":"typeBundle","ranges":[{"startOffset":17542,"endOffset":18821,"count":1}],"isBlockCoverage":true},{"functionName":"isSameType","ranges":[{"startOffset":17728,"endOffset":17854,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":18001,"endOffset":18208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18304,"endOffset":18607,"count":1},{"startOffset":18493,"endOffset":18600,"count":7}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":18611,"endOffset":18740,"count":7}],"isBlockCoverage":true},{"functionName":"predicate","ranges":[{"startOffset":18657,"endOffset":18733,"count":0}],"isBlockCoverage":false},{"functionName":"equalityBundle","ranges":[{"startOffset":18872,"endOffset":20992,"count":1}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":19078,"endOffset":19229,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepEqual","ranges":[{"startOffset":19787,"endOffset":20985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":385980,"count":1}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":236,"endOffset":689,"count":93},{"startOffset":634,"endOffset":646,"count":17},{"startOffset":647,"endOffset":653,"count":76}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":722,"endOffset":885,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":887,"endOffset":987,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":7912,"endOffset":8071,"count":0}],"isBlockCoverage":false},{"functionName":"isWhitespace","ranges":[{"startOffset":8128,"endOffset":8582,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":8603,"endOffset":8676,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":8705,"endOffset":8778,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8782,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":9096,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":9201,"endOffset":9257,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":9261,"endOffset":9367,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":9372,"endOffset":9430,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":9476,"endOffset":9655,"count":0}],"isBlockCoverage":false},{"functionName":"adjustCommentsAfterTrailingComma","ranges":[{"startOffset":9659,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"processComment","ranges":[{"startOffset":11045,"endOffset":15137,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationForPosition","ranges":[{"startOffset":25857,"endOffset":26223,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":26227,"endOffset":26342,"count":0}],"isBlockCoverage":false},{"functionName":"raiseWithData","ranges":[{"startOffset":26346,"endOffset":26644,"count":0}],"isBlockCoverage":false},{"functionName":"_raise","ranges":[{"startOffset":26648,"endOffset":26914,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleProperty","ranges":[{"startOffset":26919,"endOffset":27054,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":27070,"endOffset":34888,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":34913,"endOffset":35094,"count":11}],"isBlockCoverage":true},{"functionName":"types$1.template","ranges":[{"startOffset":35390,"endOffset":35412,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":35588,"endOffset":35898,"count":0}],"isBlockCoverage":false},{"functionName":"types.name.updateContext","ranges":[{"startOffset":35928,"endOffset":36270,"count":0}],"isBlockCoverage":false},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":36302,"endOffset":36465,"count":0}],"isBlockCoverage":false},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":36503,"endOffset":36601,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":36633,"endOffset":36918,"count":0}],"isBlockCoverage":false},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":36950,"endOffset":36964,"count":0}],"isBlockCoverage":false},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":37028,"endOffset":37510,"count":0}],"isBlockCoverage":false},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":37545,"endOffset":37735,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":47703,"endOffset":47954,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":47956,"endOffset":48301,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":48302,"endOffset":48748,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWord","ranges":[{"startOffset":49436,"endOffset":49537,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":49538,"endOffset":49664,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":49665,"endOffset":49759,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":49760,"endOffset":49898,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":49899,"endOffset":49958,"count":0}],"isBlockCoverage":false},{"functionName":"isIteratorStart","ranges":[{"startOffset":50013,"endOffset":50096,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":54695,"endOffset":54984,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":54986,"endOffset":55091,"count":0}],"isBlockCoverage":false},{"functionName":"isMaybeDefaultImport","ranges":[{"startOffset":55093,"endOffset":55221,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":55370,"endOffset":55577,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":55643,"endOffset":133151,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagStart.updateContext","ranges":[{"startOffset":138915,"endOffset":139050,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagEnd.updateContext","ranges":[{"startOffset":139085,"endOffset":139382,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":139385,"endOffset":139520,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":139522,"endOffset":139948,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":139961,"endOffset":152213,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":152233,"endOffset":152348,"count":0}],"isBlockCoverage":false},{"functionName":"ScopeHandler","ranges":[{"startOffset":152375,"endOffset":152572,"count":0}],"isBlockCoverage":false},{"functionName":"get inFunction","ranges":[{"startOffset":152576,"endOffset":152662,"count":0}],"isBlockCoverage":false},{"functionName":"get allowSuper","ranges":[{"startOffset":152666,"endOffset":152750,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":152754,"endOffset":152851,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":152855,"endOffset":152936,"count":0}],"isBlockCoverage":false},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":152940,"endOffset":153035,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":153039,"endOffset":153135,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":153139,"endOffset":153192,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":153196,"endOffset":153265,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":153269,"endOffset":153308,"count":0}],"isBlockCoverage":false},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":153312,"endOffset":153445,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":153449,"endOffset":154375,"count":0}],"isBlockCoverage":false},{"functionName":"maybeExportDefined","ranges":[{"startOffset":154379,"endOffset":154520,"count":0}],"isBlockCoverage":false},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":154524,"endOffset":154708,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":154712,"endOffset":155356,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":155360,"endOffset":155612,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":155616,"endOffset":155692,"count":0}],"isBlockCoverage":false},{"functionName":"currentVarScope","ranges":[{"startOffset":155696,"endOffset":155886,"count":0}],"isBlockCoverage":false},{"functionName":"currentThisScope","ranges":[{"startOffset":155890,"endOffset":156144,"count":0}],"isBlockCoverage":false},{"functionName":"TypeScriptScope","ranges":[{"startOffset":156189,"endOffset":156360,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":156419,"endOffset":156482,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":156486,"endOffset":157222,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":157226,"endOffset":157945,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":157949,"endOffset":158140,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":158285,"endOffset":158326,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":158330,"endOffset":158377,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":158381,"endOffset":158416,"count":0}],"isBlockCoverage":false},{"functionName":"currentFlags","ranges":[{"startOffset":158420,"endOffset":158488,"count":0}],"isBlockCoverage":false},{"functionName":"get hasAwait","ranges":[{"startOffset":158492,"endOffset":158564,"count":0}],"isBlockCoverage":false},{"functionName":"get hasYield","ranges":[{"startOffset":158568,"endOffset":158640,"count":0}],"isBlockCoverage":false},{"functionName":"get hasReturn","ranges":[{"startOffset":158644,"endOffset":158718,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":158722,"endOffset":158842,"count":0}],"isBlockCoverage":false},{"functionName":"nonNull","ranges":[{"startOffset":158844,"endOffset":158950,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":158952,"endOffset":159026,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":160859,"endOffset":161480,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":161500,"endOffset":218577,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":218666,"endOffset":224291,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":224314,"endOffset":224985,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":224989,"endOffset":225181,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":225182,"endOffset":225488,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":225603,"endOffset":227331,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":227888,"endOffset":228174,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":228192,"endOffset":229492,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":229496,"endOffset":229697,"count":0}],"isBlockCoverage":false},{"functionName":"curPosition","ranges":[{"startOffset":229701,"endOffset":229786,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":229790,"endOffset":230129,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":230149,"endOffset":230210,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":230831,"endOffset":231034,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":231081,"endOffset":231295,"count":0}],"isBlockCoverage":false},{"functionName":"pushToken","ranges":[{"startOffset":231299,"endOffset":231431,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":231435,"endOffset":231824,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":231828,"endOffset":231948,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":231952,"endOffset":232006,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":232010,"endOffset":232233,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":232237,"endOffset":232431,"count":0}],"isBlockCoverage":false},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":232435,"endOffset":232517,"count":0}],"isBlockCoverage":false},{"functionName":"setStrict","ranges":[{"startOffset":232521,"endOffset":232883,"count":0}],"isBlockCoverage":false},{"functionName":"curContext","ranges":[{"startOffset":232887,"endOffset":232967,"count":0}],"isBlockCoverage":false},{"functionName":"nextToken","ranges":[{"startOffset":232971,"endOffset":233526,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":233530,"endOffset":233897,"count":0}],"isBlockCoverage":false},{"functionName":"skipBlockComment","ranges":[{"startOffset":233901,"endOffset":234555,"count":0}],"isBlockCoverage":false},{"functionName":"skipLineComment","ranges":[{"startOffset":234559,"endOffset":235085,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpace","ranges":[{"startOffset":235089,"endOffset":236110,"count":0}],"isBlockCoverage":false},{"functionName":"finishToken","ranges":[{"startOffset":236114,"endOffset":236380,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_numberSign","ranges":[{"startOffset":236384,"endOffset":237497,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":237501,"endOffset":237889,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_slash","ranges":[{"startOffset":237893,"endOffset":238220,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_interpreter","ranges":[{"startOffset":238224,"endOffset":238722,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":238726,"endOffset":239206,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":239210,"endOffset":240453,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_caret","ranges":[{"startOffset":240457,"endOffset":240663,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":240667,"endOffset":241274,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_lt_gt","ranges":[{"startOffset":241278,"endOffset":242046,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":242050,"endOffset":242461,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_question","ranges":[{"startOffset":242465,"endOffset":243014,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":243018,"endOffset":246933,"count":0}],"isBlockCoverage":false},{"functionName":"finishOp","ranges":[{"startOffset":246937,"endOffset":247097,"count":0}],"isBlockCoverage":false},{"functionName":"readRegexp","ranges":[{"startOffset":247101,"endOffset":248519,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":248523,"endOffset":250636,"count":0}],"isBlockCoverage":false},{"functionName":"readRadixNumber","ranges":[{"startOffset":250640,"endOffset":251343,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":251347,"endOffset":253383,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":253387,"endOffset":253973,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":253977,"endOffset":254860,"count":0}],"isBlockCoverage":false},{"functionName":"readTmplToken","ranges":[{"startOffset":254864,"endOffset":256662,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":256666,"endOffset":258658,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":258662,"endOffset":258992,"count":0}],"isBlockCoverage":false},{"functionName":"readWord1","ranges":[{"startOffset":258996,"endOffset":260259,"count":0}],"isBlockCoverage":false},{"functionName":"isIterator","ranges":[{"startOffset":260263,"endOffset":260349,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":260353,"endOffset":260646,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":260650,"endOffset":260839,"count":0}],"isBlockCoverage":false},{"functionName":"braceIsBlock","ranges":[{"startOffset":260843,"endOffset":261845,"count":0}],"isBlockCoverage":false},{"functionName":"updateContext","ranges":[{"startOffset":261849,"endOffset":262201,"count":0}],"isBlockCoverage":false},{"functionName":"addExtra","ranges":[{"startOffset":262245,"endOffset":262369,"count":0}],"isBlockCoverage":false},{"functionName":"isRelational","ranges":[{"startOffset":262373,"endOffset":262463,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadRelational","ranges":[{"startOffset":262467,"endOffset":262802,"count":0}],"isBlockCoverage":false},{"functionName":"expectRelational","ranges":[{"startOffset":262806,"endOffset":262950,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":262954,"endOffset":263069,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":263073,"endOffset":263307,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":263311,"endOffset":263434,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":263438,"endOffset":263523,"count":0}],"isBlockCoverage":false},{"functionName":"expectContextual","ranges":[{"startOffset":263527,"endOffset":263631,"count":0}],"isBlockCoverage":false},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":263635,"endOffset":263755,"count":0}],"isBlockCoverage":false},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":263759,"endOffset":263874,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":263878,"endOffset":263964,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":263968,"endOffset":264054,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":264058,"endOffset":264131,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoSpace","ranges":[{"startOffset":264135,"endOffset":264293,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":264297,"endOffset":264558,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":264562,"endOffset":264834,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":264838,"endOffset":265141,"count":0}],"isBlockCoverage":false},{"functionName":"checkYieldAwaitInDefaultParams","ranges":[{"startOffset":265145,"endOffset":265544,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":265548,"endOffset":266715,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":266719,"endOffset":267139,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionErrors","ranges":[{"startOffset":267170,"endOffset":267247,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":267267,"endOffset":267538,"count":0}],"isBlockCoverage":false},{"functionName":"__clone","ranges":[{"startOffset":267542,"endOffset":267880,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":267924,"endOffset":268007,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAt","ranges":[{"startOffset":268011,"endOffset":268075,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAtNode","ranges":[{"startOffset":268079,"endOffset":268163,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":268167,"endOffset":268286,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":268290,"endOffset":268495,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocation","ranges":[{"startOffset":268499,"endOffset":268653,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":268657,"endOffset":268846,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":268850,"endOffset":268981,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":269024,"endOffset":269141,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":269183,"endOffset":271270,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":271274,"endOffset":271675,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":271679,"endOffset":272613,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":272617,"endOffset":272691,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":272695,"endOffset":273013,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpread","ranges":[{"startOffset":273017,"endOffset":273276,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":273280,"endOffset":273450,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":273454,"endOffset":273869,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingList","ranges":[{"startOffset":273873,"endOffset":274878,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":274882,"endOffset":275190,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItemTypes","ranges":[{"startOffset":275194,"endOffset":275253,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":275257,"endOffset":275659,"count":0}],"isBlockCoverage":false},{"functionName":"checkLVal","ranges":[{"startOffset":275663,"endOffset":278157,"count":0}],"isBlockCoverage":false},{"functionName":"checkToRestConversion","ranges":[{"startOffset":278161,"endOffset":278368,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":278372,"endOffset":278625,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRestNotLast","ranges":[{"startOffset":278629,"endOffset":278708,"count":0}],"isBlockCoverage":false},{"functionName":"raiseTrailingCommaAfterRest","ranges":[{"startOffset":278712,"endOffset":278797,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicatedProto","ranges":[{"startOffset":278848,"endOffset":279468,"count":0}],"isBlockCoverage":false},{"functionName":"getExpression","ranges":[{"startOffset":279472,"endOffset":279922,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":279926,"endOffset":280506,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":280510,"endOffset":282502,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":282506,"endOffset":283054,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditional","ranges":[{"startOffset":283058,"endOffset":283465,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOps","ranges":[{"startOffset":283469,"endOffset":283983,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOp","ranges":[{"startOffset":283987,"endOffset":286044,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":286048,"endOffset":286767,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":286771,"endOffset":287016,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":287020,"endOffset":288748,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":288752,"endOffset":289167,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscripts","ranges":[{"startOffset":289171,"endOffset":289764,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscript","ranges":[{"startOffset":289768,"endOffset":293077,"count":0}],"isBlockCoverage":false},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":293081,"endOffset":293513,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":293517,"endOffset":293758,"count":0}],"isBlockCoverage":false},{"functionName":"finishCallExpression","ranges":[{"startOffset":293762,"endOffset":294253,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":294257,"endOffset":295547,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":295551,"endOffset":295646,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":295650,"endOffset":295902,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":295906,"endOffset":296091,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":296095,"endOffset":304247,"count":0}],"isBlockCoverage":false},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":304251,"endOffset":304424,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybePrivateName","ranges":[{"startOffset":304428,"endOffset":305018,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionExpression","ranges":[{"startOffset":305022,"endOffset":305350,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetaProperty","ranges":[{"startOffset":305354,"endOffset":305983,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":305987,"endOffset":306584,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":306588,"endOffset":306988,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":306992,"endOffset":310754,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseArrow","ranges":[{"startOffset":310758,"endOffset":310821,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrow","ranges":[{"startOffset":310825,"endOffset":310905,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenItem","ranges":[{"startOffset":310909,"endOffset":310972,"count":0}],"isBlockCoverage":false},{"functionName":"parseNew","ranges":[{"startOffset":310976,"endOffset":312073,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewArguments","ranges":[{"startOffset":312077,"endOffset":312303,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":312307,"endOffset":312793,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":312797,"endOffset":313287,"count":0}],"isBlockCoverage":false},{"functionName":"parseObj","ranges":[{"startOffset":313291,"endOffset":314286,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncProp","ranges":[{"startOffset":314290,"endOffset":314600,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMember","ranges":[{"startOffset":314604,"endOffset":316163,"count":0}],"isBlockCoverage":false},{"functionName":"isGetterOrSetterMethod","ranges":[{"startOffset":316167,"endOffset":316483,"count":0}],"isBlockCoverage":false},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":316487,"endOffset":316576,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":316580,"endOffset":317094,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":317098,"endOffset":317767,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectProperty","ranges":[{"startOffset":317771,"endOffset":318803,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjPropValue","ranges":[{"startOffset":318807,"endOffset":319153,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyName","ranges":[{"startOffset":319157,"endOffset":319798,"count":0}],"isBlockCoverage":false},{"functionName":"initFunction","ranges":[{"startOffset":319802,"endOffset":319911,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethod","ranges":[{"startOffset":319915,"endOffset":320738,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":320742,"endOffset":321667,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":321671,"endOffset":321802,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":321806,"endOffset":321952,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBody","ranges":[{"startOffset":321956,"endOffset":323404,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParamList","ranges":[{"startOffset":323408,"endOffset":323577,"count":0}],"isBlockCoverage":false},{"functionName":"checkParams","ranges":[{"startOffset":323581,"endOffset":323904,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprList","ranges":[{"startOffset":323908,"endOffset":324464,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprListItem","ranges":[{"startOffset":324468,"endOffset":325382,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifier","ranges":[{"startOffset":325386,"endOffset":325561,"count":0}],"isBlockCoverage":false},{"functionName":"createIdentifier","ranges":[{"startOffset":325565,"endOffset":325705,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierName","ranges":[{"startOffset":325709,"endOffset":326370,"count":0}],"isBlockCoverage":false},{"functionName":"checkReservedWord","ranges":[{"startOffset":326374,"endOffset":327580,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitAllowed","ranges":[{"startOffset":327584,"endOffset":327854,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwait","ranges":[{"startOffset":327858,"endOffset":328830,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":328834,"endOffset":329441,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":329445,"endOffset":329710,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBody","ranges":[{"startOffset":329714,"endOffset":330041,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyEarlyErrors","ranges":[{"startOffset":330045,"endOffset":330415,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":330419,"endOffset":331316,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyStyle","ranges":[{"startOffset":331320,"endOffset":331521,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":331525,"endOffset":331795,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicPermittingContext","ranges":[{"startOffset":331799,"endOffset":332115,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicForbiddingContext","ranges":[{"startOffset":332119,"endOffset":332435,"count":0}],"isBlockCoverage":false},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":332439,"endOffset":332694,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":332698,"endOffset":332775,"count":0}],"isBlockCoverage":false},{"functionName":"primaryTopicReferenceIsAllowedInCurrentTopicContext","ranges":[{"startOffset":332779,"endOffset":332904,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentTopicContext","ranges":[{"startOffset":332908,"endOffset":333062,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":333066,"endOffset":333552,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":333817,"endOffset":334605,"count":0}],"isBlockCoverage":false},{"functionName":"stmtToDirective","ranges":[{"startOffset":334609,"endOffset":335212,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":335216,"endOffset":335471,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":335475,"endOffset":336038,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatement","ranges":[{"startOffset":336042,"endOffset":336212,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementContent","ranges":[{"startOffset":336216,"endOffset":340060,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":340064,"endOffset":340309,"count":0}],"isBlockCoverage":false},{"functionName":"takeDecorators","ranges":[{"startOffset":340313,"endOffset":340635,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":340639,"endOffset":340707,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":340711,"endOffset":341399,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":341403,"endOffset":342413,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":342417,"endOffset":342766,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":342770,"endOffset":343153,"count":0}],"isBlockCoverage":false},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":343157,"endOffset":343654,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":343658,"endOffset":343786,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":343790,"endOffset":343937,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":343941,"endOffset":344293,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":344297,"endOffset":345918,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":345922,"endOffset":346118,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":346122,"endOffset":346390,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":346394,"endOffset":346796,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":346800,"endOffset":348019,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":348023,"endOffset":348349,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":348353,"endOffset":349410,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarStatement","ranges":[{"startOffset":349414,"endOffset":349583,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhileStatement","ranges":[{"startOffset":349587,"endOffset":349886,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":349890,"endOffset":350211,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":350215,"endOffset":350315,"count":0}],"isBlockCoverage":false},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":350319,"endOffset":351366,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":351370,"endOffset":351519,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":351523,"endOffset":351959,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDirective","ranges":[{"startOffset":351963,"endOffset":352123,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockBody","ranges":[{"startOffset":352127,"endOffset":352398,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":352402,"endOffset":353674,"count":0}],"isBlockCoverage":false},{"functionName":"parseFor","ranges":[{"startOffset":353678,"endOffset":354148,"count":0}],"isBlockCoverage":false},{"functionName":"parseForIn","ranges":[{"startOffset":354152,"endOffset":355121,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":355125,"endOffset":356041,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarId","ranges":[{"startOffset":356045,"endOffset":356234,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunction","ranges":[{"startOffset":356238,"endOffset":357752,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionId","ranges":[{"startOffset":357756,"endOffset":357868,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParams","ranges":[{"startOffset":357872,"endOffset":358211,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":358215,"endOffset":358463,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":358467,"endOffset":358909,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":358913,"endOffset":359023,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":359027,"endOffset":359085,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":359089,"endOffset":359249,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":359253,"endOffset":360672,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":360676,"endOffset":361400,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":361404,"endOffset":361723,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":361727,"endOffset":365417,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPropertyName","ranges":[{"startOffset":365421,"endOffset":365836,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":365840,"endOffset":366106,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":366110,"endOffset":366403,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":366407,"endOffset":366631,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":366635,"endOffset":367220,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":367224,"endOffset":367269,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccessModifier","ranges":[{"startOffset":367273,"endOffset":367322,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":367326,"endOffset":367645,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":367649,"endOffset":368152,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":368156,"endOffset":368572,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":368576,"endOffset":368687,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":368691,"endOffset":370264,"count":0}],"isBlockCoverage":false},{"functionName":"eatExportStar","ranges":[{"startOffset":370268,"endOffset":370326,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":370330,"endOffset":370684,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":370688,"endOffset":371116,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":371120,"endOffset":371411,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":371415,"endOffset":371873,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":371877,"endOffset":372106,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":372110,"endOffset":373090,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":373094,"endOffset":373166,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":373170,"endOffset":373512,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportFrom","ranges":[{"startOffset":373516,"endOffset":373805,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":373809,"endOffset":374409,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":374413,"endOffset":376179,"count":0}],"isBlockCoverage":false},{"functionName":"checkDeclaration","ranges":[{"startOffset":376183,"endOffset":377076,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":377080,"endOffset":377347,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":377351,"endOffset":377906,"count":0}],"isBlockCoverage":false},{"functionName":"parseImport","ranges":[{"startOffset":377910,"endOffset":378443,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSource","ranges":[{"startOffset":378447,"endOffset":378559,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseDefaultImport","ranges":[{"startOffset":378563,"endOffset":378634,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":378638,"endOffset":378900,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":378904,"endOffset":379155,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":379159,"endOffset":379487,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":379491,"endOffset":379934,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":379938,"endOffset":380461,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScope","ranges":[{"startOffset":380487,"endOffset":380621,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":380653,"endOffset":380766,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":380770,"endOffset":380831,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":380835,"endOffset":380887,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":380891,"endOffset":381386,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":381390,"endOffset":382357,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":382361,"endOffset":382756,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":382802,"endOffset":383325,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeHandler","ranges":[{"startOffset":383329,"endOffset":383377,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":383381,"endOffset":383810,"count":0}],"isBlockCoverage":false},{"functionName":"pluginsMap","ranges":[{"startOffset":383815,"endOffset":384125,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":384127,"endOffset":384977,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":384978,"endOffset":385172,"count":0}],"isBlockCoverage":false},{"functionName":"getParser","ranges":[{"startOffset":385174,"endOffset":385389,"count":0}],"isBlockCoverage":false},{"functionName":"getParserClass","ranges":[{"startOffset":385421,"endOffset":385852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/visitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":125,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"get nodeType","ranges":[{"startOffset":215,"endOffset":262,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeNode","ranges":[{"startOffset":266,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"onIdentifierNode","ranges":[{"startOffset":351,"endOffset":467,"count":0}],"isBlockCoverage":false},{"functionName":"onAfterNode","ranges":[{"startOffset":471,"endOffset":550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-invalid-import-type-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"ReplaceVisitorInvalidImportTypeError","ranges":[{"startOffset":299,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"ReplaceVisitorError","ranges":[{"startOffset":246,"endOffset":292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/error/visitor-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"VisitorError","ranges":[{"startOffset":149,"endOffset":195,"count":0}],"isBlockCoverage":false}]}],"timestamp":122724.767813,"source-map-cache":{"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/test/index.test.js":{"lineLengths":[13,0,50,0,95,0,186,0,743,0,35,107,3,0,29,41,42,5,3,38],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/test/index.test.js"],"names":["Test","before","test","context","index","forEach","name","truthy"],"mappings":";;AAAA;;;;;;;;AAEAA,aAAKC,MAAL,CAAY,MAAOC,IAAP,IAAgB;AAC1BA,EAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAqB,mEAAa,aAAb,GAArB;AACD,CAFD;;AAIC,CACC,SADD,EAECC,OAFD,CAEUC,IAAD,IAAU;AAElB,oBAAKA,IAAL,EAAW,MAAOJ,IAAP,IAAgB;AACzBA,IAAAA,IAAI,CAACK,MAAL,CAAYL,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmBE,IAAnB,CAAZ;AACD,GAFD;AAID,CARA","sourcesContent":["import Test from 'ava'\n\nTest.before(async (test) => {\n  test.context.index = await import('../index.js')\n})\n\n;[\n  'default'\n].forEach((name) => {\n\n  Test(name, async (test) => {\n    test.truthy(test.context.index[name])\n  })\n  \n})\n"],"file":"index.test.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/index.js":{"lineLengths":[13,0,46,13,3,43,19,20,26,3,3,0,75,0,95,33],"data":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[],"file":"index.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/index.js":{"lineLengths":[13,0,46,13,3,25,0,78,0,38,0,54,0,95,0,35,24,36,22,3,0,75,0,27,33],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/index.js"],"names":["Source","install","Plugin","createPlugin","ReplaceVisitor"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEAA,0BAAOC,OAAP,CAAe;AAAE,iBAAe,MAAjB;AAAyB,8BAA4B,KAArD;AAA4D,iBAAe;AAA3E,CAAf;;eAEeC,eAAOC,YAAP,CAAoBC,8BAApB,C","sourcesContent":["import Source from 'source-map-support'\n\nimport { Plugin } from '../plugin.js'\nimport { ReplaceVisitor } from './replace-visitor.js'\n\nSource.install({ 'environment': 'node', 'handleUncaughtExceptions': false, 'hookRequire': false })\n\nexport default Plugin.createPlugin(ReplaceVisitor)\n"],"file":"index.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/plugin.js":{"lineLengths":[13,0,46,13,3,24,0,65,0,186,0,743,0,7,24,15,0,14,37,63,29,72,52,28,0,43,44,8,0,44,43,8,0,46,29,36,58,72,10,9,43,26,6,3,0,1,0,24,34],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/plugin.js"],"names":["pascalCase","PascalCase","ChangeCase","Plugin","createPlugin","visitorClass","babel","visitorInstance","pluginObject","pre","state","onBeforeNode","post","onAfterNode","nodeType","visitorObject","forEach","path","visitor"],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM;AAAEA,EAAAA,UAAU,EAAEC;AAAd,IAA6BC,UAAnC;;AAEA,MAAMC,MAAN,CAAa;AAEX,SAAOC,YAAP,CAAoBC,YAApB,EAAkC;AAChC;AAEA,WAAO,UAASC,KAAT,EAAgB;AACrB;AAEA,UAAIC,eAAe,GAAG,IAAIF,YAAJ,CAAiBC,KAAjB,CAAtB;AAEA,UAAIE,YAAY,GAAG,EAAnB;;AAEAA,MAAAA,YAAY,CAACC,GAAb,GAAmB,UAASC,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACI,YAAhB,CAA6BD,KAA7B;AAAqC,OAA1E;;AACAF,MAAAA,YAAY,CAACI,IAAb,GAAoB,UAASF,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACM,WAAhB,CAA4BH,KAA5B;AAAoC,OAA1E;;AAEA,UAAII,QAAQ,GAAGP,eAAe,CAACO,QAA/B;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBF,QAAD,IAAc;AAC7BC,QAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B,UAASG,IAAT,EAAeP,KAAf,EAAsB;AAAEH,UAAAA,eAAe,CAAE,KAAIN,UAAU,CAACa,QAAD,CAAW,MAA3B,CAAf,CAAiDG,IAAjD,EAAuDP,KAAvD;AAA+D,SAAjH;AACD,OAFD;AAIAF,MAAAA,YAAY,CAACU,OAAb,GAAuBH,aAAvB;AAEA,aAAOP,YAAP;AAED,KArBD;AAuBD;;AA5BU","sourcesContent":["import * as ChangeCase from 'change-case'\n\nconst { pascalCase: PascalCase } = ChangeCase\n\nclass Plugin {\n\n  static createPlugin(visitorClass) {\n    // console.log(`Plugin.createPlugin(${visitorClass.name})`)\n\n    return function(babel) {\n      // console.log(`Plugin.createPlugin(${visitorClass.name})(babel)`)\n\n      let visitorInstance = new visitorClass(babel)\n\n      let pluginObject = {}\n\n      pluginObject.pre = function(state) { visitorInstance.onBeforeNode(state) }\n      pluginObject.post = function(state) { visitorInstance.onAfterNode(state) }\n\n      let nodeType = visitorInstance.nodeType\n      let visitorObject = {}\n\n      nodeType.forEach((nodeType) => {\n        visitorObject[nodeType] = function(path, state) { visitorInstance[`on${PascalCase(nodeType)}Node`](path, state) }\n      })\n\n      pluginObject.visitor = visitorObject\n\n      return pluginObject\n\n    }\n\n  }\n\n}\n\nexport { Plugin }\n"],"file":"plugin.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/change-case/dist/index.js":{"lineLengths":[13,62,31,53,55,56,51,54,50,53,54,52,56,53,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/change-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA2B;AAC3B,uDAA6B;AAC7B,wDAA8B;AAC9B,mDAAyB;AACzB,sDAA4B;AAC5B,kDAAwB;AACxB,qDAA2B;AAC3B,sDAA4B;AAC5B,oDAA0B;AAC1B,wDAA8B;AAC9B,qDAA2B","sourcesContent":["export * from \"camel-case\";\nexport * from \"capital-case\";\nexport * from \"constant-case\";\nexport * from \"dot-case\";\nexport * from \"header-case\";\nexport * from \"no-case\";\nexport * from \"param-case\";\nexport * from \"pascal-case\";\nexport * from \"path-case\";\nexport * from \"sentence-case\";\nexport * from \"snake-case\";\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/camel-case/dist/index.js":{"lineLengths":[13,62,31,43,43,20,35,59,1,48,48,20,35,57,1,58,36,45,105,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/camel-case/src/index.ts"],"names":[],"mappings":";;;AAAA,2CAKqB;AAIrB,SAAgB,kBAAkB,CAAC,KAAa,EAAE,KAAa;IAC7D,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,iCAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,KAAa,EAAE,KAAa;IAClE,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,sCAAwB,CAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAHD,0DAGC;AAED,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,wBAAU,CAAC,KAAK,qBACrB,SAAS,EAAE,kBAAkB,IAC1B,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import {\n  pascalCase,\n  pascalCaseTransform,\n  pascalCaseTransformMerge,\n  Options\n} from \"pascal-case\";\n\nexport { Options };\n\nexport function camelCaseTransform(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransform(input, index);\n}\n\nexport function camelCaseTransformMerge(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransformMerge(input);\n}\n\nexport function camelCase(input: string, options: Options = {}) {\n  return pascalCase(input, {\n    transform: camelCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/pascal-case/dist/index.js":{"lineLengths":[13,62,31,35,44,36,51,60,44,5,53,1,50,42,72,1,60,37,45,113,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/pascal-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAI1C,SAAgB,mBAAmB,CAAC,KAAa,EAAE,KAAa;IAC9D,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjD,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,EAAE;QACrD,OAAO,MAAI,SAAS,GAAG,UAAY,CAAC;KACrC;IACD,OAAO,KAAG,SAAS,CAAC,WAAW,EAAE,GAAG,UAAY,CAAC;AACnD,CAAC;AAPD,kDAOC;AAED,SAAgB,wBAAwB,CAAC,KAAa;IACpD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACtE,CAAC;AAFD,4DAEC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,EAAE,EACb,SAAS,EAAE,mBAAmB,IAC3B,OAAO,EACV,CAAC;AACL,CAAC;AAND,gCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/no-case/dist/index.js":{"lineLengths":[13,62,41,84,74,34,42,3,77,3,33,45,316,83,18,28,56,41,16,43,14,42,17,26,20,23,25,1,24,3,63,3,36,29,40,87,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/no-case/src/index.ts"],"names":[],"mappings":";;AAAA,yCAAuC;AASvC,oFAAoF;AACpF,IAAM,oBAAoB,GAAG,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;AAE5E,kCAAkC;AAClC,IAAM,oBAAoB,GAAG,cAAc,CAAC;AAE5C;;GAEG;AACH,SAAgB,MAAM,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAEvD,IAAA,wBAAkC,EAAlC,uDAAkC,EAClC,wBAAkC,EAAlC,uDAAkC,EAClC,sBAAqB,EAArB,uDAAqB,EACrB,sBAAe,EAAf,oCAAe,CACL;IAEZ,IAAI,MAAM,GAAG,OAAO,CAClB,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,CAAC,EACrC,WAAW,EACX,IAAI,CACL,CAAC;IACF,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,oDAAoD;IACpD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI;QAAE,KAAK,EAAE,CAAC;IAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI;QAAE,GAAG,EAAE,CAAC;IAE9C,sCAAsC;IACtC,OAAO,MAAM;SACV,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;SACjB,KAAK,CAAC,IAAI,CAAC;SACX,GAAG,CAAC,SAAS,CAAC;SACd,IAAI,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AA1BD,wBA0BC;AAED;;GAEG;AACH,SAAS,OAAO,CAAC,KAAa,EAAE,EAAqB,EAAE,KAAa;IAClE,IAAI,EAAE,YAAY,MAAM;QAAE,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO,EAAE,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,EAAE,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \"\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result\n    .slice(start, end)\n    .split(\"\\0\")\n    .map(transform)\n    .join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/lower-case/dist/index.js":{"lineLengths":[13,62,3,72,3,24,9,46,14,24,24,24,9,6,9,26,14,24,24,24,9,6,9,61,14,30,30,30,36,36,35,9,5,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/lower-case/src/index.ts"],"names":[],"mappings":";;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,6BAA6B;QACrC,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,SAAS;QACjB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,4CAA4C;QACpD,GAAG,EAAE;YACH,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;SACxB;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACvE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\"\n    }\n  }\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, m => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/capital-case/dist/index.js":{"lineLengths":[13,62,31,35,53,38,66,1,52,38,45,115,1,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/capital-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,oBAAoB,CAAC,KAAa;IAChD,OAAO,iCAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7C,CAAC;AAFD,oDAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC9D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,oBAAoB,IAC5B,OAAO,EACV,CAAC;AACL,CAAC;AAND,kCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/dist/index.js":{"lineLengths":[13,62,3,53,3,32,59,1,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/src/index.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AAFD,wCAEC","sourcesContent":["/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/constant-case/dist/index.js":{"lineLengths":[13,62,31,35,41,39,45,117,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/constant-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,yCAAuC;AAIvC,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,sBAAS,IACjB,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCase } from \"upper-case\";\n\nexport { Options };\n\nexport function constantCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"_\",\n    transform: upperCase,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case/dist/index.js":{"lineLengths":[13,62,3,72,3,24,9,28,14,23,9,6,9,28,14,23,9,6,9,79,14,25,25,25,26,26,25,9,5,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case/src/index.ts"],"names":[],"mappings":";;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,8DAA8D;QACtE,GAAG,EAAE;YACH,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;SACd;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACvE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\"\n    }\n  }\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, m => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/dot-case/dist/index.js":{"lineLengths":[13,62,31,35,34,45,82,1,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/dot-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAI1C,SAAgB,OAAO,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC1D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,0BAKC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/header-case/dist/index.js":{"lineLengths":[13,62,31,45,37,45,92,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/header-case/src/index.ts"],"names":[],"mappings":";;;AAAA,6CAAoD;AAIpD,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,0BAAW,CAAC,KAAK,qBACtB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,gCAKC","sourcesContent":["import { capitalCase, Options } from \"capital-case\";\n\nexport { Options };\n\nexport function headerCase(input: string, options: Options = {}) {\n  return capitalCase(input, {\n    delimiter: \"-\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/param-case/dist/index.js":{"lineLengths":[13,62,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/param-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/path-case/dist/index.js":{"lineLengths":[13,62,31,37,35,45,84,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/path-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,QAAQ,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC3D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,4BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function pathCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"/\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/sentence-case/dist/index.js":{"lineLengths":[13,62,31,35,53,46,37,20,57,18,1,54,39,45,116,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/sentence-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,qBAAqB,CAAC,KAAa,EAAE,KAAa;IAChE,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACnC,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,iCAAc,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,MAAM,CAAC;AAChB,CAAC;AAJD,sDAIC;AAED,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,qBAAqB,IAC7B,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/snake-case/dist/index.js":{"lineLengths":[13,62,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/snake-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function snakeCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"_\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/replace-visitor.js":{"lineLengths":[13,0,46,13,3,32,0,67,0,53,0,63,0,40,0,108,0,186,0,743,0,95,0,47,22,17,29,34,3,0,18,42,3,0,23,29,34,3,0,33,81,28,27,26,165,69,0,55,82,35,43,12,55,64,47,37,29,133,22,0,27,147,22,0,31,135,22,0,32,93,22,0,22,117,13,13,169,139,9,0,47,7,7,40,3,0,6,30,61,23,30,6,5,0,0,40,43],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/replace-visitor.js"],"names":["ReplaceVisitor","Visitor","constructor","babel","_programPath","_importIdentifier","nodeType","onProgramNode","path","onIdentifierNode","state","option","opts","rule","forEach","searchForPattern","Is","regexp","searchFor","RegExp","parserOption","test","node","name","null","addImport","type","source","ReplaceVisitorInvalidImportTypeError","replaceWith","replace","replaceWithNode","Parser","parseExpression"],"mappings":";;;;;;;AAAA;;AAOA;;AACA;;AAEA;;AAEA;;;;;;;;AAEA,MAAMA,cAAN,SAA6BC,gBAA7B,CAAqC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AAED;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,CAAE,SAAF,EAAa,GAAG,MAAMA,QAAtB,CAAP;AACD;;AAEDC,EAAAA,aAAa,CAACC,IAAD,EAAO;AAClB,SAAKJ,YAAL,GAAoBI,IAApB;AACA,SAAKH,iBAAL,GAAyB,IAAzB;AACD;;AAEDI,EAAAA,gBAAgB,CAACD,IAAD,EAAOE,KAAP,EAAc;AAC5B;AAEA,QAAIC,MAAM,GAAGD,KAAK,CAACE,IAAnB;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB;AAEAA,IAAAA,IAAI,CAACC,OAAL,CAAcD,IAAD,IAAU;AAErBA,MAAAA,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAA7B,GAAgDC,YAAGC,MAAH,CAAUJ,IAAI,CAACK,SAAf,IAA4BL,IAAI,CAACK,SAAjC,GAA6C,IAAIC,MAAJ,CAAWN,IAAI,CAACK,SAAhB,EAA2B,IAA3B,CAArH;AACAL,MAAAA,IAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAzB,GAAwC,EAA5D;;AAEA,UAAIP,IAAI,CAACE,gBAAL,CAAsBM,IAAtB,CAA2Bb,IAAI,CAACc,IAAL,CAAUC,IAArC,CAAJ,EAAgD;AAE9C;AAEA;AACA;AACA;AAEA,YAAGP,YAAGQ,IAAH,CAAQ,KAAKnB,iBAAb,CAAH,EAAoC;AAElCQ,UAAAA,IAAI,CAACY,SAAL,GAAiBZ,IAAI,CAACY,SAAL,GAAiBZ,IAAI,CAACY,SAAtB,GAAkC,EAAnD;AACAZ,UAAAA,IAAI,CAACY,SAAL,CAAeX,OAAf,CAAwBW,SAAD,IAAe;AAEpC,oBAAQA,SAAS,CAACC,IAAlB;AACE,mBAAK,SAAL;AACE,qBAAKrB,iBAAL,GAAyB,qCAAiB,KAAKD,YAAtB,EAAoCqB,SAAS,CAACE,MAA9C,EAAsDF,SAAS,CAACd,MAAhE,CAAzB;AACA;;AACF,mBAAK,OAAL;AACE,qBAAKN,iBAAL,GAAyB,mCAAe,KAAKD,YAApB,EAAkCqB,SAAS,CAACF,IAA5C,EAAkDE,SAAS,CAACE,MAA5D,EAAoEF,SAAS,CAACd,MAA9E,CAAzB;AACA;;AACF,mBAAK,WAAL;AACE,qBAAKN,iBAAL,GAAyB,uCAAmB,KAAKD,YAAxB,EAAsCqB,SAAS,CAACE,MAAhD,EAAwDF,SAAS,CAACd,MAAlE,CAAzB;AACA;;AACF,mBAAK,YAAL;AACE,wDAAoB,KAAKP,YAAzB,EAAuCqB,SAAS,CAACE,MAAjD;AACA;;AACF;AACE,sBAAM,IAAIC,0EAAJ,CAAyCH,SAAS,CAACC,IAAnD,CAAN;AAdJ;AAiBD,WAnBD;AAqBAb,UAAAA,IAAI,CAACgB,WAAL,GAAmBb,YAAGQ,IAAH,CAAQ,KAAKnB,iBAAb,IAAkCQ,IAAI,CAACgB,WAAvC,GAAqDhB,IAAI,CAACgB,WAAL,CAAiBC,OAAjB,CAAyB,sBAAzB,EAAiD,KAAKzB,iBAAL,CAAuBkB,IAAxE,CAAxE;AACAV,UAAAA,IAAI,CAACkB,eAAL,GAAuBlB,IAAI,CAACkB,eAAL,GAAwBlB,IAAI,CAACkB,eAA7B,GAA+CC,MAAM,CAACC,eAAP,CAAuBpB,IAAI,CAACgB,WAA5B,EAAyChB,IAAI,CAACO,YAA9C,CAAtE;AAED;;AAEDZ,QAAAA,IAAI,CAACqB,WAAL,CAAiBhB,IAAI,CAACkB,eAAtB;AAED;AAEF,KA9CD;AAgDA,UAAMtB,gBAAN,CAAuBD,IAAvB,EAA6BE,KAA7B;AAED;;AA3EkC,C,CAiFrC;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { \n  addDefault as AddDefaultImport,\n  addNamed as AddNamedImport,\n  addNamespace as AddNamespaceImport,\n  addSideEffect as AddSideEffectImport\n} from '@babel/helper-module-imports'\n\nimport Is from '@pwn/is'\nimport * as Parser from '@babel/parser'\n\nimport { Visitor } from '../visitor.js'\n\nimport { ReplaceVisitorInvalidImportTypeError } from './error/replace-visitor-invalid-import-type-error.js'\n\nclass ReplaceVisitor extends Visitor {\n\n  constructor(babel) {\n    super(babel)\n\n    this._programPath = null\n    this._importIdentifier = null\n\n  }\n\n  get nodeType() {\n    return [ 'Program', ...super.nodeType ]\n  }\n\n  onProgramNode(path) {\n    this._programPath = path\n    this._importIdentifier = null\n  }\n\n  onIdentifierNode(path, state) {\n    // console.log(`ReplaceVisitor.onIdentifierNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n      rule.parserOption = rule.parserOption ? rule.parserOption : {}\n\n      if (rule.searchForPattern.test(path.node.name)) {\n\n        // console.log(`Replacing '${path.node.name}' with '${rule.replaceWith}'`)\n\n        // if (rule.parserOption) {\n        //   console.dir(rule.parserOption)\n        // }\n\n        if(Is.null(this._importIdentifier)) {\n\n          rule.addImport = rule.addImport ? rule.addImport : []\n          rule.addImport.forEach((addImport) => {\n\n            switch (addImport.type) {\n              case 'default':\n                this._importIdentifier = AddDefaultImport(this._programPath, addImport.source, addImport.option)\n                break\n              case 'named':\n                this._importIdentifier = AddNamedImport(this._programPath, addImport.name, addImport.source, addImport.option)\n                break\n              case 'namespace':\n                this._importIdentifier = AddNamespaceImport(this._programPath, addImport.source, addImport.option)\n                break\n              case 'sideEffect':\n                AddSideEffectImport(this._programPath, addImport.source)\n                break\n              default:\n                throw new ReplaceVisitorInvalidImportTypeError(addImport.type)\n            }\n            \n          })\n\n          rule.replaceWith = Is.null(this._importIdentifier) ? rule.replaceWith : rule.replaceWith.replace(/__importIdentifier/gi, this._importIdentifier.name)\n          rule.replaceWithNode = rule.replaceWithNode ?  rule.replaceWithNode : Parser.parseExpression(rule.replaceWith, rule.parserOption)\n  \n        }\n\n        path.replaceWith(rule.replaceWithNode)\n\n      }\n\n    })\n\n    super.onIdentifierNode(path, state)\n\n  }\n\n}\n\nexport { ReplaceVisitor }\n\n// {\n//   \"searchFor\": \"__resolve\",\n//   \"replaceWith\": \"import { createRequire } from 'module'\",\n//   \"parserOption\": { \n//     \"sourceType\": \"module\" \n//   }\n// },\n"],"file":"replace-visitor.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,24,24,20,22,20,21,17,33,23,32,40,40,52,32,36,32,34,56,30,3,0,1,27,0,44,25,45,28,15,1,0,35,30,15,9,5,1,0,15,29,14,5,35,14,5,35,14,5,35,14,5,31,14,5,28,32,15,14,5,37,15,14,5,36,15,14,5,31,35,30,15,14,5,34,15,14,5,35,15,14,5,29,33,30,15,14,5,29,29,14,5,28,14,5,29,14,5,36,14,5,26,32,14,5,35,30,14,5,38,34,14,5,33,14,5,37,15,14,5,25,28,14,5,47,26,15,12,5,31,15,12,5,34,11,12,14,5,28,15,11,14,5,29,15,11,14,5,33,42,34,35,33,34,34,44,42,40,33,15,13,11,14,5,30,15,14,14,5,29,30,33,15,14,26,5,33,32,14,5,33,39,39,38,14,5,28,11,14,5,32,14,5,37,30,10,5,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,34,10,5,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,28,15,12,5,44,15,12,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,4,2,0,31,33,34,31,38,31,38,31,35,67,38,37,37,41,42,38,39,41,47,48,92,66,58,68,68,48,96,62,46,63,67,64,40,40,40,90,90,90,64,64,30,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,21,22,3,0,1,22,27,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,0,18,17,35,45,3,0,19,34,3,0,33,70,3,0,1,0,22,33,1,0,41,23,60,46,45,3,0,69,50,13,5,0,27,28,0,43,34,5,0,31,13,5,0,65,83,48,12,7,5,0,35,0,65,59,0,42,49,0,31,50,14,9,14,50,37,9,0,51,7,5,0,57,0,41,57,60,40,5,3,0,24,64,42,54,0,49,61,55,41,14,47,7,34,38,0,94,56,44,7,5,0,62,31,5,0,65,30,5,0,57,0,21,26,32,71,16,0,29,77,16,0,30,70,16,0,31,69,16,0,28,75,16,7,242,84,5,0,20,38,126,59,43,16,71,65,80,20,13,11,9,7,55,63,45,67,89,54,18,13,11,9,0,52,60,42,9,14,65,63,18,11,9,0,71,0,37,49,9,0,63,0,44,34,9,7,5,0,42,0,27,121,46,14,49,7,5,0,21,3,0,1,0,30,92,115,87,86,83,63,66,82,76,92,68,63,61,70,188,106,139,71,64,127,66,72,90,55,60,56,55,85,106,41,108,48,95,60,78,64,61,85,91,47,46,57,71,62,45,45,60,34,56,77,67,61,67,55,101,58,47,87,68,114,54,55,51,54,55,129,109,83,90,35,70,59,122,99,102,85,96,132,57,176,180,182,68,140,74,57,58,60,103,77,38,165,65,70,174,178,180,67,126,64,83,47,91,98,66,87,180,58,73,42,121,69,83,106,74,74,84,98,137,46,56,53,48,64,81,67,80,3,45,31,12,303,15,3,0,40,72,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,33,99,1,0,54,28,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,35,72,49,46,16,3,0,29,47,3,0,30,45,72,92,46,48,111,61,92,3,0,31,38,28,3,0,26,33,40,12,35,5,3,0,35,24,51,29,0,50,34,49,14,49,7,84,55,5,3,0,98,24,27,41,150,11,14,0,14,97,5,3,0,61,90,13,5,0,25,74,0,55,26,76,54,16,55,9,7,0,27,5,3,0,26,198,3,0,25,50,40,34,21,3,0,56,63,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,38,30,21,24,57,0,24,63,0,24,63,0,23,45,0,23,45,0,24,46,0,14,56,5,3,0,49,69,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,62,39,3,0,73,93,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,22,33,36,18,5,0,36,3,0,50,53,66,29,64,12,59,5,3,0,40,47,0,40,37,38,28,25,5,0,16,3,0,55,20,13,5,0,62,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,3,0,18,55,23,27,41,29,3,0,1,17,45,45,45,45,45,68,55,54,2,0,71,40,34,11,3,0,37,0,81,35,3,0,39,2,0,48,22,0,31,122,21,5,3,0,35,0,30,34,3,2,0,50,106,32,2,0,48,49,32,2,0,50,133,94,32,2,0,44,0,82,295,56,10,55,3,0,33,2,0,45,47,29,10,46,3,0,33,2,0,4315,2645,85,106,62,1815,929,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,50,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,30,1,0,52,41,39,1,0,178,34,110,198,58,81,102,80,137,127,207,126,145,123,111,156,148,108,155,207,99,100,66,128,133,89,78,107,59,140,91,107,56,88,94,90,82,104,89,106,54,3,0,38,248,1,0,34,68,1,0,38,87,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,52,31,26,32,3,0,22,77,3,0,22,51,3,0,26,94,42,31,7,5,0,40,3,0,23,40,60,0,55,33,43,35,14,50,7,5,0,37,3,0,33,40,29,36,38,34,16,3,0,24,34,42,39,30,42,36,0,89,75,5,0,33,42,32,56,12,56,5,3,0,42,40,29,29,20,25,0,35,36,44,12,34,36,0,37,46,7,5,0,29,3,0,31,16,43,49,3,0,34,16,48,38,43,0,33,73,12,37,5,0,30,51,33,29,30,88,87,73,30,21,52,3,0,40,35,46,45,49,40,49,46,34,56,14,27,78,9,0,49,7,43,50,45,51,48,50,43,72,12,30,5,3,0,34,16,60,66,21,52,3,0,32,34,0,35,37,12,39,5,0,50,36,30,0,39,38,0,38,20,0,71,94,9,0,35,14,89,57,7,0,26,5,0,22,30,48,20,32,33,40,34,79,9,0,20,63,30,82,9,0,28,79,9,0,26,31,7,7,35,50,3,0,57,31,0,35,68,67,14,48,25,7,0,26,63,12,135,39,52,103,7,0,125,69,31,67,166,40,0,55,44,33,35,11,0,44,22,9,5,0,28,3,0,39,16,37,57,21,57,3,0,35,16,34,35,16,3,0,36,16,41,36,16,3,0,35,16,37,53,3,0,48,65,96,0,33,69,12,33,5,0,22,25,21,0,35,10,60,50,5,0,38,18,0,10,59,38,5,0,42,18,0,10,63,38,5,0,42,27,24,25,26,25,7,3,0,31,34,54,0,33,71,12,33,5,0,53,3,0,28,37,57,3,0,28,23,76,5,3,0,50,41,112,3,0,55,76,41,3,0,28,62,70,0,33,69,12,33,5,0,57,21,46,3,0,38,34,61,70,0,33,69,12,33,5,0,26,0,34,66,5,0,25,0,19,62,5,0,21,47,3,0,50,39,34,46,60,27,29,38,0,31,25,42,12,27,66,7,5,0,50,3,0,39,40,34,21,29,0,66,18,12,24,5,0,32,0,8,73,38,0,34,31,7,0,36,33,7,38,0,31,34,61,3,0,41,34,40,21,29,31,64,42,0,37,45,0,36,33,7,5,0,58,31,34,63,3,0,50,34,40,21,29,31,0,37,68,0,36,33,7,5,0,31,34,63,3,0,28,34,39,22,0,35,10,60,38,5,0,42,25,24,25,24,25,7,60,3,0,32,113,3,0,56,27,0,48,50,49,12,21,38,5,0,32,49,29,54,3,0,51,27,48,32,32,0,61,25,28,99,12,26,0,37,29,7,0,51,5,0,59,3,0,38,21,21,31,0,33,69,5,0,30,0,70,58,0,38,33,7,5,0,35,52,5,0,30,54,59,3,0,51,39,27,62,59,3,0,23,16,15,16,15,16,6,40,29,39,34,30,28,33,17,14,24,0,52,35,33,19,12,32,30,20,5,0,28,0,35,27,28,30,36,0,53,43,0,82,22,40,30,9,7,0,55,43,0,82,22,26,9,7,0,48,0,37,33,38,9,0,39,25,44,11,0,93,16,93,9,70,33,38,9,0,23,42,9,0,92,14,26,0,67,45,0,113,36,24,11,9,0,166,0,37,25,49,16,51,9,7,0,37,0,86,79,7,5,0,26,0,22,34,5,0,67,34,15,3,0,102,35,138,0,27,27,81,35,77,9,0,23,65,9,0,20,7,0,25,77,7,0,31,36,7,0,21,62,7,0,43,63,12,51,29,38,23,27,0,63,27,0,33,38,9,0,23,42,9,0,101,0,47,49,9,14,47,28,0,39,26,9,0,53,33,7,0,31,57,5,3,0,41,55,33,80,0,32,36,49,14,49,7,5,0,57,55,5,3,0,29,119,24,5,3,0,60,44,47,62,0,33,57,33,58,63,5,0,16,3,0,48,54,31,76,0,33,71,5,0,58,3,0,25,34,31,48,57,3,0,24,34,20,32,0,73,44,44,31,5,0,32,56,3,0,32,20,25,30,34,32,0,64,36,0,37,24,7,0,55,12,44,5,0,21,29,41,54,3,0,44,62,21,26,31,54,3,0,44,20,0,70,53,0,38,33,7,5,0,35,47,5,0,12,13,10,6,3,0,59,22,17,58,0,18,21,62,0,19,60,0,19,60,0,20,61,0,20,61,0,20,61,0,14,41,65,5,3,0,26,38,41,34,12,13,30,64,0,30,22,45,47,9,0,96,0,24,41,29,28,28,28,28,11,0,27,41,29,27,28,28,29,11,0,26,46,41,62,20,0,28,39,73,36,51,35,31,36,35,49,65,9,0,14,0,24,20,0,71,39,48,78,18,33,11,9,0,28,48,38,64,0,145,38,24,18,34,11,9,0,19,98,16,51,9,0,33,29,34,33,47,35,63,0,24,82,0,23,24,45,20,69,0,25,39,22,0,38,115,11,0,41,115,11,0,86,9,0,32,0,21,82,0,24,82,0,23,20,59,0,23,20,66,0,23,20,59,0,22,20,61,0,14,51,44,45,46,22,53,9,0,5,0,28,3,0,26,38,41,43,0,70,56,30,34,34,58,5,0,16,3,0,25,34,0,35,55,61,12,41,5,3,0,40,45,0,66,66,69,23,45,33,61,5,0,17,3,0,31,34,31,59,24,0,40,65,5,0,96,3,0,24,34,30,50,24,0,39,56,5,0,89,3,0,19,40,29,43,34,85,16,3,0,42,69,40,43,42,65,12,34,5,3,0,29,34,58,51,3,0,62,105,0,34,60,35,5,0,17,3,0,29,57,97,27,3,0,23,24,0,36,34,0,37,31,14,32,7,0,18,44,5,0,20,3,0,66,30,110,5,0,58,3,0,60,34,40,94,101,5,0,59,3,0,37,90,36,18,43,70,36,18,49,12,59,0,74,31,7,0,18,5,3,0,40,37,36,151,45,9,42,40,47,42,47,44,55,9,7,5,0,54,3,0,34,198,3,0,30,193,19,5,0,44,3,0,34,63,36,18,49,5,0,48,3,0,70,49,0,27,97,0,25,70,20,7,0,54,25,5,0,32,37,51,54,9,17,12,45,68,0,39,47,0,31,27,41,0,50,43,9,0,10,21,16,50,68,7,0,39,70,7,0,41,27,64,10,21,16,50,7,5,0,51,45,29,21,33,133,58,3,0,35,64,47,44,47,12,17,12,6,3,0,50,25,22,0,32,31,0,52,54,43,16,28,9,0,30,57,36,35,7,5,0,26,63,26,5,0,97,3,0,31,20,0,112,51,41,22,3,0,49,15,0,74,66,23,49,12,23,5,0,18,3,0,44,58,0,35,27,34,5,0,34,64,37,67,65,5,0,16,3,0,33,250,13,5,0,40,3,0,21,41,0,89,51,5,0,16,3,0,32,36,31,47,18,0,37,55,35,20,14,56,7,45,31,47,18,62,48,31,47,18,54,70,32,47,18,60,12,48,5,3,0,23,55,0,76,31,18,18,18,5,0,17,3,0,44,33,72,0,53,27,5,0,24,3,0,47,54,0,33,69,5,3,0,70,33,0,39,65,15,7,0,28,5,0,77,0,25,86,56,32,80,7,5,3,0,26,59,0,39,47,67,48,45,35,30,12,42,5,3,0,33,24,24,27,26,31,20,0,30,9,50,53,124,13,9,0,28,45,0,27,48,0,29,74,0,34,37,0,37,32,50,0,30,38,26,0,14,21,5,3,0,22,45,64,12,38,5,3,0,48,47,31,0,55,53,7,5,0,62,3,0,51,47,31,0,150,76,7,5,0,20,3,0,78,45,82,5,3,0,28,34,59,5,0,42,3,0,35,34,59,5,0,49,3,0,19,59,3,0,21,62,3,0,34,76,3,0,94,26,45,5,0,27,0,33,71,5,0,101,3,0,67,26,45,5,0,27,0,33,71,5,0,74,3,0,25,32,0,52,76,5,0,42,18,47,0,10,38,59,0,37,75,16,37,9,0,67,38,5,3,0,49,46,68,29,15,3,0,114,24,43,5,0,25,23,0,33,64,55,5,0,121,0,25,59,5,3,0,39,35,40,67,7,0,28,5,0,34,60,5,0,33,17,3,0,47,67,0,115,78,5,0,16,3,0,34,35,50,5,0,44,3,0,72,120,81,59,3,0,42,30,20,0,36,22,43,20,5,0,15,34,0,54,34,7,0,91,20,31,7,5,0,56,3,0,30,39,43,50,33,0,37,33,46,35,5,0,26,0,71,50,0,94,38,49,45,14,40,36,49,7,99,54,47,0,37,49,14,25,55,7,12,23,38,34,53,5,0,53,63,0,52,80,5,0,52,80,5,0,67,80,5,0,81,72,3,0,45,27,0,69,69,5,0,52,3,0,26,33,0,34,62,37,5,3,0,49,34,66,43,55,60,5,0,63,3,0,27,68,3,0,81,21,12,0,93,33,124,38,13,15,21,0,59,28,66,28,7,5,0,53,42,25,41,66,177,56,73,31,16,110,66,0,28,35,24,7,0,28,37,31,7,0,45,42,91,5,0,95,3,0,20,34,42,68,45,42,96,62,57,56,24,9,37,54,107,5,0,34,3,0,22,63,3,0,44,74,27,12,53,5,3,0,55,93,13,5,0,43,3,0,50,121,3,0,54,111,18,56,25,78,53,95,39,121,60,106,59,0,23,37,26,7,0,24,38,27,7,0,40,5,0,68,3,0,69,75,48,0,20,35,20,7,0,18,56,25,70,32,78,27,51,79,56,25,42,81,34,80,70,83,9,0,24,56,27,7,5,0,83,3,0,27,21,0,60,92,5,0,31,34,3,0,57,54,35,39,60,3,0,31,59,0,66,40,26,23,13,5,0,38,3,0,28,59,0,39,40,13,5,0,35,3,0,32,56,0,36,69,5,0,20,3,0,22,67,38,60,7,0,38,47,39,13,5,0,36,65,0,23,73,7,0,31,13,5,0,29,3,0,21,11,9,19,38,0,86,34,5,0,71,75,0,35,43,5,0,117,44,5,0,35,39,5,0,17,3,0,30,57,0,21,67,5,3,0,49,13,14,6,86,3,0,39,13,14,6,73,88,3,0,41,13,14,6,78,3,0,46,12,6,71,3,0,41,13,16,6,163,3,0,46,13,17,14,6,23,0,27,21,20,20,69,14,0,20,68,14,0,14,69,5,0,72,3,0,48,13,14,6,85,3,0,59,12,6,84,3,0,24,38,0,80,0,30,21,9,80,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,24,9,79,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,23,24,9,53,0,28,20,30,33,28,14,11,0,18,28,25,12,9,0,14,16,26,23,10,5,3,0,23,33,42,67,19,9,6,12,9,10,6,3,0,65,11,18,16,0,32,13,5,0,40,63,5,3,0,19,13,16,6,32,21,25,24,24,26,6,0,39,42,13,11,12,35,33,0,30,17,7,0,38,55,19,20,11,7,0,38,57,19,20,11,7,0,32,23,17,21,18,8,25,0,26,23,11,81,41,90,18,11,0,22,11,80,41,88,18,11,0,22,11,80,41,88,18,11,0,23,11,80,11,0,20,11,35,29,81,22,0,28,80,22,0,22,98,13,11,7,0,38,33,7,5,0,19,3,0,63,12,6,42,30,47,32,69,62,46,79,18,11,7,0,30,12,63,45,79,18,11,7,0,32,5,3,0,29,12,6,35,36,71,19,28,11,7,0,13,13,21,18,0,98,65,19,29,11,7,0,19,5,0,16,3,0,22,13,11,6,57,14,7,30,42,15,18,7,0,27,21,33,46,34,56,0,20,33,45,34,55,0,20,33,100,18,11,34,55,0,20,48,34,55,0,14,9,31,30,38,59,12,0,36,57,55,55,63,0,67,27,45,104,22,15,38,59,72,124,56,75,25,42,17,13,0,50,38,60,72,126,57,74,25,42,17,13,0,49,38,59,18,65,22,15,27,11,9,5,3,0,34,38,17,53,24,23,7,52,3,0,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,33,82,77,78,87,54,130,3,47,48,62,41,42,18,3,50,18,3,45,0,47,42,42,33,2,0,53,39,0,85,29,66,10,34,3,2,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,54,31,57,13,0,46,11,0,62,54,0,16,62,38,38,16,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,70,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,47,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,84,3,0,24,34,0,36,35,41,42,12,24,5,0,16,50,3,0,28,38,41,43,44,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,33,59,28,51,61,5,0,16,3,0,28,13,0,30,24,32,20,54,0,60,61,9,0,20,0,29,24,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,30,51,3,0,37,35,55,12,47,5,0,30,59,3,0,23,34,0,33,34,46,32,57,5,0,46,75,49,3,0,48,54,0,38,35,57,5,0,43,54,3,0,41,26,0,70,48,5,0,33,45,33,54,3,0,48,54,0,38,35,57,5,0,43,33,54,3,0,41,54,24,77,30,0,38,26,34,33,40,43,24,0,40,81,29,13,0,70,18,0,29,48,18,0,28,13,44,26,0,47,62,22,70,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,33,81,5,0,115,3,0,21,38,41,16,54,3,0,38,36,60,47,36,88,42,36,12,54,5,3,0,26,71,38,0,37,33,5,0,67,36,34,7,0,24,25,49,7,0,71,40,7,5,0,100,23,49,5,0,40,3,0,27,35,43,0,42,57,49,55,14,38,7,0,36,75,37,46,37,12,43,5,3,0,3,0,13,22,18,22,24,23,3,0,1,20,32,25,38,43,23,29,3,0,20,63,3,0,20,61,3,0,26,68,3,0,17,61,3,0,28,64,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,35,14,33,7,0,45,45,7,46,61,35,70,29,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,53,5,3,0,49,55,0,43,116,5,0,44,121,5,0,193,3,0,24,167,51,5,3,0,18,55,3,0,21,52,39,0,36,21,7,5,3,0,22,52,39,0,99,21,7,5,3,0,1,0,37,24,19,20,20,25,22,33,3,0,1,0,51,22,38,3,0,39,38,0,50,43,42,13,5,0,36,0,39,45,70,45,7,0,29,5,0,65,76,65,3,0,49,41,45,67,61,36,7,0,18,5,0,77,45,49,14,21,7,5,0,73,18,5,0,51,3,0,24,124,33,5,3,0,1,0,20,26,26,27,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,1,46,71,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,32,76,78,87,48,56,84,98,80,86,102,85,98,85,144,101,69,79,86,104,127,3,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,58,21,34,3,0,20,34,3,0,34,16,210,3,0,37,34,23,5,0,38,0,117,22,5,0,21,3,0,48,14,40,62,27,0,59,67,7,0,32,5,3,0,28,19,25,25,40,0,35,40,0,31,42,0,39,38,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,44,78,3,0,65,22,0,14,42,14,7,0,37,0,28,25,7,0,27,0,34,17,7,0,42,14,7,0,26,33,7,0,23,5,0,18,3,0,69,26,20,36,14,35,7,5,0,65,0,18,34,12,33,5,0,18,3,0,23,34,31,30,0,36,75,5,0,41,30,0,30,52,5,0,33,56,5,0,49,3,0,41,40,0,33,48,25,60,56,5,0,18,3,0,26,34,50,0,66,56,5,0,52,3,0,33,16,43,29,60,52,3,0,25,34,16,47,3,0,22,34,31,0,36,47,12,51,5,0,48,3,0,26,34,53,62,53,52,3,0,30,33,42,5,3,0,27,34,0,66,18,12,24,5,0,124,63,3,0,35,49,18,41,5,0,16,3,0,43,60,63,30,65,0,30,88,41,88,5,3,0,36,67,147,92,7,0,21,7,3,0,32,33,23,5,3,0,38,44,38,39,3,0,37,16,59,3,0,34,109,23,5,0,32,38,53,30,32,27,49,41,38,53,3,0,52,55,25,0,76,29,48,40,58,12,31,45,51,47,40,62,5,3,0,23,34,0,61,77,5,0,33,34,18,0,63,84,14,52,66,7,5,0,58,52,0,14,41,17,5,0,40,65,3,0,24,34,51,50,3,0,30,30,87,30,19,3,0,27,16,0,34,43,5,0,40,18,5,0,38,19,5,0,16,0,33,19,5,0,16,33,3,0,32,34,53,60,52,3,0,23,34,30,0,36,39,18,40,48,27,5,0,32,59,32,0,36,39,18,34,42,27,5,0,48,21,30,49,3,0,22,34,125,36,46,50,35,76,75,7,7,48,3,0,29,37,40,18,51,0,71,48,7,0,53,5,0,36,0,35,58,45,65,5,0,16,3,0,30,34,30,45,30,56,3,0,42,34,0,39,30,5,0,44,39,3,0,28,34,0,27,32,23,26,25,26,38,0,16,34,7,9,0,50,3,0,32,34,51,0,46,90,5,0,32,50,3,0,40,51,0,67,56,12,25,5,3,0,25,30,22,23,23,9,149,0,70,42,24,47,11,0,45,9,0,24,21,23,24,45,0,25,39,40,0,52,36,11,0,48,56,9,0,14,0,23,57,0,25,39,0,25,40,0,24,126,0,26,39,0,24,47,0,27,49,5,0,28,3,0,30,42,0,71,39,48,32,36,52,14,48,31,44,36,60,7,5,0,16,3,0,33,34,36,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,35,43,71,75,48,3,0,33,87,146,3,0,72,23,38,0,31,27,0,34,43,7,0,46,25,41,5,0,16,3,0,37,132,3,0,30,128,3,0,29,33,18,5,0,110,3,0,26,60,18,18,5,0,35,32,18,0,37,39,30,46,30,9,0,20,7,0,18,5,0,37,32,18,0,37,41,30,48,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,65,18,5,0,38,117,20,7,0,37,20,0,38,22,9,7,5,0,17,3,0,53,32,33,31,83,0,47,74,0,54,47,49,30,71,16,43,9,0,45,54,7,0,121,0,35,23,54,9,0,45,52,31,68,54,7,0,53,43,49,33,29,66,52,7,3,0,45,104,3,0,30,78,3,0,20,48,3,0,32,38,0,67,18,16,5,3,0,33,100,19,5,0,47,16,0,62,19,5,0,22,88,5,0,16,3,0,64,25,45,44,7,50,3,0,17,30,50,0,68,18,5,0,44,26,56,32,39,29,40,54,3,0,31,41,69,5,0,33,72,5,0,43,3,0,26,34,0,56,0,63,31,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,33,56,5,0,66,3,0,37,37,94,58,0,35,59,5,0,34,72,57,59,3,0,37,37,78,58,63,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,91,0,29,49,5,0,49,3,0,41,35,37,115,30,95,30,54,3,0,24,34,34,30,84,22,50,3,0,61,37,0,18,90,5,0,30,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,38,25,39,42,37,12,24,5,0,35,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,82,26,57,21,62,3,0,33,75,3,0,28,118,3,0,36,34,37,30,0,36,30,5,0,43,30,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,35,29,19,5,0,24,27,62,0,24,28,50,0,24,77,36,40,57,9,0,22,40,50,0,22,9,41,0,35,70,18,62,11,9,5,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,39,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,69,27,30,0,21,24,0,44,50,13,11,0,51,9,0,14,0,18,45,32,58,9,0,14,0,23,67,32,56,9,0,14,0,20,30,0,39,68,74,64,9,0,14,0,23,67,32,64,9,0,14,0,18,67,32,56,9,0,14,5,3,0,50,71,3,0,59,34,23,5,0,72,44,44,45,29,29,47,56,57,38,71,31,18,7,66,38,38,0,15,23,5,0,54,3,0,26,34,64,33,97,8,35,31,65,3,0,26,33,33,24,23,20,25,22,25,20,22,7,5,0,17,3,0,30,50,44,3,0,55,38,41,22,25,0,25,49,54,5,0,42,44,73,0,36,54,0,30,35,7,0,58,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,34,79,5,0,135,0,79,42,13,5,0,59,3,0,37,32,70,12,54,5,3,0,60,66,37,18,69,42,71,5,0,33,52,58,92,0,29,32,11,9,0,58,27,58,0,28,51,84,48,78,51,102,11,9,0,26,9,32,5,0,74,3,0,27,33,60,49,57,20,9,0,27,45,7,5,0,34,3,0,64,105,64,29,0,58,0,19,37,14,57,7,0,46,79,5,0,78,3,0,64,0,28,0,21,87,37,0,62,57,7,0,126,33,20,14,34,7,5,0,47,0,141,119,5,0,22,3,0,21,36,33,61,36,26,49,23,59,42,24,41,39,23,67,12,80,20,33,14,34,7,0,37,5,3,0,21,83,3,0,34,33,35,18,39,26,17,5,0,43,87,32,5,0,48,3,0,44,43,37,0,64,38,34,38,55,7,5,0,58,3,0,25,68,3,0,70,47,53,60,47,77,3,0,92,71,54,0,14,31,0,28,69,7,0,21,67,7,0,33,96,7,0,13,5,0,99,3,0,46,46,47,0,60,70,5,0,59,69,5,3,0,40,102,62,3,0,34,49,48,3,0,70,59,86,5,0,95,0,23,68,18,5,0,52,23,3,0,44,58,0,35,27,34,5,0,34,64,37,65,67,5,0,16,3,0,32,38,41,52,20,0,33,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,74,13,5,0,99,59,61,3,0,38,49,27,5,0,49,41,3,0,28,44,0,50,77,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,63,101,3,0,67,59,63,74,3,0,25,32,0,52,61,5,0,43,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,64,27,5,0,49,0,15,36,37,5,3,0,49,34,53,5,0,63,3,0,29,14,12,17,0,40,33,72,38,13,15,21,0,59,28,66,28,7,5,0,57,45,5,0,23,40,42,52,51,0,94,16,7,0,65,62,7,0,43,18,14,58,0,15,37,77,48,5,0,26,33,22,5,0,21,35,24,5,0,36,38,27,5,0,43,40,58,72,3,0,40,59,41,12,56,5,3,0,20,34,45,82,75,26,9,33,0,27,56,38,7,5,0,34,3,0,39,35,40,60,7,0,28,5,0,49,42,33,17,3,0,22,24,34,66,0,33,40,0,28,33,29,61,20,0,14,40,5,3,0,78,24,34,15,0,33,88,15,0,28,33,29,87,15,0,14,77,15,5,3,0,22,30,23,42,0,14,40,5,3,0,38,33,56,0,37,62,44,20,7,0,54,5,0,52,3,0,19,59,3,0,21,88,3,0,30,50,0,115,80,5,0,16,3,0,26,60,48,12,42,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,42,47,31,0,57,66,7,5,0,20,3,0,22,63,3,0,27,68,3,0,29,69,3,0,41,33,87,61,5,0,55,3,0,45,70,40,105,55,3,0,3,0,41,18,3,60,34,40,36,18,61,46,61,37,56,5,3,0,41,76,37,68,3,0,26,74,49,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,29,64,44,3,0,40,80,58,5,0,34,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,60,0,22,100,30,46,23,69,43,14,58,7,12,55,5,0,31,93,39,3,0,21,60,61,0,65,27,25,76,61,5,0,43,39,37,77,35,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,42,88,5,0,28,33,3,0,21,60,61,25,0,65,73,23,56,5,0,56,34,57,36,0,32,69,64,5,0,34,43,21,54,3,0,23,91,3,0,3,0,59,22,35,48,36,29,0,35,64,61,50,0,39,28,9,7,0,40,5,3,0,19,72,3,0,3,0,35,33,32,32,12,29,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,58,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,137,151,3,0,146,162,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,15,35,36,37,33,32,14,19,16,16,40,22,2,27,21,0,96,33,79,3,0,17,1,0,13,17,21,31,24,40,30,40,39,28,24,36,32,32,28,25,34,25,6,27,44,21,31,23,23,23,31,30,27,36,17,23,26,22,19,17,30,32,26,24,44,28,29,29,34,26,3,0,17,89,37,53,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,66,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,40,31,12,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,28,33,0,32,46,7,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,15,27,33,28,16,29,28,21,16,3,0,20,38,42,49,39,3,0,23,56,3,0,21,31,68,38,0,51,88,27,5,0,21,3,0,16,61,3,0,15,41,67,35,38,51,0,40,34,13,5,0,71,0,19,21,12,68,5,3,0,58,21,51,18,19,15,47,6,53,38,29,3,0,22,46,33,61,72,29,33,14,0,83,27,59,5,0,33,120,3,0,30,33,46,64,0,39,64,51,7,5,0,33,140,3,0,15,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,38,20,0,20,38,20,0,20,25,11,0,16,0,16,33,29,18,23,11,0,7,5,3,0,26,36,49,37,27,27,56,3,0,26,63,13,5,0,39,48,0,35,72,5,0,76,76,162,7,0,25,43,14,45,7,0,26,167,35,12,77,5,3,0,19,59,0,35,28,13,5,0,74,26,39,12,23,34,5,3,0,21,55,23,24,13,5,0,59,0,22,37,12,36,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,56,16,3,0,31,55,18,57,47,0,37,14,55,28,5,0,38,14,26,5,0,31,3,0,28,59,0,24,61,39,14,76,7,0,13,5,0,23,24,41,15,7,0,61,77,93,9,0,42,15,7,0,60,77,92,9,0,44,15,7,5,0,22,37,13,5,0,72,3,0,21,59,0,22,37,12,41,5,3,0,28,59,0,24,202,32,25,25,15,7,0,37,13,5,0,22,37,12,38,5,3,0,25,59,17,0,24,85,0,64,46,15,7,0,42,13,5,0,159,30,23,23,13,5,0,22,15,5,0,42,3,0,27,59,0,22,94,13,5,0,37,26,36,13,5,0,58,3,0,24,59,60,0,44,25,39,14,50,7,62,26,42,12,23,39,5,3,0,26,19,14,29,15,0,14,25,39,15,0,14,25,39,15,0,14,25,37,15,0,14,25,38,15,0,14,100,79,96,11,0,46,30,16,27,43,9,0,15,0,14,25,41,15,0,15,100,79,97,11,0,44,30,16,27,41,9,0,15,0,15,25,39,15,0,14,97,46,16,27,40,9,0,15,0,14,34,15,0,14,25,42,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,14,35,15,0,14,14,37,15,0,15,38,15,0,14,25,35,15,0,14,36,15,0,14,24,15,0,14,38,26,17,9,0,5,0,98,3,0,24,72,27,32,3,0,16,33,25,0,14,42,59,7,0,51,0,31,59,7,0,20,24,14,25,25,43,26,44,16,9,0,30,7,0,23,5,0,60,21,18,0,42,46,62,0,40,38,70,9,65,68,14,14,7,0,23,19,5,0,36,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,47,26,65,65,0,53,74,122,74,11,0,35,80,11,0,27,19,9,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,75,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,67,5,0,56,23,22,5,0,68,64,5,0,19,79,42,13,5,0,37,3,0,29,33,24,25,37,0,54,46,5,0,83,0,16,30,53,7,0,65,22,36,7,5,0,53,0,32,23,23,21,51,5,0,50,53,0,39,25,7,0,73,21,51,5,0,80,81,0,30,76,7,5,0,23,53,51,7,0,23,22,5,0,68,64,5,0,77,0,19,42,13,5,0,59,37,3,0,33,53,13,0,21,39,110,23,0,45,29,55,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,70,7,0,55,30,0,22,60,43,36,46,25,29,46,33,70,14,25,7,5,0,58,40,3,0,19,17,36,32,0,14,42,72,7,0,55,0,88,80,26,32,49,19,18,29,46,19,11,9,0,60,71,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,9,0,14,35,45,86,44,0,28,45,42,11,0,48,61,0,63,29,26,43,61,20,54,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,58,14,37,7,5,0,13,3,0,15,18,35,33,36,0,42,56,0,33,47,54,25,29,38,61,40,96,0,62,66,19,9,0,25,45,0,27,38,68,11,0,44,9,0,36,14,14,7,5,0,63,3,0,20,63,3,0,14,34,50,0,82,65,5,0,33,3,0,25,39,0,39,74,5,3,0,26,37,0,88,18,5,0,112,28,5,0,90,87,5,0,145,18,5,0,36,47,5,0,90,19,5,0,40,18,5,0,35,3,0,27,33,15,0,85,37,45,34,12,47,5,3,0,1,0,36,28,22,48,21,3,0,20,67,3,0,29,39,0,41,43,20,7,0,56,64,5,0,17,3,0,24,32,18,12,46,5,3,0,22,90,3,0,41,44,145,3,0,31,39,49,3,0,23,59,3,0,35,66,3,0,24,93,3,0,27,85,3,0,22,61,3,0,15,68,3,0,21,49,3,0,48,51,49,5,3,0,55,44,76,5,0,74,3,0,27,32,70,29,84,5,0,16,3,0,31,46,70,28,116,5,3,0,36,114,98,5,0,37,95,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,17,28,67,0,31,39,5,0,27,53,5,3,0,1,24,17,30,26,3,0,1,0,12,33,19,21,17,39,63,71,3,0,13,31,35,0,60,26,0,95,33,7,5,0,19,3,0,1,0,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,30,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,47,105,2,0,36,22,34,0,34,0,127,58,0,93,70,7,5,0,24,24,27,26,31,14,0,30,36,0,94,27,0,42,36,62,0,133,60,11,9,0,14,0,28,38,14,0,27,9,43,36,36,33,16,9,0,29,35,120,14,0,34,36,66,9,0,40,29,37,14,0,37,41,14,5,0,16,3,0,50,39,117,40,58,40,12,30,5,3,0,48,30,0,14,37,0,48,14,57,34,34,31,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,31,0,41,43,9,7,5,0,20,3,0,51,20,3,0,55,57,0,50,32,0,52,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,26,9,40,22,74,55,9,0,24,49,5,0,34,3,0,70,20,21,0,30,18,22,14,33,7,0,50,24,35,14,46,78,48,27,14,14,30,0,67,77,9,0,38,49,9,0,76,7,5,0,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,47,44,43,41,54,21,41,54,3,0,125,24,24,150,136,9,0,27,38,0,34,53,18,37,11,9,0,56,61,9,0,41,69,9,0,14,0,30,40,71,9,0,14,0,27,101,43,112,110,9,0,14,0,26,95,43,0,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,127,9,5,3,0,31,91,75,5,3,0,30,34,47,59,14,48,7,5,3,0,25,51,3,0,36,46,3,0,1,0,43,61,88,13,5,0,25,74,0,31,26,34,55,56,11,16,55,9,7,0,27,5,3,0,19,27,0,59,32,5,0,36,37,21,40,0,33,24,5,0,40,36,16,3,0,46,38,41,66,0,34,56,32,0,37,80,7,0,46,57,5,0,16,3,0,81,38,41,0,37,36,41,0,29,69,9,0,20,14,39,7,5,0,28,0,30,34,12,51,33,5,0,61,53,5,0,87,0,25,65,5,0,35,56,40,31,0,31,47,7,0,53,47,7,0,33,44,45,14,25,7,0,67,49,7,0,74,18,47,59,37,60,5,0,16,3,0,70,38,41,57,62,0,85,18,5,0,76,83,3,0,70,35,56,23,48,31,51,60,5,0,16,3,0,43,38,41,57,59,0,85,18,5,0,65,18,5,0,64,3,0,64,37,0,60,27,42,0,73,22,9,0,66,25,33,0,161,85,9,0,35,74,56,0,36,48,39,64,30,40,9,0,20,0,106,98,88,11,9,0,63,94,39,0,135,79,9,0,81,7,5,0,16,3,0,40,38,41,0,17,26,71,23,58,116,15,0,24,62,62,15,9,0,14,61,5,3,0,44,38,41,117,3,0,40,62,31,40,36,46,39,25,0,38,46,7,0,18,45,60,0,19,80,67,34,0,40,54,92,60,9,7,0,84,5,0,38,41,61,76,0,67,56,39,26,27,70,18,55,5,0,16,3,0,44,38,41,57,57,0,85,18,5,0,58,3,0,54,19,33,55,17,6,0,8,72,0,34,48,7,0,75,36,66,26,0,16,3,0,60,50,56,25,43,24,104,5,0,25,0,40,50,0,55,26,20,7,0,18,5,0,46,0,115,56,25,131,31,0,49,43,57,9,0,83,7,0,21,36,7,0,38,33,65,14,57,7,54,74,46,46,47,31,31,18,54,25,0,21,29,80,14,149,7,0,65,0,79,26,98,46,42,42,14,50,66,0,89,44,9,7,0,68,18,45,81,12,24,18,5,3,0,81,54,20,42,59,0,36,62,5,0,61,3,0,30,208,3,0,40,40,40,55,14,44,0,62,71,9,7,5,0,89,3,0,106,20,24,21,80,50,0,30,18,22,14,33,0,32,30,88,11,0,29,82,11,0,22,16,9,7,0,57,43,7,0,125,16,40,5,0,80,24,5,0,74,16,3,0,27,65,3,0,49,20,0,29,131,16,3,0,21,38,41,80,3,0,38,59,72,13,0,30,24,32,20,0,112,57,85,57,9,0,97,58,9,0,46,0,25,32,20,0,36,52,9,0,40,72,9,0,47,0,23,32,20,55,0,22,9,34,53,44,0,113,55,0,73,48,13,0,66,24,61,129,80,78,52,52,53,52,37,37,52,37,50,74,72,46,46,58,24,11,0,84,24,57,24,11,0,20,9,0,21,9,45,40,22,46,33,40,40,55,9,0,24,9,41,65,39,35,22,9,0,21,69,0,24,68,0,24,68,0,23,32,20,52,0,23,24,42,0,24,67,0,29,30,9,46,86,99,56,34,22,85,80,58,9,0,26,9,86,56,34,22,94,0,51,49,11,0,80,58,9,0,27,28,9,46,86,93,56,77,80,21,9,0,24,9,86,56,85,80,21,9,0,27,46,0,20,31,0,24,32,34,44,0,22,31,0,27,41,0,29,9,34,22,29,62,0,51,59,18,67,11,9,0,22,9,38,36,0,83,79,13,0,24,0,78,68,13,0,42,74,11,9,0,14,32,5,3,0,25,34,41,16,51,3,0,47,45,0,20,78,0,34,66,7,0,36,18,70,43,50,12,40,5,3,0,29,34,32,16,51,0,57,56,5,0,36,3,0,47,21,0,62,44,42,51,26,7,5,0,47,47,0,61,95,5,0,49,3,0,33,75,27,0,36,38,0,27,38,57,43,7,0,36,47,56,5,0,52,3,0,49,44,47,54,43,75,23,16,39,3,0,50,38,41,12,30,72,44,44,80,45,29,29,50,43,46,24,55,30,14,6,21,20,27,0,39,18,22,14,65,0,39,48,16,9,7,0,39,52,55,39,108,37,14,14,112,7,5,0,41,44,30,66,74,57,0,92,72,42,7,0,44,40,40,0,52,35,0,55,50,9,7,0,60,23,5,0,62,62,0,27,47,5,0,64,50,58,72,46,0,30,59,33,77,12,24,5,0,55,48,49,17,5,0,65,37,64,27,3,0,22,38,3,0,20,32,18,5,3,0,44,16,3,0,14,34,32,16,46,0,30,68,0,66,47,0,48,42,9,0,42,7,0,22,5,0,41,0,40,71,114,70,45,65,5,0,33,50,3,0,27,33,52,34,28,12,26,5,3,0,34,34,0,36,22,79,7,5,0,18,86,30,6,16,44,52,3,0,27,34,16,26,53,27,0,26,38,52,32,69,5,0,16,52,3,0,61,41,21,34,25,16,0,30,18,22,14,33,0,32,72,22,16,9,7,0,74,0,23,71,7,0,27,47,7,0,33,5,0,34,0,20,29,26,32,5,0,39,3,0,21,286,3,0,53,24,0,31,41,74,7,0,36,47,7,5,0,34,28,24,17,17,0,37,47,0,22,20,47,38,52,7,0,32,5,0,28,35,22,5,0,24,0,43,34,37,5,0,21,41,5,0,47,40,0,79,21,41,42,12,22,5,0,120,16,3,0,43,270,3,0,45,41,3,0,35,70,31,0,46,34,49,14,49,7,5,0,98,55,5,3,0,73,61,39,27,25,88,5,0,71,52,32,42,73,41,18,5,3,0,81,27,0,32,145,53,5,0,59,72,0,22,84,63,57,65,9,0,84,14,40,7,0,28,53,5,3,0,114,178,33,16,3,0,49,35,27,41,34,12,58,39,169,0,44,30,7,0,52,5,0,20,3,0,31,19,27,27,3,0,104,44,44,29,29,37,35,41,132,65,51,54,26,22,38,38,16,3,0,65,51,56,37,72,44,44,0,17,47,70,5,0,46,29,29,39,26,22,66,38,38,60,3,0,62,66,3,0,60,50,32,3,0,62,70,52,36,0,23,42,60,12,42,42,29,73,74,63,0,50,125,68,9,0,66,134,0,43,106,9,9,28,36,5,0,46,3,0,29,56,56,5,0,16,3,0,81,41,0,50,139,5,3,0,71,20,21,0,30,18,22,14,33,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,90,12,0,48,17,44,50,53,129,44,46,0,30,75,7,0,36,18,57,12,101,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,0,33,30,41,37,0,170,33,7,12,30,5,0,18,35,12,87,5,0,16,16,3,0,63,54,58,13,5,0,27,36,60,15,7,0,102,47,7,5,0,87,68,13,5,0,43,59,13,5,0,123,0,44,57,61,14,66,7,5,3,0,20,62,60,0,42,54,5,0,17,3,0,16,34,16,0,34,68,44,39,5,0,31,55,5,0,76,275,48,14,38,7,5,0,32,45,5,0,52,3,0,20,34,0,34,54,44,39,5,0,16,0,123,28,27,12,43,50,5,0,52,3,0,52,75,47,72,7,5,3,0,63,76,85,98,3,0,79,34,69,110,66,5,3,0,85,58,0,28,34,42,14,0,37,49,14,0,41,51,14,0,37,65,59,9,0,46,14,0,14,99,5,0,52,3,0,43,30,14,103,5,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,44,60,32,0,9,24,15,56,5,3,0,28,46,3,0,57,65,3,0,48,103,3,0,39,38,41,51,80,49,89,74,15,3,0,1,0,19,14,2,21,16,2,28,29,37,31,48,32,49,59,56,0,104,110,39,58,60,7,5,0,55,40,55,41,3,0,25,33,74,67,55,58,48,53,102,77,3,0,31,50,18,5,0,34,34,16,57,3,0,18,36,19,5,0,39,47,35,30,36,0,36,25,0,60,14,7,0,48,62,5,0,17,3,0,37,31,33,5,0,57,3,0,44,36,34,13,0,30,29,19,5,0,24,24,27,73,0,27,49,0,21,43,0,22,44,0,27,51,0,22,34,64,63,64,11,9,0,66,0,24,39,43,0,21,43,0,25,47,0,25,47,0,24,46,0,22,44,0,24,22,40,0,40,76,9,0,50,0,24,46,0,23,45,0,24,33,0,22,46,0,25,25,9,61,0,69,18,11,0,71,72,11,0,22,21,0,44,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,89,13,0,24,69,11,9,5,0,39,40,0,90,72,12,55,5,3,0,33,70,38,55,37,5,3,0,24,87,0,28,35,59,75,5,3,0,29,36,3,0,32,101,0,34,46,47,5,0,36,25,26,7,0,106,66,7,49,76,5,3,0,20,62,34,16,0,39,41,40,43,15,0,35,38,34,14,43,0,37,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,33,46,25,78,44,53,5,0,16,3,0,46,40,16,0,34,24,12,42,23,5,0,44,83,3,0,38,40,10,0,52,39,0,63,72,41,7,5,0,41,67,5,3,0,32,16,21,54,3,0,27,30,39,30,15,3,0,26,16,38,81,28,30,45,25,53,3,0,27,16,38,21,0,63,40,5,0,34,30,0,33,25,33,7,0,39,5,0,31,0,70,36,52,18,38,51,0,97,52,7,0,25,33,7,0,39,5,0,55,65,0,59,30,92,62,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,78,48,3,0,30,80,57,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,30,40,34,12,0,54,66,47,52,43,28,20,0,21,44,16,27,81,11,0,28,26,9,0,33,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,84,66,5,0,43,21,51,3,0,27,16,35,24,0,35,38,18,0,37,34,47,58,58,73,34,14,28,38,7,0,89,24,60,5,0,73,0,43,54,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,84,28,51,3,0,28,28,54,5,0,16,47,83,50,3,0,29,16,51,3,0,57,103,44,0,37,69,7,5,0,95,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,30,0,32,36,5,0,85,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,30,40,39,35,0,30,68,58,7,0,55,0,77,53,35,0,80,40,31,9,0,17,7,0,32,22,5,0,53,61,40,51,7,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,28,71,28,75,30,82,22,28,49,3,0,35,42,16,0,18,49,12,32,5,0,190,91,51,60,5,0,21,76,30,82,22,28,80,3,0,31,48,54,21,0,14,36,34,0,31,49,14,86,30,30,11,117,110,9,0,25,7,0,69,40,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,55,77,5,0,42,0,22,48,5,0,72,44,44,46,29,29,37,65,0,23,39,5,0,35,43,104,7,26,22,0,45,45,5,0,66,38,38,16,3,0,30,79,3,0,45,52,35,30,81,46,42,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,34,87,3,0,21,86,3,0,19,36,3,0,34,123,3,0,53,28,19,27,6,24,39,24,30,43,41,35,38,79,11,0,19,9,0,35,49,19,9,0,40,0,32,41,65,26,9,0,80,0,97,64,9,7,7,0,21,32,5,0,16,0,28,67,5,0,27,51,3,0,51,47,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,29,30,5,0,17,3,0,70,49,0,75,13,5,0,98,3,0,92,32,33,30,31,32,38,29,0,31,29,42,0,46,75,15,7,0,54,74,7,0,79,13,5,0,47,52,49,47,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,61,9,0,36,51,7,0,100,40,22,62,14,54,7,94,47,0,34,49,7,0,29,42,54,0,46,81,14,56,72,9,0,87,7,144,29,48,0,46,76,14,56,75,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,34,53,0,103,52,5,0,70,65,5,0,15,3,0,38,98,63,5,0,55,3,0,45,64,54,30,94,3,0,94,127,3,0,67,63,106,30,233,79,3,0,47,0,25,21,3,0,35,48,32,69,21,26,22,57,3,0,28,31,43,5,0,48,32,0,31,43,18,43,12,24,5,0,21,26,22,50,3,0,73,33,39,0,24,70,7,12,39,23,14,55,7,5,3,0,25,83,3,0,21,67,67,66,82,94,49,0,35,40,39,59,5,0,69,0,129,48,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,35,61,41,63,5,0,46,3,0,23,32,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,34,49,94,18,54,83,18,5,0,17,3,0,41,35,49,60,25,30,18,5,0,17,3,0,37,46,39,43,0,59,49,9,7,0,27,25,59,18,5,0,17,3,0,21,50,39,114,3,0,34,34,43,0,49,18,0,20,20,7,0,82,42,47,38,105,67,7,0,34,47,84,74,12,42,23,17,5,3,0,32,37,3,0,30,33,72,5,0,38,19,5,0,39,89,3,0,33,37,45,29,12,19,26,14,27,7,5,0,21,3,0,34,31,64,0,41,75,74,16,22,9,7,5,0,207,3,0,52,21,22,52,61,101,50,73,0,43,93,57,11,9,36,110,41,56,52,69,127,59,50,11,9,7,5,0,101,0,42,136,0,42,72,7,0,44,5,3,0,26,37,50,47,99,43,36,7,46,93,41,0,19,38,9,7,48,40,45,43,51,39,5,3,0,37,60,112,5,0,46,3,0,27,21,21,30,0,37,18,22,14,33,42,7,0,36,46,99,59,5,0,17,3,0,21,25,0,36,69,61,76,71,36,5,0,43,21,54,3,0,23,53,32,3,0,34,34,3,0,72,45,81,59,3,0,42,46,115,18,5,0,17,3,0,39,33,41,18,34,112,18,5,0,17,3,0,36,21,30,0,37,18,22,14,36,76,9,0,33,42,7,0,38,5,3,0,30,39,52,0,35,47,12,83,53,5,0,81,72,3,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,116,42,0,20,55,55,9,14,68,7,5,3,0,46,38,54,0,52,71,0,21,63,66,63,66,67,62,30,56,7,5,0,20,61,5,0,38,50,3,0,29,19,0,82,36,52,5,0,21,54,12,66,5,3,0,1,0,38,31,34,26,48,27,57,72,54,67,52,43,3,0,21,24,3,0,11,27,0,59,32,5,0,36,37,34,37,21,23,38,36,16,3,0,1,0,30,30,0,47,31,74,65,3,0,19,1,0,32,56,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,36,19,0,35,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,52,36,38,5,0,32,3,0,13,1,0,22,42,25,33,0],"data":{"version":3,"file":"index.js","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/types.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/scopeflags.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/whitespace.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/location.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/base.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/comments.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/location.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/estree.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/context.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/babel-helper-validator-identifier/src/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/babel-helper-validator-identifier/src/keyword.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/flow.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/production-parameter.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/placeholders.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugin-utils.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/options.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/state.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/util.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/node.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/lval.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/expression.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/statement.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/class-scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  star: createBinop(\"*\", 10),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  options: Options;\n  inModule: boolean;\n  scope: ScopeHandler<*>;\n  classScope: ClassScopeHandler;\n  prodParam: ProductionParameterHandler;\n  plugins: PluginsMap;\n  filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  input: string;\n  length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        node.trailingComments = trailingComments;\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const Errors = Object.freeze({\n  ArgumentsDisallowedInInitializer:\n    \"'arguments' is not allowed in class field initializer\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction:\n    \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly one argument\",\n  ImportCallArityLtOne: \"Dynamic imports require a parameter: import('a.js')\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n\nexport default class LocationParser extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/location\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      const prop = ((method: any): N.EstreeProperty | N.EstreeMethodDefinition);\n      const paramCount = prop.kind === \"get\" ? 0 : 1;\n      const start = prop.start;\n      if (prop.value.params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      } else if (\n        prop.kind === \"set\" &&\n        prop.value.params[0].type === \"RestElement\"\n      ) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n      disallowLetBinding?: boolean,\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              bindingType,\n              checkClashes,\n              \"object destructuring pattern\",\n              disallowLetBinding,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(\n            expr,\n            bindingType,\n            checkClashes,\n            contextDescription,\n            disallowLetBinding,\n          );\n      }\n    }\n\n    checkDuplicatedProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if (\n        prop.type === \"SpreadElement\" ||\n        prop.computed ||\n        prop.method ||\n        // $FlowIgnore\n        prop.shorthand\n      ) {\n        return;\n      }\n\n      const key = prop.key;\n      // It is either an Identifier or a String/NumericLiteral\n      const name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n      if (name === \"__proto__\" && prop.kind === \"init\") {\n        // Store the first redefinition's position\n        if (protoRef.used) {\n          if (refExpressionErrors && refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          } else {\n            this.raise(key.start, Errors.DuplicateProto);\n          }\n        }\n\n        protoRef.used = true;\n      }\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        (!stmt.expression.extra || !stmt.expression.extra.parenthesized)\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      containsEsc: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, isLast: boolean) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        delete node.arguments;\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedListDeep(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): void {\n      // ImportExpressions do not have an arguments array.\n      if (!exprList) {\n        return;\n      }\n\n      super.toReferencedListDeep(exprList, isParenthesizedExpr);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\nimport { lineBreak } from \"../util/whitespace\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function(prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      (this.state.value === \"of\" && !this.state.exprAllowed) ||\n      (this.state.value === \"yield\" && this.prodParam.hasYield)\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function(prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function() {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function(prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function(prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(\n      prevType === tt._return &&\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return true;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/location\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in objec types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n        // We will parse a flow pragma in any comment before the first statement.\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n        return stmt;\n      }\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, noIn, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(noIn, undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssign();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr && expr.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          (!expr.extra || !expr.extra.parenthesized) &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n      containsEsc: boolean,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        refExpressionErrors,\n        containsEsc,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n\n      let specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      noIn?: ?boolean,\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              noIn,\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((jsx && jsx.error) || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(() => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () =>\n              super.parseMaybeAssign(\n                noIn,\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              ),\n          );\n          arrowExpression.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(arrowExpression, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        const arrowExpression: ?N.ArrowFunctionExpression =\n          arrow.node && arrow.node.type === \"ArrowFunctionExpression\"\n            ? arrow.node\n            : null;\n\n        if (!arrow.error && arrowExpression) return arrowExpression;\n\n        // If we are here, both JSX and Flow parsing attemps failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx && jsx.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx && jsx.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        noIn,\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadRelational(\"<\")) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/location\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function() {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function(prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/location\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  raise: raiseFunction;\n  inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b000, // Initial Parameter flags\n  PARAM_YIELD = 0b001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b010, // track [Await] production parameter\n  PARAM_RETURN = 0b100; // track [Return] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above. Note that the [In] parameter is\n// tracked in `noIn` argument of `parseExpression`.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = typeof PARAM | typeof PARAM_AWAIT | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/location\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  DeclareClassFieldHasInitializer:\n    \"'declare' class fields cannot have an initializer\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TemplateTypeHasSubstitution:\n    \"Template literal types cannot have any substitution\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        !this.hasPrecedingLineBreak() &&\n        !this.match(tt.parenL) &&\n        !this.match(tt.parenR) &&\n        !this.match(tt.colon) &&\n        !this.match(tt.eq) &&\n        !this.match(tt.question) &&\n        !this.match(tt.bang)\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure:\n      //   No mandatory elements may follow optional elements\n      //   If there's a rest element, it must be at the end of the tuple\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        if (elementNode.type === \"TSOptionalType\") {\n          seenOptionalElement = true;\n        } else if (seenOptionalElement && elementNode.type !== \"TSRestType\") {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType {\n      // parses `...TsType[]`\n      if (this.match(tt.ellipsis)) {\n        const restNode: N.TsRestType = this.startNode();\n        this.next(); // skips ellipsis\n        restNode.typeAnnotation = this.tsParseType();\n        if (\n          this.match(tt.comma) &&\n          this.lookaheadCharCode() !== charCodes.rightSquareBracket\n        ) {\n          this.raiseRestNotLast(this.state.start);\n        }\n        return this.finishNode(restNode, \"TSRestType\");\n      }\n\n      const type = this.tsParseType();\n      // parses `TsType?`\n      if (this.eat(tt.question)) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        return this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      const templateNode = this.parseTemplate(false);\n      if (templateNode.expressions.length > 0) {\n        this.raise(\n          templateNode.expressions[0].start,\n          TSErrors.TemplateTypeHasSubstitution,\n        );\n      }\n      node.literal = templateNode;\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            if (this.lookahead().type !== tt.num) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_TS_INTERFACE,\n        undefined,\n        \"typescript interface declaration\",\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsExpectThenParseType(tt.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssign();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n        undefined,\n        \"typescript enum declaration\",\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          BIND_TS_NAMESPACE,\n          null,\n          \"module or namespace declaration\",\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_LEXICAL,\n        undefined,\n        \"import equals declaration\",\n      );\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case tt._function:\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        case tt._class:\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to now how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        case tt._const:\n          if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n          }\n        // falls through\n        case tt._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n        case tt.name: {\n          const value = this.state.value;\n          if (value === \"global\") {\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          } else {\n            return this.tsParseDeclaration(nany, value, /* next */ true);\n          }\n        }\n      }\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              return this.parseTaggedTemplateExpression(\n                startPos,\n                startLoc,\n                base,\n                state,\n                typeArguments,\n              );\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n      noIn: ?boolean,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        } else {\n          node.importKind = \"value\";\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: { hadConstructor: boolean },\n      isStatic: boolean,\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member,\n        state,\n        isStatic,\n        constructorAllowsSuper,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          noIn,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, noIn, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (node.declare && this.match(tt.equal)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!(jsx && jsx.error) && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters && typeParameters.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx && jsx.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast && typeCast.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx && jsx.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast && typeCast.thrown) throw typeCast.error;\n\n      throw (jsx && jsx.error) || arrow.error || (typeCast && typeCast.error);\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node));\n        case \"TSParameterProperty\":\n          return super.toAssignable(node);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression);\n          return node;\n        default:\n          return super.toAssignable(node);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(\n            expr.parameter,\n            bindingType,\n            checkClashes,\n            \"parameter property\",\n          );\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(\n            expr.expression,\n            bindingType,\n            checkClashes,\n            contextDescription,\n          );\n          return;\n        default:\n          super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr && expr.type === \"TSTypeCastExpression\") {\n          this.raise(expr.start, TSErrors.UnexpectedTypeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const firstParam = method.params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers && specifiers.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  inParameters: boolean = false;\n  maybeInArrowParameters: boolean = false;\n  // This flag is used to track async arrow head across function declarations.\n  // e.g. async (foo = function (await) {}) => {}\n  // When parsing `await` in this expression, `maybeInAsyncArrowHead` is true\n  // but `maybeInArrowParameters` is false\n  maybeInAsyncArrowHead: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  yieldPos: number = -1;\n  awaitPos: number = -1;\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport LocationParser, { Errors } from \"../parser/location\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  type: TokenType;\n  value: any;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends LocationParser {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    const thisTokEnd = this.state.pos;\n    skipWhiteSpace.lastIndex = thisTokEnd;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return thisTokEnd + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      this.hasPlugin(\"recordAndTuple\") &&\n      (next === charCodes.leftCurlyBrace ||\n        next === charCodes.leftSquareBracket)\n    ) {\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else if (\n      this.hasPlugin(\"classPrivateProperties\") ||\n      this.hasPlugin(\"classPrivateMethods\") ||\n      this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\"\n    ) {\n      this.finishOp(tt.hash, 1);\n    } else {\n      throw this.raise(this.state.pos, Errors.InvalidOrUnexpectedToken, \"#\");\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 ||\n          lineBreak.test(\n            this.input.slice(this.state.lastTokEnd, this.state.pos),\n          ))\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark && !this.state.inType) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (this.hasPlugin(\"numericSeparator\")) {\n        if (code === charCodes.underscore) {\n          const prev = this.input.charCodeAt(this.state.pos - 1);\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          } else if (\n            forbiddenSiblings.indexOf(prev) > -1 ||\n            forbiddenSiblings.indexOf(next) > -1 ||\n            Number.isNaN(next)\n          ) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n          }\n\n          // Ignore this _ character\n          ++this.state.pos;\n          continue;\n        }\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n\n    if (this.input.charCodeAt(this.state.pos) === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isNonOctalDecimalInt = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    let octal =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n    if (octal) {\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      }\n      if (/[89]/.test(this.input.slice(start, this.state.pos))) {\n        octal = false;\n        isNonOctalDecimalInt = true;\n      }\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !octal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !octal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    // disallow numeric separators in non octal decimals and legacy octal likes\n    if (this.hasPlugin(\"numericSeparator\") && (octal || isNonOctalDecimalInt)) {\n      const underscorePos = this.input\n        .slice(start, this.state.pos)\n        .indexOf(\"_\");\n      if (underscorePos > 0) {\n        this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n      }\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || octal || isNonOctalDecimalInt) {\n        this.raise(start, \"Invalid BigIntLiteral\");\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and \"n\" for BigInts\n    const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    const val = octal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          // $FlowFixMe\n          let octalStr = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/)[0];\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictOctalLiteral);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return lineBreak.test(\n        this.input.slice(this.state.lastTokEnd, this.state.start),\n      );\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport * as charCodes from \"charcodes\";\nimport { Errors } from \"./location\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  isLookaheadRelational(op: \"<\" | \">\"): boolean {\n    const next = this.nextTokenStart();\n    if (this.input.charAt(next) === op) {\n      if (next + 1 === this.input.length) {\n        return true;\n      }\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== op.charCodeAt(0) && afterNext !== charCodes.equalsTo;\n    }\n    return false;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (\n      this.state.yieldPos !== -1 &&\n      (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)\n    ) {\n      this.raise(\n        this.state.yieldPos,\n        \"Yield cannot be used as name inside a generator function\",\n      );\n    }\n    if (this.state.awaitPos !== -1) {\n      this.raise(\n        this.state.awaitPos,\n        \"Await cannot be used as name inside an async function\",\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser && parser.options.ranges) this.range = [pos, 0];\n    if (parser && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./location\";\n\nconst unwrapParenthesizedExpression = (node: Node) => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssign: (\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObj: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n  // NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n  // When this one is updated, please check if also that one needs to be updated.\n\n  toAssignable(node: Node): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (\n        parenthesized.type !== \"Identifier\" &&\n        parenthesized.type !== \"MemberExpression\"\n      ) {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(((parenthesized: any): Expression));\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop: Node, isLast: boolean) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last && last.type === \"RestElement\") {\n        --end;\n      } else if (last && last.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr && expr.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(\n      false,\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObj(tt.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc || this.state.startLoc;\n    startPos = startPos || this.state.start;\n    left = left || this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  checkLVal(\n    expr: Expression,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?{ [key: string]: boolean },\n    contextDescription: string,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(expr.name, this.inModule)\n            : isStrictBindOnlyReservedWord(expr.name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            expr.name,\n          );\n        }\n\n        if (checkClashes) {\n          // we need to prefix this with an underscore for the cases where we have a key of\n          // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n          //\n          //   > var obj = Object.create(null);\n          //   undefined\n          //   > obj.__proto__\n          //   null\n          //   > obj.__proto__ = true;\n          //   true\n          //   > obj.__proto__\n          //   null\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            bindingType,\n            checkClashes,\n            \"object destructuring pattern\",\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              bindingType,\n              checkClashes,\n              \"array destructuring pattern\",\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          bindingType,\n          checkClashes,\n          \"assignment pattern\",\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          bindingType,\n          checkClashes,\n          \"rest element\",\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          bindingType,\n          checkClashes,\n          \"parenthesized expression\",\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./location\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // Check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  checkDuplicatedProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.computed ||\n      prop.kind ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n    if (name === \"__proto__\") {\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `noIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `noIn` is true, the production parameter [In] is not present.\n  //   Whenever [?In] appears in the right-hand sides of a production, we pass\n  //   `noIn` to the subroutine calls.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    noIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(noIn, refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(noIn, refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  parseMaybeAssign(\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield(noIn);\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      } else {\n        // The tokenizer will assume an expression is allowed after\n        // `yield`, but this isn't that kind of yield\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      noIn,\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (operator === \"??=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (operator === \"||=\" || operator === \"&&=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  parseMaybeConditional(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(noIn, refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    return this.parseConditional(\n      expr,\n      noIn,\n      startPos,\n      startLoc,\n      refNeedsArrowPos,\n    );\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    noIn: ?boolean,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n\n  parseExprOps(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (!noIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const operator = this.state.value;\n        if (operator === \"|>\" && this.state.inFSharpPipelineDirectBody) {\n          return left;\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = operator;\n        if (\n          operator === \"**\" &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const op = this.state.type;\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        } else if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec, noIn);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec, noIn),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec, noIn);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec, noIn);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n      noIn,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    } else if (this.state.type.prefix) {\n      const node = this.startNode();\n      const update = this.match(tt.incDec);\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (node.operator === \"throw\") {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (update) {\n        this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      } else if (this.state.strict && node.operator === \"delete\") {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          arg.type === \"MemberExpression\" &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      return this.finishNode(\n        node,\n        update ? \"UpdateExpression\" : \"UnaryExpression\",\n      );\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(\n        this.finishNode(node, \"BindExpression\"),\n        startPos,\n        startLoc,\n        noCalls,\n      );\n    }\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n    const computed = this.eat(tt.bracketL);\n    if (\n      (optional && !this.match(tt.parenL) && !this.match(tt.backQuote)) ||\n      computed ||\n      this.eat(tt.dot)\n    ) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed\n        ? this.parseExpression()\n        : optional\n        ? this.parseIdentifier(true)\n        : this.parseMaybePrivateName(true);\n      node.computed = computed;\n\n      if (node.property.type === \"PrivateName\") {\n        if (node.object.type === \"Super\") {\n          this.raise(startPos, Errors.SuperPrivateField);\n        }\n        this.classScope.usePrivateName(\n          node.property.id.name,\n          node.property.start,\n        );\n      }\n\n      if (computed) {\n        this.expect(tt.bracketR);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    } else if (!noCalls && this.match(tt.parenL)) {\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      this.next();\n\n      let node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (optional) {\n        node.optional = true;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(\n          tt.parenR,\n          state.maybeAsyncArrow,\n          base.type === \"Import\",\n          base.type !== \"Super\",\n          node,\n        );\n      }\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n\n        node = this.parseAsyncArrowFromCallExpression(\n          this.startNodeAt(startPos, startLoc),\n          node,\n        );\n        this.checkYieldAwaitInDefaultParams();\n        this.state.yieldPos = oldYieldPos;\n        this.state.awaitPos = oldAwaitPos;\n      } else {\n        this.toReferencedListDeep(node.arguments);\n\n        // We keep the old value if it isn't null, for cases like\n        //   (x = async(yield)) => {}\n        //\n        // Hi developer of the future :) If you are implementing generator\n        // arrow functions, please read the note below about \"await\" and\n        // verify if the same logic is needed for yield.\n        if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n        // Await is trickier than yield. When parsing a possible arrow function\n        // (e.g. something starting with `async(`) we don't know if its possible\n        // parameters will actually be inside an async arrow function or if it is\n        // a normal call expression.\n        // If it ended up being a call expression, if we are in a context where\n        // await expression are disallowed (and thus \"await\" is an identifier)\n        // we must be careful not to leak this.state.awaitPos to an even outer\n        // context, where \"await\" could not be an identifier.\n        // For example, this code is valid because \"await\" isn't directly inside\n        // an async function:\n        //\n        //     async function a() {\n        //       function b(param = async (await)) {\n        //       }\n        //     }\n        //\n        if (\n          (!this.isAwaitAllowed() && !oldMaybeInArrowParameters) ||\n          oldAwaitPos !== -1\n        ) {\n          this.state.awaitPos = oldAwaitPos;\n        }\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      return node;\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        startPos,\n        startLoc,\n        base,\n        state,\n      );\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseTaggedTemplateExpression(\n    startPos: number,\n    startLoc: Position,\n    base: N.Expression,\n    state: N.ParseSubscriptState,\n    typeArguments?: ?N.TsTypeParameterInstantiation,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (typeArguments) node.typeParameters = typeArguments;\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length !== 1) {\n        this.raise(node.start, Errors.ImportCallArity);\n      } else {\n        const importArg = node.arguments[0];\n        if (importArg && importArg.type === \"SpreadElement\") {\n          this.raise(importArg.start, Errors.ImportCallSpreadArgument);\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (dynamicImport) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      // we need to make sure that if this is an async arrow functions,\n      // that we don't allow inner parens inside the params\n      if (this.match(tt.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    // we found an async arrow function so let's not allow any inner parens\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        node = this.startNode();\n        this.next();\n        if (\n          this.match(tt.parenL) &&\n          !this.scope.allowDirectSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.SuperNotAllowed);\n        } else if (\n          !this.scope.allowSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.UnexpectedSuper);\n        }\n\n        if (\n          !this.match(tt.parenL) &&\n          !this.match(tt.bracketL) &&\n          !this.match(tt.dot)\n        ) {\n          this.raise(node.start, Errors.UnsupportedSuper);\n        }\n\n        return this.finishNode(node, \"Super\");\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        node = this.startNode();\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt._function) &&\n          !this.canInsertSemicolon()\n        ) {\n          const last = this.state.context.length - 1;\n          if (this.state.context[last] !== ct.functionStatement) {\n            // Since \"async\" is an identifier and normally identifiers\n            // can't be followed by expression, the tokenizer assumes\n            // that \"function\" starts a statement.\n            // Fixing it in the tokenizer would mean tracking not only the\n            // previous token (\"async\"), but also the one before to know\n            // its beforeExpr value.\n            // It's easier and more efficient to adjust the context here.\n            throw new Error(\"Internal error\");\n          }\n          this.state.context[last] = ct.functionExpression;\n\n          this.next();\n          return this.parseFunction(node, undefined, true);\n        } else if (\n          canBeArrow &&\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt.name) &&\n          !this.canInsertSemicolon()\n        ) {\n          const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n          const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n          const oldYieldPos = this.state.yieldPos;\n          const oldAwaitPos = this.state.awaitPos;\n          this.state.maybeInArrowParameters = true;\n          this.state.maybeInAsyncArrowHead = true;\n          this.state.yieldPos = -1;\n          this.state.awaitPos = -1;\n          const params = [this.parseIdentifier()];\n          this.expect(tt.arrow);\n          this.checkYieldAwaitInDefaultParams();\n          this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n          this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n          this.state.yieldPos = oldYieldPos;\n          this.state.awaitPos = oldAwaitPos;\n          // let foo = async bar => {};\n          this.parseArrowExpression(node, params, true);\n          return node;\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          this.parseArrowExpression(node, [id], false);\n          return node;\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        this.expectPlugin(\"doExpressions\");\n        const node = this.startNode();\n        this.next();\n        const oldLabels = this.state.labels;\n        this.state.labels = [];\n        node.body = this.parseBlock();\n        this.state.labels = oldLabels;\n        return this.finishNode(node, \"DoExpression\");\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          close,\n          true,\n          refExpressionErrors,\n          node,\n        );\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"TupleExpression\");\n      }\n      case tt.bracketL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          tt.bracketR,\n          true,\n          refExpressionErrors,\n          node,\n        );\n        if (!this.state.maybeInArrowParameters) {\n          // This could be an array pattern:\n          //   ([a: string, b: string]) => {}\n          // In this case, we don't have to call toReferencedList. We will\n          // call it, if needed, when we are sure that it is a parenthesized\n          // expression by calling toReferencedListDeep.\n          this.toReferencedList(node.elements);\n        }\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"ArrayExpression\");\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(close, false, true, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt.braceL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(tt.braceR, false, false, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt._function:\n        return this.parseFunctionExpression();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNew();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionExpression(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionExpression\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"function\");\n\n    if (this.prodParam.hasYield && this.eat(tt.dot)) {\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.expect(tt.dot);\n\n    if (this.isContextual(\"meta\")) {\n      this.expectPlugin(\"importMeta\");\n\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    } else if (!this.hasPlugin(\"importMeta\")) {\n      this.raise(id.start, Errors.ImportCallArityLtOne);\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.expect(tt.parenL);\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssign(\n            false,\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.start;\n    const innerEndLoc = this.state.startLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n      for (const param of exprList) {\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    // We keep the old value if it isn't null, for cases like\n    //   (x = (yield)) => {}\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  parseNew(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"new\");\n\n    if (this.eat(tt.dot)) {\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObj<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parseObjectMember(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkDuplicatedProto(prop, propHash, refExpressionErrors);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  isAsyncProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      prop.key.name === \"async\" &&\n      (this.match(tt.name) ||\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bracketL) ||\n        this.state.type.keyword ||\n        this.match(tt.star)) &&\n      !this.hasPrecedingLineBreak()\n    );\n  }\n\n  parseObjectMember(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (!isPattern && !containsEsc && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.eat(tt.star);\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n    } else {\n      isAsync = false;\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      refExpressionErrors,\n      containsEsc,\n    );\n\n    return prop;\n  }\n\n  isGetterOrSetterMethod(prop: N.ObjectMethod, isPattern: boolean): boolean {\n    return (\n      !isPattern &&\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n      (this.match(tt.string) || // get \"string\"() {}\n      this.match(tt.num) || // get 1() {}\n      this.match(tt.bracketL) || // get [\"string\"]() {}\n      this.match(tt.name) || // get foo() {}\n        !!this.state.type.keyword) // get debugger() {}\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const start = method.start;\n    if (method.params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      method.params[method.params.length - 1].type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    containsEsc: boolean,\n  ): ?N.ObjectMethod {\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n\n    if (!containsEsc && this.isGetterOrSetterMethod(prop, isPattern)) {\n      if (isGenerator || isAsync) this.unexpected();\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      this.parseMethod(\n        prop,\n        /* isGenerator */ false,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n  }\n\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssign(false, refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    containsEsc: boolean,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) || this.match(tt.string) || this.match(tt.bigint)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    this.prodParam.enter(functionFlags(isAsync, false));\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              BIND_OUTSIDE,\n              undefined,\n              \"function name\",\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    // $FlowIssue\n    const nameHash: {} = Object.create(null);\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(\n        node.params[i],\n        BIND_VAR,\n        allowDuplicates ? null : nameHash,\n        \"function parameter list\",\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (allowEmpty && this.match(tt.comma)) {\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssign(\n        false,\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    if (this.match(tt.name)) {\n      name = this.state.value;\n    } else if (this.state.type.keyword) {\n      name = this.state.type.keyword;\n\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the\n      // context-managing code already ignored the keyword\n      if (\n        (name === \"class\" || name === \"function\") &&\n        (this.state.lastTokEnd !== this.state.lastTokStart + 1 ||\n          this.input.charCodeAt(this.state.lastTokStart) !== charCodes.dot)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(\n        name,\n        this.state.start,\n        !!this.state.type.keyword,\n        false,\n      );\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      }\n      if (\n        this.state.awaitPos === -1 &&\n        (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())\n      ) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsDisallowedInInitializer);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, Errors.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(noIn?: ?boolean): N.YieldExpression {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const pipelineStyle = this.checkSmartPipelineBodyStyle(childExpression);\n\n    this.checkSmartPipelineBodyEarlyErrors(\n      childExpression,\n      pipelineStyle,\n      startPos,\n    );\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      pipelineStyle,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (\n      pipelineStyle === \"PipelineTopicExpression\" &&\n      childExpression.type === \"SequenceExpression\"\n    ) {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    switch (pipelineStyle) {\n      case \"PipelineBareFunction\":\n        bodyNode.callee = childExpression;\n        break;\n      case \"PipelineBareConstructor\":\n        bodyNode.callee = childExpression.callee;\n        break;\n      case \"PipelineBareAwaitedFunction\":\n        bodyNode.callee = childExpression.argument;\n        break;\n      case \"PipelineTopicExpression\":\n        if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n          this.raise(startPos, Errors.PipelineTopicUnused);\n        }\n        bodyNode.expression = childExpression;\n        break;\n      default:\n        throw new Error(\n          `Internal @babel/parser error: Unknown pipeline style (${pipelineStyle})`,\n        );\n    }\n    return this.finishNode(bodyNode, pipelineStyle);\n  }\n\n  checkSmartPipelineBodyStyle(expression: N.Expression): N.PipelineStyle {\n    switch (expression.type) {\n      default:\n        return this.isSimpleReference(expression)\n          ? \"PipelineBareFunction\"\n          : \"PipelineTopicExpression\";\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number, noIn: ?boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n      noIn,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./location\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._export:\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis ||\n          nextTokenCharCode === charCodes.dot\n        ) {\n          break;\n        }\n\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next();\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseBindingAtom();\n        const simple = clause.param.type === \"Identifier\";\n        this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, BIND_LEXICAL, null, \"catch clause\");\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the function body. They are permitted in function\n        // default-parameter expressions, which are part of the outer context,\n        // outside of the function body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the function body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the function body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.unexpected();\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      \"variable declaration\",\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in test\n    // expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n\n    this.expect(tt.parenL);\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    this.state.strict = oldStrict;\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict?: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state = { hadConstructor: false };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body. They are permitted in test expressions,\n    // outside of the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    if (!oldStrict) {\n      this.state.strict = false;\n    }\n\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    } else if (containsEsc) {\n      throw this.unexpected();\n    }\n\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    constructorAllowsSuper: boolean,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic && this.parseClassMemberFromModifier(classBody, member)) {\n      // a class element named 'static'\n      return;\n    }\n\n    this.parseClassMemberWithIsStatic(\n      classBody,\n      member,\n      state,\n      isStatic,\n      constructorAllowsSuper,\n    );\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    isStatic: boolean,\n    constructorAllowsSuper: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassPropertyName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassPropertyName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassPropertyName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassPropertyName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassPropertyName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // Overridden in typescript.js\n  parseAccessModifier(): ?N.Accessibility {\n    return undefined;\n  }\n\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssign() : null;\n    this.semicolon();\n    this.prodParam.exit();\n\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    if (this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssign();\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      if (this.isContextual(\"async\")) {\n        const next = this.nextTokenStart();\n\n        // export async;\n        if (!this.isUnparsedContextual(next, \"function\")) {\n          this.unexpected(next, tt._function);\n        }\n      }\n\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssign();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      return this.state.value !== \"async\" && this.state.value !== \"let\";\n    }\n\n    if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    return (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      this.isUnparsedContextual(next, \"from\")\n    );\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          this.checkDuplicateExports(specifier, specifier.exported.name);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            // check for keywords used as local names\n            this.checkReservedWord(\n              specifier.local.name,\n              specifier.local.start,\n              true,\n              false,\n            );\n            // check if export is defined\n            // $FlowIgnore\n            this.scope.checkLocalExport(specifier.local);\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (currentContextDecorators.length) {\n      const isClass =\n        node.declaration &&\n        (node.declaration.type === \"ClassDeclaration\" ||\n          node.declaration.type === \"ClassExpression\");\n      if (!node.declaration || !isClass) {\n        throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n      }\n      this.takeDecorators(node.declaration);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseIdentifier(true);\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseIdentifier(true)\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // Parses import declaration.\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      contextDescription,\n    );\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseIdentifier(true);\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      this.checkReservedWord(\n        specifier.imported.name,\n        specifier.start,\n        true,\n        true,\n      );\n      specifier.local = specifier.imported.__clone();\n    }\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      \"import specifier\",\n    );\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/location\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options && options.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_SCOPE_OUTSIDE","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","stack","length","CommentsParser","addComment","comment","filename","loc","state","trailingComments","push","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","slice","innerComments","Errors","Object","freeze","ArgumentsDisallowedInInitializer","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallArityLtOne","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidCodePoint","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","LocationParser","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","data","message","replace","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","value","bigInt","BigInt","String","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","initFunction","isAsync","checkDeclaration","checkGetterSetterParams","prop","paramCount","checkLVal","expr","bindingType","checkClashes","contextDescription","disallowLetBinding","forEach","checkDuplicatedProto","protoRef","refExpressionErrors","computed","shorthand","key","used","doubleProto","isValidDirective","parenthesized","stmtToDirective","parseBlockBody","allowDirectives","topLevel","directiveStatements","directives","map","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","tt","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","parseObjectMethod","isPattern","containsEsc","parseObjectProperty","toAssignable","toAssignableObjectExpressionProp","isLast","finishCallExpression","optional","callee","toReferencedListDeep","exprList","isParenthesizedExpr","parseExport","exported","specifiers","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","prodParam","hasYield","isIterator","braceIsBlock","statementParens","test","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","finishToken","val","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","scope","declareName","enter","bodyNode","parseImport","exit","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","noIn","refNeedsArrowPos","result","tryParse","error","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","indexOf","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","constructorAllowsSuper","parseClassMemberFromModifier","getTokenFromCode","charCodeAt","finishOp","readWord","isBinding","element","operator","trailingCommaPos","toReferencedList","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","arrowExpression","resetStartLocationFromNode","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","base","noCalls","parseCallExpressionArguments","abort","parseAsyncArrowWithTypeParameters","aborted","parseSubscript","subscriptState","isLookaheadRelational","optionalChainMember","stop","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","str","count","entity","substr","fromCodePoint","parseInt","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasReturn","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","DeclareClassFieldHasInitializer","DuplicateModifier","EmptyHeritageClauseType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TemplateTypeHasSubstitution","TypeAnnotationAfterAssign","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","getScopeHandler","tsIsIdentifier","tsNextTokenCanFollowModifier","hasPrecedingLineBreak","tsParseModifier","allowedModifiers","modifier","tsTryParse","bind","tsParseModifiers","modified","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","startNodeAtNode","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","restNode","tsParseType","lookaheadCharCode","raiseRestNotLast","optionalTypeNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","tsParseLiteralTypeNode","tsParseTemplateLiteralType","templateNode","parseTemplate","expressions","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tokenType","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsIsDeclarationStart","parseAssignableListItem","decorators","accessibility","parseAccessModifier","elt","pp","parameter","bodilessType","registerFunctionStatementId","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","args","parseExprOp","leftStartPos","leftStartLoc","minPrec","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","parseClassMemberWithIsStatic","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","equal","typeCast","ct","parseBindingAtom","parseMaybeDecoratorArguments","isInParens","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","parseClassBody","expectPlugin","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","Array","isArray","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","join","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","pushToken","checkKeywordEscapes","old","curr","nextTokenStart","thisTokEnd","skip","setStrict","lastIndexOf","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_lt_gt","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","escaped","charAt","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isNonOctalDecimalInt","octal","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","n","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","UtilParser","addExtra","op","afterNext","isUnparsedContextual","nameStart","nameEnd","messageOrType","missingPlugin","expectOnePlugin","names","checkYieldAwaitInDefaultParams","fn","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","ExpressionErrors","Node","parser","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","checkToRestConversion","arg","raiseTrailingCommaAfterRest","parseSpread","parseRestBinding","parseObj","close","closeCharCode","allowEmpty","elts","first","checkCommaAfterRest","parseDecorator","strictModeChanged","elem","ExpressionParser","getExpression","paramFlags","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","logical","coalesce","checkPipelineAtInfixOperator","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","parseExprSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseNoCallExpr","parseMaybePrivateName","classScope","usePrivateName","tag","quasi","importArg","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","parseExprListItem","parseImportMetaProperty","parseFunction","oldLabels","parseExprList","ret","parseFunctionExpression","parseDecorators","parseNew","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenStart","metaProp","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","isRecord","propHash","create","parseObjectMember","isAsyncProp","isGetterOrSetterMethod","oldInPropertyName","generator","async","isExpression","oldInParameters","oldStrict","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","identifierName","reservedTest","delegate","childExpression","pipelineStyle","checkSmartPipelineBodyStyle","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","topicReferenceWasUsedInCurrentTopicContext","isSimpleReference","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","StatementParser","interpreter","parseInterpreterDirective","from","nextCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","handler","clause","simple","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassPropertyName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","declarePrivateName","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","checkNames","isDefault","isFrom","nodes","parseNext","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/visitor.js":{"lineLengths":[13,0,46,13,3,25,0,15,22,36,24,3,0,18,26,3,0,16,13,48,3,0,20,19,73,3,0,15,13,47,3,0,1,0,26,35],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/visitor.js"],"names":["Visitor","constructor","babel","_babel","nodeType","onBeforeNode","onIdentifierNode","onAfterNode"],"mappings":";;;;;;;AAAA,MAAMA,OAAN,CAAc;AAEZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAED,MAAIE,QAAJ,GAAe;AACb,WAAO,CAAE,YAAF,CAAP;AACD;;AAEDC,EAAAA,YAAY;AAAE;AAAc,GAC1B;AACD;;AAEDC,EAAAA,gBAAgB;AAAE;AAAoB,GACpC;AACD;;AAEDC,EAAAA,WAAW;AAAE;AAAc,GACzB;AACD;;AArBW","sourcesContent":["class Visitor {\n\n  constructor(babel) {\n    // console.log('Visitor(babel)')\n    this._babel = babel\n  }\n\n  get nodeType() {\n    return [ 'Identifier' ]\n  }\n  \n  onBeforeNode( /* state */ ) {\n    // console.log('Visitor.onBeforeNode(state)')\n  }\n\n  onIdentifierNode( /* path, state */ ) {\n    // console.log(`Visitor.onIdentifierNode('${path.node.name}', state)`)\n  }\n  \n  onAfterNode( /* state */ ) {\n    // console.log('Visitor.onAfterNode(state)')\n  }\n\n}\n\nexport { Visitor }"],"file":"visitor.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-invalid-import-type-error.js":{"lineLengths":[13,0,46,13,3,54,0,65,0,93,21,44,3,0,1,0,84,69],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/error/replace-visitor-invalid-import-type-error.js"],"names":["ReplaceVisitorInvalidImportTypeError","ReplaceVisitorError","constructor","type"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,oCAAN,SAAmDC,wCAAnD,CAAuE;AAErEC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAO,wBAAuBA,IAAK,IAAnC;AACD;;AAJoE","sourcesContent":["import { ReplaceVisitorError } from './replace-visitor-error.js'\n\nclass ReplaceVisitorInvalidImportTypeError extends ReplaceVisitorError {\n\n  constructor(type) {\n    super(`Invalid import type '${type}'.`)\n  }\n\n}\n\nexport { ReplaceVisitorInvalidImportTypeError }\n"],"file":"replace-visitor-invalid-import-type-error.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-error.js":{"lineLengths":[13,0,46,13,3,37,0,60,0,62,24,19,3,0,1,0,50,49],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/error/replace-visitor-error.js"],"names":["ReplaceVisitorError","VisitorError","constructor","message"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,mBAAN,SAAkCC,0BAAlC,CAA+C;AAE7CC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACD;;AAJ4C","sourcesContent":["import { VisitorError } from '../../error/visitor-error.js'\n\nclass ReplaceVisitorError extends VisitorError {\n\n  constructor(message) {\n    super(message)\n  }\n\n}\n\nexport { ReplaceVisitorError }\n"],"file":"replace-visitor-error.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/error/visitor-error.js":{"lineLengths":[13,0,46,13,3,30,0,34,24,19,3,0,1,0,36,41],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/error/visitor-error.js"],"names":["VisitorError","Error","constructor","message"],"mappings":";;;;;;;AAAA,MAAMA,YAAN,SAA2BC,KAA3B,CAAiC;AAE/BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACD;;AAJ8B","sourcesContent":["class VisitorError extends Error {\n\n  constructor(message) {\n    super(message)\n  }\n\n}\n\nexport { VisitorError }\n"],"file":"visitor-error.js","sourceRoot":""},"url":null}}}