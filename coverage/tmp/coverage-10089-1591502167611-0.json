{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"uncurryThis","ranges":[{"startOffset":1000,"endOffset":1096,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1093,"count":4650}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10110,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3556,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"_linkedBinding","ranges":[{"startOffset":3983,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4371,"endOffset":4618,"count":614},{"startOffset":4473,"endOffset":4598,"count":42}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4763,"endOffset":4917,"count":2325},{"startOffset":4899,"endOffset":4914,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5284,"endOffset":5355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5319,"endOffset":5353,"count":221}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5360,"endOffset":6096,"count":221}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6246,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6483,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6547,"endOffset":6663,"count":1382},{"startOffset":6631,"endOffset":6658,"count":62}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6735,"endOffset":7413,"count":62},{"startOffset":6798,"endOffset":6990,"count":0},{"startOffset":7054,"endOffset":7335,"count":15},{"startOffset":7297,"endOffset":7301,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7417,"endOffset":7968,"count":62},{"startOffset":7455,"endOffset":7474,"count":47},{"startOffset":7474,"endOffset":7967,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7695,"endOffset":7808,"count":15}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8264,"endOffset":8608,"count":77},{"startOffset":8383,"endOffset":8598,"count":2325},{"startOffset":8460,"endOffset":8469,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8612,"endOffset":9166,"count":571},{"startOffset":8661,"endOffset":8676,"count":114},{"startOffset":8678,"endOffset":8712,"count":461},{"startOffset":8712,"endOffset":8835,"count":110},{"startOffset":8835,"endOffset":8870,"count":0},{"startOffset":8871,"endOffset":8892,"count":110},{"startOffset":9046,"endOffset":9165,"count":110}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9364,"endOffset":9735,"count":515},{"startOffset":9422,"endOffset":9453,"count":6},{"startOffset":9453,"endOffset":9637,"count":509},{"startOffset":9637,"endOffset":9692,"count":0},{"startOffset":9692,"endOffset":9734,"count":509}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":9851,"endOffset":10023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12521,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3322,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6083,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6347,"endOffset":6519,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9306,"endOffset":9892,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":9894,"endOffset":10481,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10483,"endOffset":10660,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10662,"endOffset":11098,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11100,"endOffset":11781,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":11833,"endOffset":12031,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12083,"endOffset":12281,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12341,"endOffset":12520,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52962,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1407,"endOffset":2119,"count":25},{"startOffset":1584,"endOffset":1700,"count":0},{"startOffset":1849,"endOffset":2118,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":2161,"endOffset":2867,"count":25},{"startOffset":2495,"endOffset":2866,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":2957,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":3117,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":3293,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":3904,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6446,"endOffset":6521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":6718,"endOffset":6863,"count":3}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6809,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6865,"endOffset":7620,"count":231}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6953,"endOffset":7534,"count":25},{"startOffset":7043,"endOffset":7252,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7540,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7692,"endOffset":8103,"count":25}],"isBlockCoverage":true},{"functionName":"hidden","ranges":[{"startOffset":7732,"endOffset":8100,"count":5578},{"startOffset":7896,"endOffset":7960,"count":4012},{"startOffset":8044,"endOffset":8090,"count":4012}],"isBlockCoverage":true},{"functionName":"addCodeToName","ranges":[{"startOffset":8105,"endOffset":8775,"count":25},{"startOffset":8203,"endOffset":8312,"count":0},{"startOffset":8597,"endOffset":8741,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":8887,"endOffset":9395,"count":231},{"startOffset":9129,"endOffset":9174,"count":3},{"startOffset":9174,"endOffset":9228,"count":228},{"startOffset":9263,"endOffset":9373,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9290,"endOffset":9367,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":9397,"endOffset":10201,"count":25},{"startOffset":9498,"endOffset":9534,"count":1},{"startOffset":9825,"endOffset":9883,"count":0},{"startOffset":10105,"endOffset":10200,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":10219,"endOffset":10323,"count":0}],"isBlockCoverage":false},{"functionName":"uvErrmapGet","ranges":[{"startOffset":10380,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"uvException","ranges":[{"startOffset":10843,"endOffset":12093,"count":0}],"isBlockCoverage":false},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":12406,"endOffset":13365,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":13544,"endOffset":14303,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":14656,"endOffset":15926,"count":0}],"isBlockCoverage":false},{"functionName":"dnsException","ranges":[{"startOffset":16090,"endOffset":17659,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":17661,"endOffset":17816,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":18106,"endOffset":18484,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":18565,"endOffset":18801,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":19080,"endOffset":19471,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":19475,"endOffset":19940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21707,"endOffset":21871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24840,"endOffset":24955,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25165,"endOffset":25259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27484,"endOffset":27712,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29445,"endOffset":29663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31205,"endOffset":31505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31547,"endOffset":31691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31734,"endOffset":34939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34980,"endOffset":35236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35628,"endOffset":35791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36453,"endOffset":36957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36998,"endOffset":37079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37242,"endOffset":37437,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37481,"endOffset":38864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39242,"endOffset":39406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39459,"endOffset":39790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39834,"endOffset":40141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40511,"endOffset":40586,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40630,"endOffset":40918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41246,"endOffset":41677,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42327,"endOffset":42850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43115,"endOffset":43216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43918,"endOffset":44616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44666,"endOffset":45066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45099,"endOffset":45999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46451,"endOffset":46710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48060,"endOffset":48229,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50127,"endOffset":50258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52019,"endOffset":52117,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52311,"endOffset":52567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12301,"count":1}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":975,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1046,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":1581,"endOffset":2678,"count":30},{"startOffset":1655,"endOffset":1675,"count":0},{"startOffset":1735,"endOffset":1790,"count":0},{"startOffset":2432,"endOffset":2654,"count":28}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":1816,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":2680,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3021,"endOffset":3095,"count":1},{"startOffset":3067,"endOffset":3093,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":3274,"endOffset":3405,"count":490},{"startOffset":3344,"endOffset":3362,"count":0},{"startOffset":3378,"endOffset":3404,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":3407,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":4989,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":5279,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":5589,"endOffset":5732,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5640,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":5997,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":6391,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":6671,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":6980,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7328,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":7602,"endOffset":9073,"count":4},{"startOffset":7675,"endOffset":7740,"count":0},{"startOffset":7784,"endOffset":8105,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":8305,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":9168,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":9631,"endOffset":9758,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9840,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":11014,"endOffset":11172,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":11195,"endOffset":11410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21414,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1823,"endOffset":1892,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2203,"endOffset":2259,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2263,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3050,"endOffset":3200,"count":14},{"startOffset":3123,"endOffset":3198,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3289,"endOffset":3337,"count":6}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3346,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":3647,"endOffset":4377,"count":7},{"startOffset":3698,"endOffset":3758,"count":2},{"startOffset":3760,"endOffset":3831,"count":5},{"startOffset":3902,"endOffset":3927,"count":4},{"startOffset":3929,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":4380,"endOffset":4939,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":4941,"endOffset":5599,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":5770,"endOffset":5969,"count":1},{"startOffset":5856,"endOffset":5926,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":5972,"endOffset":6121,"count":3},{"startOffset":6090,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":6164,"endOffset":6227,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":6355,"endOffset":6931,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":6933,"endOffset":7539,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7571,"endOffset":9917,"count":14},{"startOffset":7716,"endOffset":7754,"count":0},{"startOffset":7762,"endOffset":7796,"count":0},{"startOffset":7820,"endOffset":7849,"count":0},{"startOffset":7855,"endOffset":7892,"count":0},{"startOffset":7964,"endOffset":8954,"count":0},{"startOffset":9022,"endOffset":9035,"count":1},{"startOffset":9035,"endOffset":9074,"count":13},{"startOffset":9074,"endOffset":9363,"count":5},{"startOffset":9290,"endOffset":9308,"count":0},{"startOffset":9310,"endOffset":9359,"count":0},{"startOffset":9363,"endOffset":9899,"count":8},{"startOffset":9485,"endOffset":9895,"count":16},{"startOffset":9816,"endOffset":9834,"count":0},{"startOffset":9836,"endOffset":9889,"count":0},{"startOffset":9899,"endOffset":9916,"count":13}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":9920,"endOffset":11975,"count":13},{"startOffset":10100,"endOffset":10184,"count":0},{"startOffset":10369,"endOffset":10649,"count":10},{"startOffset":10446,"endOffset":10465,"count":0},{"startOffset":10714,"endOffset":10852,"count":10},{"startOffset":10852,"endOffset":11955,"count":3},{"startOffset":11011,"endOffset":11033,"count":0},{"startOffset":11116,"endOffset":11220,"count":0},{"startOffset":11324,"endOffset":11343,"count":0},{"startOffset":11345,"endOffset":11951,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":12014,"endOffset":12106,"count":13}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":12219,"endOffset":12322,"count":0}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":12325,"endOffset":12589,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":12591,"endOffset":12832,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12864,"endOffset":12990,"count":0}],"isBlockCoverage":false},{"functionName":"prependOnceListener","ranges":[{"startOffset":13042,"endOffset":13212,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":13334,"endOffset":14726,"count":1},{"startOffset":13512,"endOffset":13524,"count":0},{"startOffset":13597,"endOffset":13609,"count":0},{"startOffset":13639,"endOffset":13668,"count":0},{"startOffset":13721,"endOffset":13755,"count":0},{"startOffset":13930,"endOffset":14700,"count":0}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":14846,"endOffset":16172,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":16175,"endOffset":16589,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":16626,"endOffset":16693,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":16734,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":16837,"endOffset":17005,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":17062,"endOffset":17352,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":17390,"endOffset":17483,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":17486,"endOffset":17613,"count":8},{"startOffset":17579,"endOffset":17596,"count":16}],"isBlockCoverage":true},{"functionName":"unwrapListeners","ranges":[{"startOffset":17615,"endOffset":17784,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":17786,"endOffset":18950,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19028,"endOffset":19049,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":19064,"endOffset":19132,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19134,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68381,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2592,"endOffset":2628,"count":60}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":2719,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":5748,"endOffset":6183,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":6478,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8487,"endOffset":8532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8536,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":10480,"endOffset":10722,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10575,"endOffset":10615,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10621,"endOffset":10667,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":11732,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":11909,"endOffset":11941,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":12054,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":13682,"endOffset":13917,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":13919,"endOffset":13965,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":14044,"endOffset":14091,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":14093,"endOffset":15306,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":15493,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":17332,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":17736,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":18680,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":18945,"endOffset":19394,"count":0}],"isBlockCoverage":false},{"functionName":"findTypedConstructor","ranges":[{"startOffset":19396,"endOffset":19919,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":20101,"endOffset":22507,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":22509,"endOffset":32865,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":32867,"endOffset":33049,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":33051,"endOffset":34225,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":34227,"endOffset":34823,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":34825,"endOffset":37946,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":37948,"endOffset":42199,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":42201,"endOffset":42553,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":42555,"endOffset":42732,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":42734,"endOffset":42806,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":42808,"endOffset":43991,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":43993,"endOffset":45141,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":45188,"endOffset":46395,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":46397,"endOffset":46997,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":46999,"endOffset":47593,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":47595,"endOffset":48611,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":48613,"endOffset":48845,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":48847,"endOffset":49145,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":49147,"endOffset":49960,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":49962,"endOffset":51284,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":51286,"endOffset":51378,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":51380,"endOffset":51537,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":51539,"endOffset":51696,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":51698,"endOffset":52089,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":52091,"endOffset":52556,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":52558,"endOffset":54824,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":54826,"endOffset":55768,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":55770,"endOffset":58520,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":58522,"endOffset":59541,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":59566,"endOffset":59605,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":59635,"endOffset":60104,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":60106,"endOffset":60190,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":60192,"endOffset":60470,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":60472,"endOffset":64166,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStringForGetStringWidth","ranges":[{"startOffset":64168,"endOffset":64347,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":64776,"endOffset":65306,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":65421,"endOffset":65797,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":65965,"endOffset":67573,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":67607,"endOffset":68081,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":68171,"endOffset":68245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1893,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":496,"endOffset":590,"count":1073}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":592,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":702,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":800,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":898,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":992,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":1088,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1184,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1284,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1384,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1486,"endOffset":1588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":502},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35605,"count":1}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":3918,"endOffset":4054,"count":134}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4056,"endOffset":4258,"count":53}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4274,"endOffset":4396,"count":413},{"startOffset":4348,"endOffset":4394,"count":360}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4700,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5382,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5602,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6869,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"Buffer","ranges":[{"startOffset":8047,"endOffset":8380,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8473,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8758,"endOffset":9722,"count":11},{"startOffset":8844,"endOffset":8887,"count":5},{"startOffset":8887,"endOffset":8938,"count":6},{"startOffset":8940,"endOffset":9577,"count":6},{"startOffset":9037,"endOffset":9091,"count":0},{"startOffset":9117,"endOffset":9145,"count":0},{"startOffset":9146,"endOffset":9217,"count":0},{"startOffset":9219,"endOffset":9573,"count":0},{"startOffset":9577,"endOffset":9721,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10093,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10534,"endOffset":10755,"count":491},{"startOffset":10578,"endOffset":10643,"count":0},{"startOffset":10686,"endOffset":10753,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10858,"endOffset":11103,"count":2},{"startOffset":10942,"endOffset":10955,"count":0},{"startOffset":10956,"endOffset":10967,"count":0},{"startOffset":10969,"endOffset":11070,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11282,"endOffset":11357,"count":489}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11598,"endOffset":11687,"count":0}],"isBlockCoverage":false},{"functionName":"SlowBuffer","ranges":[{"startOffset":11783,"endOffset":11873,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":11988,"endOffset":12320,"count":489},{"startOffset":12031,"endOffset":12065,"count":0},{"startOffset":12104,"endOffset":12283,"count":408},{"startOffset":12152,"endOffset":12165,"count":52},{"startOffset":12283,"endOffset":12319,"count":81}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12322,"endOffset":12868,"count":5},{"startOffset":12448,"endOffset":12497,"count":0},{"startOffset":12543,"endOffset":12556,"count":0},{"startOffset":12689,"endOffset":12815,"count":0}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12870,"endOffset":13323,"count":5},{"startOffset":12956,"endOffset":12980,"count":3},{"startOffset":12982,"endOffset":13101,"count":2},{"startOffset":13019,"endOffset":13043,"count":0},{"startOffset":13101,"endOffset":13283,"count":3},{"startOffset":13178,"endOffset":13219,"count":0},{"startOffset":13255,"endOffset":13279,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13325,"endOffset":14022,"count":6},{"startOffset":13469,"endOffset":13565,"count":0},{"startOffset":13642,"endOffset":13687,"count":0},{"startOffset":13746,"endOffset":13969,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":14024,"endOffset":14398,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":14400,"endOffset":14706,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":14745,"endOffset":14799,"count":51}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":14819,"endOffset":15144,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15167,"endOffset":15318,"count":489}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15384,"endOffset":16591,"count":0}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":16594,"endOffset":16830,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16965,"endOffset":17029,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17042,"endOffset":17088,"count":489}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17103,"endOffset":17199,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17292,"endOffset":17321,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17334,"endOffset":17398,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17411,"endOffset":17457,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17472,"endOffset":17571,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17670,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17712,"endOffset":17776,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17789,"endOffset":17835,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17850,"endOffset":17949,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18045,"endOffset":18070,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18083,"endOffset":18149,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18162,"endOffset":18210,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18225,"endOffset":18323,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18416,"endOffset":18441,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18454,"endOffset":18519,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18532,"endOffset":18579,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18594,"endOffset":18806,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18902,"endOffset":18953,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18966,"endOffset":19032,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19045,"endOffset":19093,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19108,"endOffset":19322,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19409,"endOffset":19440,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19453,"endOffset":19516,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19529,"endOffset":19574,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19589,"endOffset":19797,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":19805,"endOffset":21360,"count":492},{"startOffset":19892,"endOffset":20177,"count":489},{"startOffset":19955,"endOffset":20177,"count":0},{"startOffset":20182,"endOffset":20587,"count":3},{"startOffset":20222,"endOffset":20246,"count":0},{"startOffset":20304,"endOffset":20587,"count":0},{"startOffset":20592,"endOffset":20722,"count":0},{"startOffset":20727,"endOffset":20859,"count":0},{"startOffset":20864,"endOffset":21231,"count":0},{"startOffset":21236,"endOffset":21354,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21362,"endOffset":22019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22159,"endOffset":22253,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22331,"endOffset":22429,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":22461,"endOffset":22594,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22875,"endOffset":23454,"count":489},{"startOffset":22947,"endOffset":22995,"count":0},{"startOffset":23047,"endOffset":23057,"count":0},{"startOffset":23087,"endOffset":23097,"count":0},{"startOffset":23146,"endOffset":23158,"count":0},{"startOffset":23174,"endOffset":23195,"count":0},{"startOffset":23221,"endOffset":23231,"count":0},{"startOffset":23267,"endOffset":23301,"count":0},{"startOffset":23372,"endOffset":23413,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":23483,"endOffset":23837,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":23965,"endOffset":24960,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":25056,"endOffset":26207,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":26635,"endOffset":27942,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":27971,"endOffset":28088,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":28122,"endOffset":28244,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":28275,"endOffset":28380,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":28558,"endOffset":28657,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":28660,"endOffset":30570,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":30597,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":31639,"endOffset":31873,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":31876,"endOffset":32310,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":32337,"endOffset":32637,"count":0}],"isBlockCoverage":false},{"functionName":"swap","ranges":[{"startOffset":32640,"endOffset":32711,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":32739,"endOffset":33143,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":33172,"endOffset":33616,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":33645,"endOffset":34153,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":34466,"endOffset":35206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35518,"endOffset":35553,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35559,"endOffset":35596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"18","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6360,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":526,"endOffset":585,"count":980}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":587,"endOffset":649,"count":978}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1271,"endOffset":1746,"count":489},{"startOffset":1334,"endOffset":1354,"count":0},{"startOffset":1356,"endOffset":1377,"count":0},{"startOffset":1425,"endOffset":1745,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1791,"endOffset":2172,"count":489},{"startOffset":1911,"endOffset":1965,"count":0},{"startOffset":2005,"endOffset":2059,"count":0},{"startOffset":2102,"endOffset":2168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2799,"count":980},{"startOffset":2380,"endOffset":2678,"count":0},{"startOffset":2715,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2843,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":3357,"endOffset":3489,"count":15235},{"startOffset":3433,"endOffset":3487,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3491,"endOffset":3623,"count":1},{"startOffset":3567,"endOffset":3621,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":3625,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3804,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":4362,"endOffset":4783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4824,"endOffset":5054,"count":489},{"startOffset":4889,"endOffset":5052,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5058,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"validatePort","ranges":[{"startOffset":5536,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5953,"endOffset":6054,"count":1},{"startOffset":6011,"endOffset":6052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28412,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":982,"endOffset":1198,"count":1},{"startOffset":1145,"endOffset":1196,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1200,"endOffset":1818,"count":1},{"startOffset":1296,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"boundsError","ranges":[{"startOffset":1820,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2243,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2744,"endOffset":3243,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3245,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3748,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4245,"endOffset":4797,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4799,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5184,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5542,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":5870,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6160,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6422,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6604,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7158,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7543,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":7901,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8229,"endOffset":8517,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8519,"endOffset":8779,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8781,"endOffset":9326,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9328,"endOffset":9759,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9761,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10150,"endOffset":10485,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10487,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10821,"endOffset":11127,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11129,"endOffset":11337,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11339,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":11886,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12317,"endOffset":12705,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12707,"endOffset":13042,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13044,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13378,"endOffset":13684,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13701,"endOffset":14106,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14108,"endOffset":14512,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14514,"endOffset":15084,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15086,"endOffset":15655,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15676,"endOffset":16158,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16160,"endOffset":16282,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16284,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16784,"endOffset":16906,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":16908,"endOffset":17052,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17054,"endOffset":17198,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17200,"endOffset":17809,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17811,"endOffset":18224,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18226,"endOffset":18605,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18607,"endOffset":18914,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":18916,"endOffset":19022,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19024,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19285,"endOffset":19481,"count":1}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19483,"endOffset":19585,"count":1}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19587,"endOffset":19999,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20001,"endOffset":20095,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20097,"endOffset":20706,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20708,"endOffset":21129,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21131,"endOffset":21493,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21495,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21812,"endOffset":21918,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":21920,"endOffset":22185,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22187,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22385,"endOffset":22487,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22489,"endOffset":23151,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23153,"endOffset":23268,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23270,"endOffset":23377,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23379,"endOffset":23476,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23478,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24142,"endOffset":24257,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24259,"endOffset":24366,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24385,"endOffset":24851,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":24853,"endOffset":25320,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25322,"endOffset":25623,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25625,"endOffset":25927,"count":0}],"isBlockCoverage":false},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":25969,"endOffset":28346,"count":1},{"startOffset":27372,"endOffset":27392,"count":0},{"startOffset":27446,"endOffset":27465,"count":0},{"startOffset":27521,"endOffset":27542,"count":0},{"startOffset":27598,"endOffset":27618,"count":0},{"startOffset":27675,"endOffset":27696,"count":0},{"startOffset":27752,"endOffset":27772,"count":0},{"startOffset":27830,"endOffset":27852,"count":0},{"startOffset":27910,"endOffset":27931,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10567,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":765,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":931,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1142,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1435,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3147,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3508,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4298,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4437,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4667,"endOffset":5105,"count":1},{"startOffset":4723,"endOffset":4747,"count":0}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":5109,"endOffset":5754,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":5805,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":6883,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10133,"endOffset":10463,"count":1},{"startOffset":10213,"endOffset":10388,"count":0},{"startOffset":10420,"endOffset":10461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17496,"count":1}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":4917,"endOffset":5124,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":5185,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":5806,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":6955,"endOffset":7905,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":7907,"endOffset":8167,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":8196,"endOffset":8686,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":8689,"endOffset":8976,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":8978,"endOffset":9243,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":9358,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":9565,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"fastPromiseHook","ranges":[{"startOffset":9924,"endOffset":11060,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":11091,"endOffset":11151,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":11179,"endOffset":11470,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":11472,"endOffset":11747,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":11749,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":12076,"endOffset":12146,"count":6}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":12148,"endOffset":12338,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":12521,"endOffset":12811,"count":6},{"startOffset":12777,"endOffset":12810,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":12814,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":12906,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":13383,"endOffset":13446,"count":30}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":13448,"endOffset":13507,"count":6}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":13509,"endOffset":13564,"count":6}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":13566,"endOffset":13623,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":13625,"endOffset":13686,"count":6}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":13689,"endOffset":14097,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":14100,"endOffset":14276,"count":6},{"startOffset":14248,"endOffset":14274,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":14279,"endOffset":14399,"count":6},{"startOffset":14343,"endOffset":14368,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":14402,"endOffset":14612,"count":0}],"isBlockCoverage":false},{"functionName":"clearAsyncIdStack","ranges":[{"startOffset":14703,"endOffset":14929,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":14932,"endOffset":14995,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":15061,"endOffset":15641,"count":6},{"startOffset":15233,"endOffset":15293,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":15706,"endOffset":16317,"count":6},{"startOffset":15822,"endOffset":15835,"count":0},{"startOffset":15914,"endOffset":16020,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":16320,"endOffset":16396,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":16398,"endOffset":16470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"22","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4828,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":1023,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1100,"endOffset":1186,"count":5},{"startOffset":1176,"endOffset":1179,"count":4},{"startOffset":1180,"endOffset":1183,"count":1}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1288,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1486,"endOffset":2454,"count":2},{"startOffset":1542,"endOffset":2334,"count":4},{"startOffset":1577,"endOffset":2309,"count":5},{"startOffset":1778,"endOffset":1811,"count":3},{"startOffset":1811,"endOffset":2185,"count":2},{"startOffset":1898,"endOffset":1931,"count":0},{"startOffset":1944,"endOffset":1986,"count":0},{"startOffset":2063,"endOffset":2123,"count":0},{"startOffset":2136,"endOffset":2163,"count":0},{"startOffset":2247,"endOffset":2268,"count":0},{"startOffset":2334,"endOffset":2388,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2598,"endOffset":3513,"count":5},{"startOffset":2670,"endOffset":2711,"count":0},{"startOffset":2741,"endOffset":2748,"count":0},{"startOffset":2796,"endOffset":2810,"count":3},{"startOffset":2815,"endOffset":2852,"count":0},{"startOffset":2857,"endOffset":2908,"count":0},{"startOffset":2913,"endOffset":2978,"count":2},{"startOffset":2983,"endOffset":3126,"count":0},{"startOffset":3155,"endOffset":3181,"count":4},{"startOffset":3425,"endOffset":3485,"count":0}],"isBlockCoverage":true},{"functionName":"createMicrotaskResource","ranges":[{"startOffset":3603,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3851,"endOffset":4211,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":4213,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4549,"endOffset":4806,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8383,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1462,"endOffset":1552,"count":1},{"startOffset":1542,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":1554,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":1635,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2028,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":2599,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":2851,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3147,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4035,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":4964,"endOffset":5249,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":5422,"endOffset":7284,"count":1},{"startOffset":5580,"endOffset":5746,"count":0},{"startOffset":5811,"endOffset":7188,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":7286,"endOffset":7704,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":7706,"endOffset":8176,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":8178,"endOffset":8262,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":17}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":5}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":5}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":9},{"startOffset":3388,"endOffset":3400,"count":4},{"startOffset":3400,"endOffset":3509,"count":5}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":8}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":5},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":9},{"startOffset":4041,"endOffset":4062,"count":8},{"startOffset":4064,"endOffset":4159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1798,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18359,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2172,"endOffset":4254,"count":1},{"startOffset":2437,"endOffset":2480,"count":0},{"startOffset":2537,"endOffset":2649,"count":0},{"startOffset":2854,"endOffset":2912,"count":0},{"startOffset":2966,"endOffset":3024,"count":0},{"startOffset":3063,"endOffset":3086,"count":0},{"startOffset":3092,"endOffset":3148,"count":0},{"startOffset":3188,"endOffset":3297,"count":0},{"startOffset":3340,"endOffset":3366,"count":0},{"startOffset":3368,"endOffset":3611,"count":0},{"startOffset":3651,"endOffset":3763,"count":0},{"startOffset":3896,"endOffset":4140,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":4463,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":4607,"endOffset":4793,"count":1}],"isBlockCoverage":true},{"functionName":"Console.<computed>","ranges":[{"startOffset":4958,"endOffset":5454,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5112,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5203,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5315,"endOffset":5402,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5410,"endOffset":5440,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":5494,"endOffset":6460,"count":2}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":6541,"endOffset":7430,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6609,"endOffset":7427,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":7469,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":8869,"endOffset":9299,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":9340,"endOffset":9456,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":9497,"endOffset":9613,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":9643,"endOffset":9730,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":9736,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":9830,"endOffset":10015,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":10020,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":10383,"endOffset":10672,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":10677,"endOffset":10915,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":10927,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":11172,"endOffset":11390,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":11451,"endOffset":11881,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":11942,"endOffset":12398,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":12464,"endOffset":12752,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":12757,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":12908,"endOffset":13050,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":13099,"endOffset":16391,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":16432,"endOffset":16928,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":16930,"endOffset":16991,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":16993,"endOffset":17673,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":17807,"endOffset":17863,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":17866,"endOffset":17884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"27","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2103,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":68,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":484,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1117,"endOffset":1819,"count":1},{"startOffset":1275,"endOffset":1817,"count":23},{"startOffset":1490,"endOffset":1695,"count":19},{"startOffset":1695,"endOffset":1813,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":1991,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2046,"endOffset":2099,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40597,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":2176,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2684,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3206,"endOffset":3429,"count":1421}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3719,"endOffset":6082,"count":1396},{"startOffset":3834,"endOffset":6020,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6086,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7160,"endOffset":7853,"count":1396},{"startOffset":7415,"endOffset":7425,"count":0},{"startOffset":7488,"endOffset":7498,"count":0},{"startOffset":7579,"endOffset":7583,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7855,"endOffset":7930,"count":25}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":7932,"endOffset":8277,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8279,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8627,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8791,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9099,"endOffset":9593,"count":925},{"startOffset":9365,"endOffset":9433,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9595,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9765,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":9951,"endOffset":10279,"count":1421},{"startOffset":10086,"endOffset":10138,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10368,"endOffset":10461,"count":3252}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10536,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10740,"endOffset":11673,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11842,"endOffset":13033,"count":928},{"startOffset":11927,"endOffset":11988,"count":0},{"startOffset":12398,"endOffset":12559,"count":0},{"startOffset":12591,"endOffset":12633,"count":0},{"startOffset":12692,"endOffset":12714,"count":0},{"startOffset":12722,"endOffset":12786,"count":0},{"startOffset":12898,"endOffset":12921,"count":0},{"startOffset":12983,"endOffset":13009,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13307,"endOffset":13366,"count":469}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13432,"endOffset":13477,"count":459}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13483,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13744,"endOffset":14372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14442,"endOffset":14490,"count":462}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14496,"endOffset":14865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14935,"endOffset":14985,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14991,"endOffset":15389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15459,"endOffset":15509,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15515,"endOffset":15913,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15979,"endOffset":16135,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16141,"endOffset":16432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16502,"endOffset":16554,"count":1390}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16560,"endOffset":16859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16925,"endOffset":17025,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17031,"endOffset":17348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17418,"endOffset":17613,"count":2327},{"startOffset":17497,"endOffset":17516,"count":0},{"startOffset":17558,"endOffset":17568,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17619,"endOffset":17838,"count":925},{"startOffset":17729,"endOffset":17736,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17906,"endOffset":18045,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18051,"endOffset":18543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18630,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18742,"endOffset":18893,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18899,"endOffset":19317,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":19463,"endOffset":19520,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19530,"endOffset":19835,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":19837,"endOffset":19977,"count":1396},{"startOffset":19934,"endOffset":19976,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20086,"endOffset":22387,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23351,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":23966,"endOffset":24654,"count":2},{"startOffset":24304,"endOffset":24450,"count":13},{"startOffset":24505,"endOffset":24652,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":24674,"endOffset":25304,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25371,"endOffset":25758,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":25763,"endOffset":26262,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26267,"endOffset":26701,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":26706,"endOffset":27174,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27179,"endOffset":27607,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27612,"endOffset":28638,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":28643,"endOffset":29820,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":29983,"endOffset":30192,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30197,"endOffset":30769,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":30824,"endOffset":31024,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31029,"endOffset":31233,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31366,"endOffset":31566,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":31846,"endOffset":32049,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32273,"endOffset":33026,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33030,"endOffset":34244,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34250,"endOffset":34425,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":34427,"endOffset":34606,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":34749,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":35328,"endOffset":36721,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":36723,"endOffset":37227,"count":462},{"startOffset":36786,"endOffset":36842,"count":0},{"startOffset":36920,"endOffset":37186,"count":62268},{"startOffset":36951,"endOffset":37182,"count":462},{"startOffset":37061,"endOffset":37176,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37229,"endOffset":37576,"count":462},{"startOffset":37296,"endOffset":37317,"count":459},{"startOffset":37317,"endOffset":37419,"count":3},{"startOffset":37355,"endOffset":37419,"count":0},{"startOffset":37457,"endOffset":37498,"count":0},{"startOffset":37518,"endOffset":37545,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":38335,"endOffset":39300,"count":925},{"startOffset":38586,"endOffset":38647,"count":922},{"startOffset":38607,"endOffset":38646,"count":0},{"startOffset":38649,"endOffset":38700,"count":3},{"startOffset":38706,"endOffset":38722,"count":3},{"startOffset":38794,"endOffset":38843,"count":0},{"startOffset":38942,"endOffset":38993,"count":0},{"startOffset":39029,"endOffset":39078,"count":0},{"startOffset":39114,"endOffset":39170,"count":0},{"startOffset":39206,"endOffset":39251,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":39302,"endOffset":39455,"count":1076},{"startOffset":39404,"endOffset":39452,"count":3}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":39457,"endOffset":39602,"count":1073},{"startOffset":39561,"endOffset":39601,"count":0}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":39604,"endOffset":40304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2800,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1190,"endOffset":2738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"30","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":false}]},{"scriptId":"31","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41803,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1492,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1598,"endOffset":1675,"count":751000}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1677,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1910,"endOffset":3714,"count":5682},{"startOffset":2127,"endOffset":3698,"count":751000},{"startOffset":2160,"endOffset":2186,"count":745318},{"startOffset":2186,"endOffset":2277,"count":5682},{"startOffset":2235,"endOffset":2277,"count":0},{"startOffset":2277,"endOffset":2310,"count":745318},{"startOffset":2310,"endOffset":3599,"count":69310},{"startOffset":2342,"endOffset":2355,"count":63625},{"startOffset":2357,"endOffset":2382,"count":6049},{"startOffset":2382,"endOffset":3556,"count":63261},{"startOffset":2404,"endOffset":3343,"count":171},{"startOffset":2460,"endOffset":2518,"count":0},{"startOffset":2519,"endOffset":2577,"count":0},{"startOffset":2715,"endOffset":2791,"count":0},{"startOffset":3024,"endOffset":3193,"count":0},{"startOffset":3203,"endOffset":3335,"count":0},{"startOffset":3343,"endOffset":3556,"count":63090},{"startOffset":3389,"endOffset":3442,"count":57408},{"startOffset":3442,"endOffset":3501,"count":5682},{"startOffset":3556,"endOffset":3599,"count":69139},{"startOffset":3599,"endOffset":3694,"count":676008},{"startOffset":3627,"endOffset":3641,"count":5409},{"startOffset":3643,"endOffset":3664,"count":710},{"startOffset":3664,"endOffset":3694,"count":675298}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":3716,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4195,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":8603,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":11359,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11732,"endOffset":13788,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":14002,"endOffset":17476,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":17481,"endOffset":18509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":18514,"endOffset":20842,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":20847,"endOffset":23482,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":23487,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":25538,"endOffset":30004,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":30123,"endOffset":31019,"count":5682},{"startOffset":30246,"endOffset":30266,"count":15075},{"startOffset":30273,"endOffset":30573,"count":9393},{"startOffset":30311,"endOffset":30326,"count":0},{"startOffset":30423,"endOffset":30450,"count":0},{"startOffset":30958,"endOffset":31008,"count":0},{"startOffset":31009,"endOffset":31014,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":31024,"endOffset":31599,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":31604,"endOffset":31733,"count":1120}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":31738,"endOffset":32152,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":32157,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":34372,"endOffset":34448,"count":4047}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":34453,"endOffset":35081,"count":2389},{"startOffset":34536,"endOffset":34547,"count":0},{"startOffset":34705,"endOffset":34942,"count":31110},{"startOffset":34760,"endOffset":34844,"count":2389},{"startOffset":34844,"endOffset":34936,"count":28721},{"startOffset":34970,"endOffset":34997,"count":0},{"startOffset":35034,"endOffset":35046,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":35086,"endOffset":37406,"count":463},{"startOffset":35141,"endOffset":35168,"count":0},{"startOffset":35297,"endOffset":35314,"count":0},{"startOffset":35315,"endOffset":35343,"count":0},{"startOffset":35345,"endOffset":36812,"count":0},{"startOffset":36860,"endOffset":37329,"count":6053},{"startOffset":36915,"endOffset":37139,"count":463},{"startOffset":37139,"endOffset":37323,"count":5590},{"startOffset":37161,"endOffset":37323,"count":463},{"startOffset":37357,"endOffset":37367,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":37411,"endOffset":39069,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":39110,"endOffset":41464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"32","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15913,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":929,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1040,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1167,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgument","ranges":[{"startOffset":1294,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8202,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8686,"endOffset":8865,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoder","ranges":[{"startOffset":8936,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":8986,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9057,"endOffset":9149,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9153,"endOffset":9463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9467,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10233,"endOffset":11894,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10371,"endOffset":11098,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11105,"endOffset":11865,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11896,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14572,"endOffset":14659,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14668,"endOffset":14801,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14810,"endOffset":14972,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":14981,"endOffset":15611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"33","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8169,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2014,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3326,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":3611,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout.<computed>","ranges":[{"startOffset":4288,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":4524,"endOffset":4645,"count":2},{"startOffset":4567,"endOffset":4586,"count":0},{"startOffset":4588,"endOffset":4643,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":4647,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":5296,"endOffset":5594,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":5622,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":5714,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":6040,"endOffset":6213,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":6217,"endOffset":6393,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":6397,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":6443,"endOffset":6984,"count":1},{"startOffset":6618,"endOffset":6659,"count":0},{"startOffset":6664,"endOffset":6711,"count":0},{"startOffset":6716,"endOffset":6937,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate.<computed>","ranges":[{"startOffset":7018,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":7108,"endOffset":7530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"34","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"35","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17591,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5271,"endOffset":5549,"count":1},{"startOffset":5497,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5634,"endOffset":6600,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6713,"endOffset":6884,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":6915,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7042,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7197,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7355,"endOffset":7392,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7395,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7811,"endOffset":7982,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8040,"endOffset":8108,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8269,"endOffset":8436,"count":1},{"startOffset":8312,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8614,"endOffset":8969,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":8972,"endOffset":9048,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9050,"endOffset":9127,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":9210,"endOffset":9264,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9411,"endOffset":9471,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9692,"endOffset":10208,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10210,"endOffset":10861,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":10863,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11236,"endOffset":11758,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11760,"endOffset":11965,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":11967,"endOffset":12038,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12040,"endOffset":17137,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12352,"endOffset":14153,"count":1},{"startOffset":12431,"endOffset":12455,"count":0},{"startOffset":12892,"endOffset":12907,"count":0},{"startOffset":13224,"endOffset":13320,"count":0},{"startOffset":13750,"endOffset":13806,"count":0},{"startOffset":13908,"endOffset":13929,"count":0},{"startOffset":14080,"endOffset":14109,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14158,"endOffset":14632,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14636,"endOffset":17078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2924,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2595,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2765,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2184,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":362,"endOffset":634,"count":1},{"startOffset":433,"endOffset":632,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":708,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1035,"endOffset":1618,"count":4},{"startOffset":1124,"endOffset":1594,"count":3},{"startOffset":1159,"endOffset":1551,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1244,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":1838,"endOffset":2127,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1885,"endOffset":2124,"count":3137},{"startOffset":1934,"endOffset":2074,"count":4},{"startOffset":2105,"endOffset":2120,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7002,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":587,"endOffset":917,"count":1},{"startOffset":648,"endOffset":915,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":919,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1445,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3080,"endOffset":3549,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3551,"endOffset":3652,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3654,"endOffset":3672,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4215,"endOffset":6576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4484,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":6578,"endOffset":6783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"39","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4592,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":228,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":639,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":763,"endOffset":1147,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1149,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1259,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2560,"endOffset":3704,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":3706,"endOffset":3800,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":3802,"endOffset":4521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6255,"count":1}],"isBlockCoverage":true},{"functionName":"defineStream","ranges":[{"startOffset":428,"endOffset":575,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1136,"endOffset":2703,"count":2},{"startOffset":1288,"endOffset":1414,"count":0},{"startOffset":1420,"endOffset":1606,"count":0},{"startOffset":1941,"endOffset":2161,"count":0},{"startOffset":2337,"endOffset":2582,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2525,"endOffset":2572,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2705,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3126,"endOffset":3457,"count":1},{"startOffset":3163,"endOffset":3177,"count":0},{"startOffset":3376,"endOffset":3438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3405,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3459,"endOffset":3790,"count":1},{"startOffset":3496,"endOffset":3510,"count":0},{"startOffset":3709,"endOffset":3771,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3738,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3792,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6174,"endOffset":6253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":10}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":10},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":1},{"startOffset":957,"endOffset":993,"count":0},{"startOffset":995,"endOffset":1048,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3480,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2914,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2469,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3065,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3238,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3376,"endOffset":3479,"count":2},{"startOffset":3428,"endOffset":3457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"43","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"44","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14739,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":301,"endOffset":2428,"count":1},{"startOffset":1039,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2430,"endOffset":3958,"count":1}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":3960,"endOffset":4217,"count":13},{"startOffset":4081,"endOffset":4215,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4219,"endOffset":4448,"count":1},{"startOffset":4358,"endOffset":4401,"count":0},{"startOffset":4403,"endOffset":4446,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4560,"endOffset":5237,"count":1},{"startOffset":5030,"endOffset":5207,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5239,"endOffset":5464,"count":1},{"startOffset":5341,"endOffset":5463,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5466,"endOffset":5690,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5648,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5692,"endOffset":5924,"count":1},{"startOffset":5843,"endOffset":5922,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":5986,"endOffset":6121,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6123,"endOffset":6430,"count":1},{"startOffset":6258,"endOffset":6429,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6390,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6432,"endOffset":6691,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6693,"endOffset":7274,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7469,"endOffset":9990,"count":1},{"startOffset":8180,"endOffset":8482,"count":16},{"startOffset":8225,"endOffset":8457,"count":0},{"startOffset":8799,"endOffset":8972,"count":0},{"startOffset":9000,"endOffset":9394,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9643,"endOffset":9679,"count":338}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9685,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9853,"endOffset":9888,"count":12}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9894,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":9992,"endOffset":10551,"count":1},{"startOffset":10388,"endOffset":10397,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10553,"endOffset":10823,"count":1},{"startOffset":10640,"endOffset":10821,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":10825,"endOffset":12636,"count":1},{"startOffset":10951,"endOffset":12634,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":12638,"endOffset":12867,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":12869,"endOffset":13155,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13157,"endOffset":13782,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":13784,"endOffset":14041,"count":1},{"startOffset":13869,"endOffset":14039,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14043,"endOffset":14390,"count":1},{"startOffset":14237,"endOffset":14388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"45","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":841,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":147,"endOffset":286,"count":502},{"startOffset":234,"endOffset":261,"count":1},{"startOffset":261,"endOffset":285,"count":501}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":288,"endOffset":753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":71,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1251,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1834,"endOffset":1920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8194,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":305,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":1262,"endOffset":2509,"count":459},{"startOffset":1375,"endOffset":1449,"count":1},{"startOffset":1487,"endOffset":1512,"count":0},{"startOffset":1515,"endOffset":1522,"count":0},{"startOffset":1647,"endOffset":1785,"count":0},{"startOffset":1889,"endOffset":2507,"count":25},{"startOffset":1990,"endOffset":2021,"count":0},{"startOffset":2071,"endOffset":2126,"count":1},{"startOffset":2278,"endOffset":2503,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":2511,"endOffset":3043,"count":25},{"startOffset":2647,"endOffset":2721,"count":0},{"startOffset":2728,"endOffset":2808,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3233,"endOffset":3541,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3498,"endOffset":3537,"count":13467}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":3543,"endOffset":3814,"count":25},{"startOffset":3756,"endOffset":3812,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":3908,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":4728,"endOffset":5178,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4803,"endOffset":5035,"count":57}],"isBlockCoverage":true},{"functionName":"rekeySourceMap","ranges":[{"startOffset":5247,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":5880,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6488,"endOffset":7143,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7361,"endOffset":8086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55597,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":3543,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":3832,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"makeCallback","ranges":[{"startOffset":4151,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4475,"endOffset":4690,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":4716,"endOffset":4910,"count":10305}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":4912,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":5248,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":5488,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5799,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6294,"endOffset":6824,"count":4},{"startOffset":6369,"endOffset":6398,"count":0},{"startOffset":6706,"endOffset":6732,"count":0},{"startOffset":6734,"endOffset":6787,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":6826,"endOffset":7106,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7108,"endOffset":7609,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":7611,"endOffset":8401,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":8403,"endOffset":8633,"count":489},{"startOffset":8546,"endOffset":8558,"count":0},{"startOffset":8560,"endOffset":8615,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":8635,"endOffset":8946,"count":489},{"startOffset":8753,"endOffset":8805,"count":0},{"startOffset":8892,"endOffset":8904,"count":0},{"startOffset":8906,"endOffset":8923,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":8948,"endOffset":9203,"count":489},{"startOffset":9146,"endOffset":9158,"count":0},{"startOffset":9160,"endOffset":9177,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":9205,"endOffset":10588,"count":489},{"startOffset":9374,"endOffset":9380,"count":0},{"startOffset":9520,"endOffset":9523,"count":0},{"startOffset":9653,"endOffset":9676,"count":0},{"startOffset":9928,"endOffset":10282,"count":0},{"startOffset":10342,"endOffset":10438,"count":0},{"startOffset":10460,"endOffset":10500,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":10590,"endOffset":10756,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":10758,"endOffset":10901,"count":489}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":10903,"endOffset":11480,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":11483,"endOffset":11879,"count":489}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":11986,"endOffset":13484,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":13753,"endOffset":14668,"count":489},{"startOffset":13871,"endOffset":14020,"count":0},{"startOffset":14071,"endOffset":14092,"count":0},{"startOffset":14180,"endOffset":14199,"count":0},{"startOffset":14232,"endOffset":14362,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":14670,"endOffset":15101,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":15103,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15559,"endOffset":16819,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":17096,"endOffset":17962,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":18023,"endOffset":18452,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":18581,"endOffset":18894,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":18896,"endOffset":19277,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":19279,"endOffset":19626,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19628,"endOffset":20246,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":20248,"endOffset":20651,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20653,"endOffset":20969,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":20971,"endOffset":21191,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":21194,"endOffset":21313,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21315,"endOffset":21784,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":21786,"endOffset":22144,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22146,"endOffset":22320,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":22322,"endOffset":22472,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22474,"endOffset":22640,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":22642,"endOffset":22784,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22786,"endOffset":23567,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":23569,"endOffset":24341,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24343,"endOffset":24924,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":24926,"endOffset":25352,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25354,"endOffset":25669,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":25671,"endOffset":26045,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":26047,"endOffset":26419,"count":0}],"isBlockCoverage":false},{"functionName":"fstatSync","ranges":[{"startOffset":26421,"endOffset":26663,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":26665,"endOffset":26975,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":26977,"endOffset":27284,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":27286,"endOffset":27634,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":27636,"endOffset":27967,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":27969,"endOffset":29436,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":29438,"endOffset":30095,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":30097,"endOffset":30498,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":30500,"endOffset":30949,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":30951,"endOffset":31178,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":31180,"endOffset":31366,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":31368,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":31612,"endOffset":31806,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":31808,"endOffset":32245,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":32247,"endOffset":32569,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":32572,"endOffset":32848,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":32850,"endOffset":33085,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":33087,"endOffset":33428,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":33430,"endOffset":33730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":33732,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":34017,"endOffset":34276,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":34278,"endOffset":34618,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":34620,"endOffset":34918,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":34920,"endOffset":35261,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":35263,"endOffset":35545,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":35547,"endOffset":35831,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":35833,"endOffset":36093,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":36095,"endOffset":36745,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":36747,"endOffset":37466,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":37468,"endOffset":38170,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":38172,"endOffset":38612,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":38614,"endOffset":38993,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":38995,"endOffset":39887,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":39923,"endOffset":41036,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":41038,"endOffset":41726,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":41942,"endOffset":42008,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":42033,"endOffset":42211,"count":463},{"startOffset":42100,"endOffset":42191,"count":926},{"startOffset":42162,"endOffset":42185,"count":463},{"startOffset":42191,"endOffset":42210,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":42216,"endOffset":42503,"count":463},{"startOffset":42301,"endOffset":42331,"count":0},{"startOffset":42351,"endOffset":42502,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":42626,"endOffset":42869,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":42893,"endOffset":42946,"count":5239}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":42988,"endOffset":46924,"count":580},{"startOffset":43044,"endOffset":43063,"count":0},{"startOffset":43171,"endOffset":43189,"count":0},{"startOffset":43358,"endOffset":43393,"count":117},{"startOffset":43393,"endOffset":43964,"count":463},{"startOffset":43964,"endOffset":43983,"count":0},{"startOffset":43985,"endOffset":44160,"count":0},{"startOffset":44160,"endOffset":44297,"count":463},{"startOffset":44297,"endOffset":46841,"count":5239},{"startOffset":44409,"endOffset":44524,"count":463},{"startOffset":44524,"endOffset":44650,"count":4776},{"startOffset":44773,"endOffset":44910,"count":4577},{"startOffset":44864,"endOffset":44888,"count":0},{"startOffset":44910,"endOffset":44990,"count":662},{"startOffset":45021,"endOffset":45070,"count":0},{"startOffset":45070,"endOffset":46355,"count":662},{"startOffset":45524,"endOffset":46349,"count":0},{"startOffset":46355,"endOffset":46650,"count":0},{"startOffset":46652,"endOffset":46837,"count":0},{"startOffset":46841,"endOffset":46923,"count":463}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":46949,"endOffset":47188,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":47192,"endOffset":50621,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":50642,"endOffset":50912,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":50915,"endOffset":51386,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":51389,"endOffset":51863,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":51866,"endOffset":52396,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":52399,"endOffset":52771,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":52773,"endOffset":52967,"count":44},{"startOffset":52821,"endOffset":52965,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":52969,"endOffset":53074,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":53076,"endOffset":53183,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":54364,"endOffset":54432,"count":11}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":54437,"endOffset":54484,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":54489,"endOffset":54559,"count":11}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":54564,"endOffset":54613,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":54751,"endOffset":54827,"count":11}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":54832,"endOffset":54887,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":54892,"endOffset":54970,"count":11}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":54975,"endOffset":55032,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":55463,"endOffset":55588,"count":11},{"startOffset":55508,"endOffset":55559,"count":1}],"isBlockCoverage":true}]},{"scriptId":"49","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18817,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":2265,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":2346,"endOffset":2493,"count":1069},{"startOffset":2397,"endOffset":2428,"count":489},{"startOffset":2430,"endOffset":2491,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":2512,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":2656,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":2717,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":2786,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":2858,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":2927,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":2988,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":3094,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":3318,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":3372,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":3502,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":4466,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":5082,"endOffset":5622,"count":1069},{"startOffset":5217,"endOffset":5249,"count":0},{"startOffset":5286,"endOffset":5404,"count":489},{"startOffset":5404,"endOffset":5526,"count":580},{"startOffset":5443,"endOffset":5526,"count":0}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":5624,"endOffset":6261,"count":2129},{"startOffset":5694,"endOffset":5883,"count":0},{"startOffset":5915,"endOffset":6259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6402,"endOffset":6955,"count":1073},{"startOffset":6632,"endOffset":6652,"count":0},{"startOffset":6706,"endOffset":6754,"count":0},{"startOffset":6773,"endOffset":6954,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":6959,"endOffset":7469,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":7502,"endOffset":7809,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":7845,"endOffset":7902,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":7934,"endOffset":7991,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":8030,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":8130,"endOffset":8187,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":8227,"endOffset":8284,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":8316,"endOffset":8373,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":8407,"endOffset":8465,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":8590,"endOffset":8672,"count":0}],"isBlockCoverage":false},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":8674,"endOffset":8757,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":9106,"endOffset":9170,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats","ranges":[{"startOffset":9172,"endOffset":9908,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":10066,"endOffset":10312,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":10315,"endOffset":10832,"count":0}],"isBlockCoverage":false},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":11173,"endOffset":11403,"count":0}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":11406,"endOffset":12484,"count":0}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":12486,"endOffset":13694,"count":489},{"startOffset":12551,"endOffset":12574,"count":0},{"startOffset":12597,"endOffset":12623,"count":0},{"startOffset":12680,"endOffset":12691,"count":0},{"startOffset":12713,"endOffset":12750,"count":0},{"startOffset":12755,"endOffset":12781,"count":0},{"startOffset":12786,"endOffset":12798,"count":0},{"startOffset":12820,"endOffset":12856,"count":0},{"startOffset":12862,"endOffset":12909,"count":0},{"startOffset":12914,"endOffset":12925,"count":0},{"startOffset":12947,"endOffset":13004,"count":0},{"startOffset":13010,"endOffset":13056,"count":0},{"startOffset":13061,"endOffset":13072,"count":0},{"startOffset":13094,"endOffset":13149,"count":0},{"startOffset":13155,"endOffset":13203,"count":0},{"startOffset":13208,"endOffset":13219,"count":0},{"startOffset":13241,"endOffset":13299,"count":0},{"startOffset":13304,"endOffset":13315,"count":0},{"startOffset":13337,"endOffset":13395,"count":0},{"startOffset":13401,"endOffset":13448,"count":0},{"startOffset":13453,"endOffset":13464,"count":0},{"startOffset":13486,"endOffset":13542,"count":0},{"startOffset":13547,"endOffset":13558,"count":0},{"startOffset":13580,"endOffset":13636,"count":0},{"startOffset":13640,"endOffset":13693,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13740,"endOffset":14100,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":14162,"endOffset":14605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14659,"endOffset":15038,"count":489},{"startOffset":14715,"endOffset":14782,"count":0},{"startOffset":14803,"endOffset":14870,"count":0},{"startOffset":14911,"endOffset":15034,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15096,"endOffset":15370,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15412,"endOffset":15682,"count":1073},{"startOffset":15474,"endOffset":15496,"count":0},{"startOffset":15498,"endOffset":15584,"count":0},{"startOffset":15660,"endOffset":15680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15727,"endOffset":15862,"count":493}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15910,"endOffset":16241,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":16282,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16877,"endOffset":17380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17421,"endOffset":17999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18062,"endOffset":18245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"50","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6531,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1092,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1868,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1915,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1986,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3362,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4122,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":4686,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5067,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5491,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6118,"endOffset":6475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4937,"count":1}],"isBlockCoverage":false},{"functionName":"loadNativeModule","ranges":[{"startOffset":540,"endOffset":746,"count":525},{"startOffset":644,"endOffset":744,"count":62}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":995,"endOffset":2840,"count":459},{"startOffset":1109,"endOffset":2232,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1209,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":2254,"endOffset":2316,"count":940}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2325,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":2505,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3025,"endOffset":3151,"count":4},{"startOffset":3094,"endOffset":3131,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":3153,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":4620,"endOffset":4808,"count":459},{"startOffset":4773,"endOffset":4807,"count":0}],"isBlockCoverage":true}]},{"scriptId":"52","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29915,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1837,"endOffset":2113,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3791,"endOffset":4005,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4029,"endOffset":13457,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13460,"endOffset":14185,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15241,"endOffset":15947,"count":0}],"isBlockCoverage":false},{"functionName":"urlFormat","ranges":[{"startOffset":15993,"endOffset":16703,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":17395,"endOffset":19811,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":19814,"endOffset":19913,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19939,"endOffset":20040,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20043,"endOffset":20186,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20218,"endOffset":29337,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29366,"endOffset":29639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"53","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"54","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2957,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":811,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":815,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1061,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1116,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1208,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1261,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1353,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1404,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1485,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1534,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1675,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1751,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1939,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":2007,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2238,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2328,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2531,"endOffset":2702,"count":1},{"startOffset":2597,"endOffset":2700,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2704,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2830,"endOffset":2904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"55","url":"child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18659,"count":1}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":2144,"endOffset":3829,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":3831,"endOffset":4320,"count":1}],"isBlockCoverage":true},{"functionName":"onNewListener","ranges":[{"startOffset":4059,"endOffset":4168,"count":7},{"startOffset":4117,"endOffset":4141,"count":6},{"startOffset":4143,"endOffset":4164,"count":1}],"isBlockCoverage":true},{"functionName":"onRemoveListener","ranges":[{"startOffset":4202,"endOffset":4316,"count":1},{"startOffset":4289,"endOffset":4312,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":4322,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":4733,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":5016,"endOffset":5444,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5037,"endOffset":5441,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":5561,"endOffset":10415,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":10539,"endOffset":14778,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":14781,"endOffset":14983,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":14985,"endOffset":16471,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":16474,"endOffset":16903,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":16906,"endOffset":17316,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":17319,"endOffset":17695,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":17698,"endOffset":17886,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":17889,"endOffset":18162,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":18165,"endOffset":18528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"internal/child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30671,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2102,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2168,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2283,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2357,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2527,"endOffset":4081,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4088,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":4841,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5360,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5544,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5671,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":5839,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6188,"endOffset":7533,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":7656,"endOffset":8134,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8137,"endOffset":8248,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8251,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8482,"endOffset":8595,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8629,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12589,"endOffset":12650,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12683,"endOffset":13348,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13470,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13568,"endOffset":13625,"count":1}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":13630,"endOffset":13698,"count":1}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14012,"endOffset":14120,"count":3},{"startOffset":14054,"endOffset":14080,"count":1},{"startOffset":14082,"endOffset":14116,"count":1}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14124,"endOffset":14262,"count":2},{"startOffset":14168,"endOffset":14194,"count":0},{"startOffset":14196,"endOffset":14258,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14266,"endOffset":14337,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":14341,"endOffset":14416,"count":2}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14420,"endOffset":14491,"count":2},{"startOffset":14475,"endOffset":14486,"count":0}],"isBlockCoverage":true},{"functionName":"setupChannel","ranges":[{"startOffset":14641,"endOffset":26294,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14870,"endOffset":14912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14968,"endOffset":15012,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15505,"endOffset":16684,"count":2},{"startOffset":15839,"endOffset":15866,"count":0},{"startOffset":16188,"endOffset":16421,"count":0},{"startOffset":16504,"endOffset":16680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16838,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"target.send","ranges":[{"startOffset":19199,"endOffset":20013,"count":8},{"startOffset":19284,"endOffset":19369,"count":0},{"startOffset":19410,"endOffset":19470,"count":0},{"startOffset":19502,"endOffset":19569,"count":0},{"startOffset":19571,"endOffset":19646,"count":0},{"startOffset":19793,"endOffset":20012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19955,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20033,"endOffset":24298,"count":8},{"startOffset":20106,"endOffset":20121,"count":0},{"startOffset":20162,"endOffset":20200,"count":0},{"startOffset":20525,"endOffset":20563,"count":0},{"startOffset":20564,"endOffset":20603,"count":0},{"startOffset":20605,"endOffset":20722,"count":0},{"startOffset":20803,"endOffset":20854,"count":0},{"startOffset":20931,"endOffset":22648,"count":0},{"startOffset":22676,"endOffset":22810,"count":0},{"startOffset":22812,"endOffset":23069,"count":0},{"startOffset":23276,"endOffset":23452,"count":0},{"startOffset":23479,"endOffset":23670,"count":2},{"startOffset":23670,"endOffset":23763,"count":6},{"startOffset":23712,"endOffset":23763,"count":0},{"startOffset":23769,"endOffset":24171,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":23506,"endOffset":23631,"count":2},{"startOffset":23606,"endOffset":23621,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24117,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":24872,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"target._disconnect","ranges":[{"startOffset":25322,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":25944,"endOffset":26028,"count":2}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26032,"endOffset":26250,"count":2},{"startOffset":26115,"endOffset":26122,"count":0},{"startOffset":26156,"endOffset":26175,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":26329,"endOffset":26611,"count":2},{"startOffset":26473,"endOffset":26529,"count":0},{"startOffset":26530,"endOffset":26607,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":26613,"endOffset":26631,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":26633,"endOffset":29369,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":29372,"endOffset":29688,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":29691,"endOffset":29892,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":29894,"endOffset":30546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47067,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3350,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3370,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3466,"endOffset":3847,"count":2},{"startOffset":3633,"endOffset":3655,"count":0},{"startOffset":3689,"endOffset":3846,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":3850,"endOffset":3988,"count":2},{"startOffset":3945,"endOffset":3963,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":3991,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4076,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4403,"endOffset":4694,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5189,"endOffset":5915,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":5987,"endOffset":6590,"count":2},{"startOffset":6343,"endOffset":6584,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":6725,"endOffset":10576,"count":2},{"startOffset":6785,"endOffset":6812,"count":0},{"startOffset":7362,"endOffset":7388,"count":0},{"startOffset":7932,"endOffset":8040,"count":0},{"startOffset":8137,"endOffset":8216,"count":0},{"startOffset":8217,"endOffset":8265,"count":0},{"startOffset":8267,"endOffset":8498,"count":0},{"startOffset":9049,"endOffset":9083,"count":0},{"startOffset":9163,"endOffset":9174,"count":1},{"startOffset":9263,"endOffset":9792,"count":0},{"startOffset":10158,"endOffset":10423,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":10749,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":10999,"endOffset":11647,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":11651,"endOffset":12030,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12237,"endOffset":12693,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":12775,"endOffset":13279,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":13313,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":13798,"endOffset":14045,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14076,"endOffset":14120,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14187,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14291,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14438,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14822,"endOffset":14930,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14998,"endOffset":15043,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":15050,"endOffset":15296,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":15388,"endOffset":15617,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":15644,"endOffset":15796,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":15825,"endOffset":16159,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":16189,"endOffset":16373,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":16401,"endOffset":16587,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":16634,"endOffset":16919,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":16953,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":17132,"endOffset":18086,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":18121,"endOffset":18412,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":18415,"endOffset":18575,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":18602,"endOffset":18693,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":18726,"endOffset":18792,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":18824,"endOffset":18888,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":18918,"endOffset":18978,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":19015,"endOffset":19300,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":19332,"endOffset":19397,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":19427,"endOffset":19486,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":19528,"endOffset":19575,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":19611,"endOffset":20372,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":20403,"endOffset":20471,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":20501,"endOffset":20582,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":20775,"endOffset":20879,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":20911,"endOffset":21852,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":21857,"endOffset":22656,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":22659,"endOffset":24364,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":24394,"endOffset":25698,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":25702,"endOffset":28618,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":28621,"endOffset":28680,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":28706,"endOffset":28893,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":28922,"endOffset":29115,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":29119,"endOffset":30367,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":30370,"endOffset":31699,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":31810,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":31943,"endOffset":33408,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":33410,"endOffset":35761,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":35828,"endOffset":35890,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":35893,"endOffset":36008,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":36011,"endOffset":37229,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":37258,"endOffset":40765,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":40768,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41243,"endOffset":41286,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":41361,"endOffset":41650,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":41653,"endOffset":42314,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":42351,"endOffset":43104,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":43133,"endOffset":44000,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":44042,"endOffset":44428,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":44432,"endOffset":44515,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":44574,"endOffset":44736,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44939,"endOffset":44975,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44979,"endOffset":45020,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45080,"endOffset":45111,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":45115,"endOffset":45151,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":45189,"endOffset":45415,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":45441,"endOffset":45539,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":45567,"endOffset":45666,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":45827,"endOffset":46496,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":46535,"endOffset":46776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2144,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1935,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7428,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":551,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1945,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2318,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":2399,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":2481,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":2564,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2637,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2962,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":3240,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":3466,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3851,"endOffset":7399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1134,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1223,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1443,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1732,"endOffset":2269,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2271,"endOffset":3041,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3043,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3183,"endOffset":3459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5752,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2081,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":96,"endOffset":144,"count":4}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":258,"endOffset":2053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"63","url":"_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38265,"count":1}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2299,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3108,"endOffset":6492,"count":2},{"startOffset":3507,"endOffset":3550,"count":0},{"startOffset":4083,"endOffset":4119,"count":0},{"startOffset":6304,"endOffset":6490,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6495,"endOffset":7065,"count":2},{"startOffset":6563,"endOffset":6592,"count":0},{"startOffset":6915,"endOffset":6941,"count":0},{"startOffset":6996,"endOffset":7028,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":7202,"endOffset":7234,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7285,"endOffset":7323,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7552,"endOffset":7638,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7734,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7822,"endOffset":10075,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10077,"endOffset":10735,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10767,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10943,"endOffset":11587,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11648,"endOffset":12013,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12126,"endOffset":12520,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12617,"endOffset":16835,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16838,"endOffset":17658,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17859,"endOffset":18186,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18188,"endOffset":18824,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19174,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19332,"endOffset":21128,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21399,"endOffset":21465,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21494,"endOffset":25881,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25884,"endOffset":26558,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26589,"endOffset":27258,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27384,"endOffset":28291,"count":2},{"startOffset":27516,"endOffset":27848,"count":0},{"startOffset":27877,"endOffset":28274,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28386,"endOffset":28900,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29003,"endOffset":29541,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29544,"endOffset":30054,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30056,"endOffset":30144,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30298,"endOffset":30623,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30626,"endOffset":30776,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30778,"endOffset":31029,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31058,"endOffset":31325,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31328,"endOffset":31475,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31659,"endOffset":33159,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33204,"endOffset":33419,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33618,"endOffset":34007,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34013,"endOffset":34143,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34209,"endOffset":34275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34334,"endOffset":34416,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34476,"endOffset":34536,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34547,"endOffset":34656,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34710,"endOffset":34764,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34822,"endOffset":34910,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34966,"endOffset":35051,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35100,"endOffset":35234,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35240,"endOffset":35529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35582,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35733,"endOffset":35778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35801,"endOffset":35852,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35858,"endOffset":35907,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":36211,"endOffset":36773,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":36775,"endOffset":36996,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":36998,"endOffset":37930,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":37932,"endOffset":38099,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":38117,"endOffset":38263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"64","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3784,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":190,"endOffset":274,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":278,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":469,"endOffset":627,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":631,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":862,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":934,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1109,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1456,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1914,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1958,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2129,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2794,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3585,"endOffset":3780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":4},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":4},{"startOffset":546,"endOffset":737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22213,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2225,"endOffset":6390,"count":2},{"startOffset":2620,"endOffset":2663,"count":0},{"startOffset":3214,"endOffset":3250,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6392,"endOffset":6524,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":6562,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7105,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7355,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7417,"endOffset":8589,"count":2},{"startOffset":8058,"endOffset":8098,"count":0},{"startOffset":8104,"endOffset":8133,"count":0},{"startOffset":8272,"endOffset":8300,"count":0},{"startOffset":8354,"endOffset":8384,"count":0},{"startOffset":8439,"endOffset":8471,"count":0},{"startOffset":8524,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":8685,"endOffset":8753,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8783,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10021,"endOffset":10067,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10098,"endOffset":10253,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10296,"endOffset":10607,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10797,"endOffset":11750,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":11752,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12132,"endOffset":12552,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12554,"endOffset":13807,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":13809,"endOffset":13948,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":13950,"endOffset":14360,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":14432,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":14819,"endOffset":16252,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16282,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16515,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":17702,"endOffset":17915,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":17917,"endOffset":18177,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18179,"endOffset":18527,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18529,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":18858,"endOffset":19476,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":19542,"endOffset":20006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20073,"endOffset":20160,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20166,"endOffset":20348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20373,"endOffset":20765,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20771,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20938,"endOffset":21024,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21059,"endOffset":21147,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21178,"endOffset":21260,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21290,"endOffset":21374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21412,"endOffset":21496,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21527,"endOffset":21607,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21638,"endOffset":21715,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":21791,"endOffset":22002,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22090,"endOffset":22122,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22173,"endOffset":22211,"count":0}],"isBlockCoverage":false}]},{"scriptId":"67","url":"_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3542,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1917,"endOffset":2341,"count":2},{"startOffset":1981,"endOffset":2008,"count":0},{"startOffset":2229,"endOffset":2251,"count":0},{"startOffset":2294,"endOffset":2335,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3054,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3272,"endOffset":3533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7707,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":3891,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4411,"endOffset":5239,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5241,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5482,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6100,"endOffset":6189,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6221,"endOffset":6559,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6731,"endOffset":7104,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7139,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7240,"endOffset":7706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1520,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1699,"endOffset":1751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"internal/net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1691,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":971,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1021,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1071,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1159,"endOffset":1573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"internal/stream_base_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6821,"count":1}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1106,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":1963,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2475,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2678,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3321,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3530,"endOffset":3839,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":3841,"endOffset":5692,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5694,"endOffset":6596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/dtrace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26457,"count":1}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":2676,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":3685,"endOffset":3763,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":3766,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":4202,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":4774,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5133,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":5582,"endOffset":9172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9202,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":9948,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":10296,"endOffset":10938,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":10971,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":11383,"endOffset":11824,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":11828,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":12216,"endOffset":12543,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12546,"endOffset":12958,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":12961,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":13084,"endOffset":13208,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":13211,"endOffset":13408,"count":0}],"isBlockCoverage":false},{"functionName":"isConnected","ranges":[{"startOffset":13410,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":14097,"endOffset":16691,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":16694,"endOffset":17833,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":17835,"endOffset":18012,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":18039,"endOffset":18574,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":18578,"endOffset":18632,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18662,"endOffset":18852,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":18888,"endOffset":19198,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":19234,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":19412,"endOffset":19586,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":19625,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":19861,"endOffset":20061,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":20106,"endOffset":20368,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":20404,"endOffset":20778,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":20816,"endOffset":21193,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":21243,"endOffset":22000,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":22052,"endOffset":22815,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":22819,"endOffset":22982,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":22985,"endOffset":23149,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":23152,"endOffset":23406,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":23432,"endOffset":23539,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":23568,"endOffset":23677,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":23718,"endOffset":23775,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":23816,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":23914,"endOffset":23971,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":24012,"endOffset":24069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24170,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24297,"endOffset":24353,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24486,"endOffset":24543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24619,"endOffset":24678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24814,"endOffset":24871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24947,"endOffset":25006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25138,"endOffset":25191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25263,"endOffset":25318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25450,"endOffset":25507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25583,"endOffset":25642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25748,"endOffset":25783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25892,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26195,"endOffset":26231,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26235,"endOffset":26276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"internal/dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1844,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":448,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":552,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":649,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1320,"endOffset":1768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"internal/socket_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/child_process/serialization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":775,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1090,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1513,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1629,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":2285,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":2726,"endOffset":2831,"count":1}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":2836,"endOffset":3598,"count":2},{"startOffset":2910,"endOffset":2917,"count":0},{"startOffset":2972,"endOffset":3024,"count":1},{"startOffset":3284,"endOffset":3338,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3603,"endOffset":3766,"count":8}],"isBlockCoverage":true}]},{"scriptId":"77","url":"string_decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":1850,"endOffset":2112,"count":1},{"startOffset":1962,"endOffset":2095,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2382,"endOffset":2581,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2615,"endOffset":2916,"count":2},{"startOffset":2672,"endOffset":2683,"count":0},{"startOffset":2719,"endOffset":2870,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":2949,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3237,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3511,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3735,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3869,"endOffset":3984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"v8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8781,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":1665,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":1869,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":3302,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":3406,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":4187,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":4746,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":5246,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":6648,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":6740,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":7409,"endOffset":8222,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8226,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":8372,"endOffset":8497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"internal/heap_utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":322,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":480,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":553,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":737,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42718,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":3392,"endOffset":3461,"count":1}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":3821,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4638,"endOffset":4955,"count":2670},{"startOffset":4736,"endOffset":4830,"count":80},{"startOffset":4812,"endOffset":4826,"count":16},{"startOffset":4830,"endOffset":4904,"count":2654},{"startOffset":4904,"endOffset":4936,"count":64},{"startOffset":4936,"endOffset":4954,"count":2654}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":4957,"endOffset":5132,"count":883},{"startOffset":5030,"endOffset":5048,"count":882},{"startOffset":5065,"endOffset":5103,"count":882},{"startOffset":5075,"endOffset":5102,"count":420},{"startOffset":5109,"endOffset":5130,"count":882}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5134,"endOffset":5371,"count":463}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":5822,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6044,"endOffset":6166,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6171,"endOffset":6304,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6351,"endOffset":6379,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6384,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6488,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6529,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":7010,"endOffset":7854,"count":2656},{"startOffset":7190,"endOffset":7206,"count":2434},{"startOffset":7206,"endOffset":7306,"count":222},{"startOffset":7306,"endOffset":7372,"count":123},{"startOffset":7372,"endOffset":7390,"count":99},{"startOffset":7390,"endOffset":7485,"count":0},{"startOffset":7485,"endOffset":7737,"count":99},{"startOffset":7737,"endOffset":7852,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":7856,"endOffset":8329,"count":1119},{"startOffset":8065,"endOffset":8311,"count":2312},{"startOffset":8180,"endOffset":8193,"count":0},{"startOffset":8251,"endOffset":8307,"count":1119},{"startOffset":8311,"endOffset":8328,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageMain","ranges":[{"startOffset":8331,"endOffset":8449,"count":160},{"startOffset":8424,"endOffset":8434,"count":127},{"startOffset":8435,"endOffset":8446,"count":33}],"isBlockCoverage":true},{"functionName":"readPackageExports","ranges":[{"startOffset":8451,"endOffset":8575,"count":184},{"startOffset":8547,"endOffset":8560,"count":137},{"startOffset":8561,"endOffset":8572,"count":47}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":8577,"endOffset":9876,"count":160},{"startOffset":8697,"endOffset":8778,"count":73},{"startOffset":8778,"endOffset":8872,"count":87},{"startOffset":8872,"endOffset":8916,"count":3},{"startOffset":8917,"endOffset":8984,"count":2},{"startOffset":9010,"endOffset":9857,"count":0},{"startOffset":9857,"endOffset":9875,"count":87}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":10217,"endOffset":10427,"count":1194},{"startOffset":10305,"endOffset":10312,"count":630},{"startOffset":10312,"endOffset":10336,"count":564},{"startOffset":10336,"endOffset":10346,"count":0},{"startOffset":10348,"endOffset":10391,"count":0},{"startOffset":10391,"endOffset":10426,"count":564}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":10429,"endOffset":10560,"count":580}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":10635,"endOffset":10841,"count":686},{"startOffset":10717,"endOffset":10823,"count":1104},{"startOffset":10789,"endOffset":10819,"count":477},{"startOffset":10823,"endOffset":10840,"count":209}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":10930,"endOffset":11366,"count":463},{"startOffset":11138,"endOffset":11348,"count":464},{"startOffset":11189,"endOffset":11198,"count":0},{"startOffset":11320,"endOffset":11344,"count":463},{"startOffset":11348,"endOffset":11365,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":11368,"endOffset":11978,"count":659},{"startOffset":11477,"endOffset":11482,"count":0},{"startOffset":11525,"endOffset":11538,"count":643},{"startOffset":11538,"endOffset":11575,"count":16},{"startOffset":11575,"endOffset":11588,"count":0},{"startOffset":11588,"endOffset":11635,"count":16},{"startOffset":11635,"endOffset":11660,"count":0},{"startOffset":11660,"endOffset":11820,"count":16},{"startOffset":11722,"endOffset":11791,"count":0},{"startOffset":11820,"endOffset":11977,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalDotExportSugar","ranges":[{"startOffset":11980,"endOffset":12799,"count":3},{"startOffset":12077,"endOffset":12089,"count":2},{"startOffset":12089,"endOffset":12123,"count":1},{"startOffset":12123,"endOffset":12135,"count":0},{"startOffset":12135,"endOffset":12175,"count":1},{"startOffset":12175,"endOffset":12188,"count":0},{"startOffset":12188,"endOffset":12773,"count":1},{"startOffset":12424,"endOffset":12769,"count":0},{"startOffset":12773,"endOffset":12798,"count":1}],"isBlockCoverage":true},{"functionName":"applyExports","ranges":[{"startOffset":12801,"endOffset":14710,"count":184},{"startOffset":12965,"endOffset":12987,"count":3},{"startOffset":12993,"endOffset":13006,"count":181},{"startOffset":13006,"endOffset":13069,"count":3},{"startOffset":13069,"endOffset":13102,"count":2},{"startOffset":13102,"endOffset":14642,"count":3},{"startOffset":13385,"endOffset":14638,"count":0},{"startOffset":14642,"endOffset":14709,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":14871,"endOffset":15310,"count":624},{"startOffset":15073,"endOffset":15078,"count":440},{"startOffset":15093,"endOffset":15116,"count":440},{"startOffset":15116,"endOffset":15241,"count":184},{"startOffset":15241,"endOffset":15286,"count":3},{"startOffset":15286,"endOffset":15309,"count":181}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":15312,"endOffset":15561,"count":3},{"startOffset":15435,"endOffset":15558,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":15563,"endOffset":18809,"count":5},{"startOffset":15667,"endOffset":16879,"count":3},{"startOffset":16124,"endOffset":16151,"count":0},{"startOffset":16185,"endOffset":16221,"count":0},{"startOffset":16229,"endOffset":16256,"count":0},{"startOffset":16301,"endOffset":16423,"count":0},{"startOffset":16765,"endOffset":16879,"count":0},{"startOffset":16879,"endOffset":18686,"count":2},{"startOffset":16911,"endOffset":17515,"count":1},{"startOffset":16948,"endOffset":17066,"count":0},{"startOffset":17230,"endOffset":17406,"count":0},{"startOffset":17412,"endOffset":17515,"count":0},{"startOffset":17515,"endOffset":18686,"count":1},{"startOffset":17644,"endOffset":17770,"count":0},{"startOffset":17797,"endOffset":18408,"count":2},{"startOffset":17826,"endOffset":17838,"count":0},{"startOffset":17847,"endOffset":18122,"count":1},{"startOffset":18013,"endOffset":18122,"count":0},{"startOffset":18131,"endOffset":18394,"count":0},{"startOffset":18408,"endOffset":18686,"count":0},{"startOffset":18686,"endOffset":18808,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18875,"endOffset":21627,"count":661},{"startOffset":18985,"endOffset":19008,"count":3},{"startOffset":19008,"endOffset":19071,"count":658},{"startOffset":19048,"endOffset":19071,"count":0},{"startOffset":19147,"endOffset":19157,"count":523},{"startOffset":19158,"endOffset":19178,"count":138},{"startOffset":19243,"endOffset":19256,"count":82},{"startOffset":19256,"endOffset":19379,"count":579},{"startOffset":19403,"endOffset":19540,"count":579},{"startOffset":19540,"endOffset":21608,"count":855},{"startOffset":19638,"endOffset":19658,"count":853},{"startOffset":19660,"endOffset":19669,"count":229},{"startOffset":19669,"endOffset":19697,"count":626},{"startOffset":19697,"endOffset":19952,"count":624},{"startOffset":19871,"endOffset":19877,"count":0},{"startOffset":19905,"endOffset":19946,"count":3},{"startOffset":19952,"endOffset":21259,"count":623},{"startOffset":20103,"endOffset":21036,"count":15},{"startOffset":20136,"endOffset":20304,"count":14},{"startOffset":20170,"endOffset":20230,"count":0},{"startOffset":20304,"endOffset":21028,"count":1},{"startOffset":20336,"endOffset":20968,"count":0},{"startOffset":21059,"endOffset":21253,"count":608},{"startOffset":21149,"endOffset":21187,"count":562},{"startOffset":21259,"endOffset":21279,"count":623},{"startOffset":21279,"endOffset":21290,"count":207},{"startOffset":21292,"endOffset":21508,"count":160},{"startOffset":21402,"endOffset":21440,"count":0},{"startOffset":21508,"endOffset":21528,"count":623},{"startOffset":21528,"endOffset":21604,"count":576},{"startOffset":21608,"endOffset":21626,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":21871,"endOffset":23262,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23354,"endOffset":24395,"count":463},{"startOffset":23632,"endOffset":23657,"count":0},{"startOffset":23950,"endOffset":24288,"count":55391},{"startOffset":24030,"endOffset":24158,"count":4776},{"startOffset":24067,"endOffset":24117,"count":4287},{"startOffset":24158,"endOffset":24282,"count":50615},{"startOffset":24178,"endOffset":24282,"count":12822},{"startOffset":24213,"endOffset":24239,"count":8535},{"startOffset":24239,"endOffset":24274,"count":4287}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":24429,"endOffset":25567,"count":660},{"startOffset":24507,"endOffset":24573,"count":0},{"startOffset":24642,"endOffset":24793,"count":520},{"startOffset":24706,"endOffset":24740,"count":374},{"startOffset":24741,"endOffset":24792,"count":0},{"startOffset":24795,"endOffset":25039,"count":140},{"startOffset":24850,"endOffset":24865,"count":139},{"startOffset":24866,"endOffset":24888,"count":139},{"startOffset":24890,"endOffset":24939,"count":139},{"startOffset":25028,"endOffset":25034,"count":0},{"startOffset":25039,"endOffset":25107,"count":520},{"startOffset":25108,"endOffset":25127,"count":520},{"startOffset":25129,"endOffset":25378,"count":0},{"startOffset":25378,"endOffset":25566,"count":520}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":25570,"endOffset":25753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25946,"endOffset":26318,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":26323,"endOffset":26564,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":26765,"endOffset":27415,"count":6},{"startOffset":27235,"endOffset":27387,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":27827,"endOffset":30640,"count":945},{"startOffset":27910,"endOffset":28687,"count":944},{"startOffset":28330,"endOffset":28683,"count":223},{"startOffset":28520,"endOffset":28570,"count":0},{"startOffset":28615,"endOffset":28683,"count":0},{"startOffset":28687,"endOffset":28841,"count":722},{"startOffset":28841,"endOffset":29014,"count":197},{"startOffset":28927,"endOffset":28977,"count":6},{"startOffset":28977,"endOffset":29014,"count":191},{"startOffset":29014,"endOffset":29077,"count":525},{"startOffset":29077,"endOffset":29104,"count":62},{"startOffset":29106,"endOffset":29125,"count":62},{"startOffset":29125,"endOffset":29256,"count":463},{"startOffset":29256,"endOffset":29315,"count":1},{"startOffset":29315,"endOffset":29689,"count":463},{"startOffset":29689,"endOffset":29879,"count":0},{"startOffset":29879,"endOffset":30612,"count":463},{"startOffset":29970,"endOffset":30352,"count":0},{"startOffset":30377,"endOffset":30419,"count":462},{"startOffset":30420,"endOffset":30532,"count":462},{"startOffset":30534,"endOffset":30608,"count":2},{"startOffset":30612,"endOffset":30639,"count":463}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30669,"endOffset":32857,"count":722},{"startOffset":30764,"endOffset":30789,"count":62},{"startOffset":30789,"endOffset":30839,"count":660},{"startOffset":30839,"endOffset":30858,"count":0},{"startOffset":30860,"endOffset":31843,"count":0},{"startOffset":31843,"endOffset":31926,"count":660},{"startOffset":31926,"endOffset":31944,"count":659},{"startOffset":31946,"endOffset":32208,"count":659},{"startOffset":32022,"endOffset":32204,"count":0},{"startOffset":32208,"endOffset":32371,"count":660},{"startOffset":32371,"endOffset":32856,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":32948,"endOffset":34378,"count":463},{"startOffset":33267,"endOffset":33297,"count":0},{"startOffset":33299,"endOffset":33345,"count":0},{"startOffset":33708,"endOffset":33738,"count":0},{"startOffset":33740,"endOffset":33848,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34150,"endOffset":34365,"count":0}],"isBlockCoverage":false},{"functionName":"Module.require","ranges":[{"startOffset":34496,"endOffset":34795,"count":944},{"startOffset":34556,"endOffset":34674,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":34975,"endOffset":36091,"count":459},{"startOffset":35048,"endOffset":35388,"count":0},{"startOffset":35677,"endOffset":35786,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35229,"endOffset":35375,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35914,"endOffset":36054,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":36291,"endOffset":38105,"count":459},{"startOffset":36371,"endOffset":36518,"count":0},{"startOffset":36699,"endOffset":36723,"count":0},{"startOffset":36725,"endOffset":37461,"count":0},{"startOffset":37684,"endOffset":37706,"count":1},{"startOffset":37731,"endOffset":37870,"count":0},{"startOffset":38069,"endOffset":38086,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":38164,"endOffset":38695,"count":459},{"startOffset":38383,"endOffset":38598,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":38759,"endOffset":39108,"count":4},{"startOffset":38858,"endOffset":38960,"count":0},{"startOffset":39025,"endOffset":39106,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":39172,"endOffset":39475,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":39478,"endOffset":39903,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":40188,"endOffset":40741,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":40802,"endOffset":41710,"count":1},{"startOffset":40843,"endOffset":40868,"count":0},{"startOffset":40920,"endOffset":40943,"count":0},{"startOffset":41151,"endOffset":41193,"count":0},{"startOffset":41460,"endOffset":41589,"count":0}],"isBlockCoverage":true},{"functionName":"pathsFilterCB","ranges":[{"startOffset":41512,"endOffset":41569,"count":0}],"isBlockCoverage":false},{"functionName":"Module._preloadModules","ranges":[{"startOffset":41738,"endOffset":42244,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":42278,"endOffset":42434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12692,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":1965,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4129,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4413,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4823,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":4998,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5219,"endOffset":5810,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5812,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6729,"endOffset":6911,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":6946,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":7781,"endOffset":7857,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8011,"endOffset":8449,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8451,"endOffset":8848,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":8850,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9204,"endOffset":9390,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9392,"endOffset":11125,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11402,"endOffset":12205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":315,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":656,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":1157,"endOffset":1924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9459,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1415,"endOffset":3784,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3788,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":4415,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":5442,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":6121,"endOffset":6292,"count":0}],"isBlockCoverage":false},{"functionName":"hook","ranges":[{"startOffset":6296,"endOffset":7255,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":7259,"endOffset":8063,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":8067,"endOffset":9383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":394,"endOffset":467,"count":463}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":470,"endOffset":746,"count":463},{"startOffset":598,"endOffset":668,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":749,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4960,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":406,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":690,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"instantiate","ranges":[{"startOffset":2307,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"_instantiate","ranges":[{"startOffset":2456,"endOffset":4680,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":4684,"endOffset":4880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25006,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":1600,"endOffset":1952,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":2063,"endOffset":2168,"count":0}],"isBlockCoverage":false},{"functionName":"readIfFile","ranges":[{"startOffset":2170,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":2420,"endOffset":3785,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3787,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":5021,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5102,"endOffset":6682,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":6684,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":6871,"endOffset":7128,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIndex","ranges":[{"startOffset":7130,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7219,"endOffset":8175,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":8177,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"throwSubpathInvalid","ranges":[{"startOffset":8352,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsInvalid","ranges":[{"startOffset":8525,"endOffset":8926,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTargetString","ranges":[{"startOffset":8928,"endOffset":10018,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":10073,"endOffset":10213,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":10215,"endOffset":12324,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":12326,"endOffset":13255,"count":0}],"isBlockCoverage":false},{"functionName":"packageMainResolve","ranges":[{"startOffset":13258,"endOffset":14477,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":14662,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":15936,"endOffset":16054,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":16167,"endOffset":19589,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":19591,"endOffset":19701,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":19703,"endOffset":19974,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":19976,"endOffset":20159,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":20272,"endOffset":20729,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":20875,"endOffset":22283,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":22285,"endOffset":24925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2437,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1105,"endOffset":2391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":373,"endOffset":918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":190,"endOffset":380,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":382,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":613,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7498,"count":1}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":1284,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":1446,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":1643,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":2080,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2331,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":3017,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":4053,"endOffset":4412,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":4476,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6586,"endOffset":7495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12305,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1478,"endOffset":3664,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3668,"endOffset":3805,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3809,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":3946,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4227,"endOffset":4380,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4384,"endOffset":4634,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4638,"endOffset":5117,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5121,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6077,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6667,"endOffset":6703,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":6708,"endOffset":9032,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9036,"endOffset":9335,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9339,"endOffset":9608,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":9612,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":9812,"endOffset":10074,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10119,"endOffset":11371,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11375,"endOffset":11677,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11681,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12265,"endOffset":12300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2442,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":220,"endOffset":658,"count":1},{"startOffset":487,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":660,"endOffset":1212,"count":1},{"startOffset":784,"endOffset":796,"count":0},{"startOffset":941,"endOffset":953,"count":0},{"startOffset":1048,"endOffset":1060,"count":0},{"startOffset":1111,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1214,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2059,"endOffset":2394,"count":1},{"startOffset":2239,"endOffset":2282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"94","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7124,"count":1}],"isBlockCoverage":true},{"functionName":"supportsESM","ranges":[{"startOffset":247,"endOffset":415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":474,"endOffset":6895,"count":1},{"startOffset":1573,"endOffset":1766,"count":0},{"startOffset":5800,"endOffset":5805,"count":0},{"startOffset":5808,"endOffset":5964,"count":0},{"startOffset":6182,"endOffset":6413,"count":0},{"startOffset":6683,"endOffset":6749,"count":0},{"startOffset":6753,"endOffset":6893,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1084,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"checkSelectedByLineNumbers","ranges":[{"startOffset":1751,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2257,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2420,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2614,"endOffset":2638,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2662,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2822,"endOffset":3453,"count":1},{"startOffset":2911,"endOffset":2977,"count":0},{"startOffset":2982,"endOffset":3136,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3166,"endOffset":3448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3210,"endOffset":3267,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3282,"endOffset":3429,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3490,"endOffset":3685,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getRunner","ranges":[{"startOffset":3739,"endOffset":3791,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4157,"endOffset":4188,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4197,"endOffset":4223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4459,"endOffset":4821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4830,"endOffset":4859,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":4924,"endOffset":5747,"count":1},{"startOffset":5032,"endOffset":5590,"count":0},{"startOffset":5632,"endOffset":5718,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6903,"endOffset":7121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/currently-unhandled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/currently-unhandled/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":129,"endOffset":244,"count":0}],"isBlockCoverage":false},{"functionName":"onRejectionHandled","ranges":[{"startOffset":247,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"currentlyUnhandled","ranges":[{"startOffset":436,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/array-find-index/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/ensure-forked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1},{"startOffset":226,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"99","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5810,"count":1},{"startOffset":1506,"endOffset":1738,"count":44},{"startOffset":2031,"endOffset":2326,"count":8},{"startOffset":2360,"endOffset":2726,"count":8},{"startOffset":5685,"endOffset":5704,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":404,"endOffset":783,"count":4},{"startOffset":451,"endOffset":532,"count":2},{"startOffset":534,"endOffset":612,"count":0},{"startOffset":683,"endOffset":702,"count":0},{"startOffset":752,"endOffset":764,"count":1},{"startOffset":765,"endOffset":780,"count":3}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":806,"endOffset":915,"count":2}],"isBlockCoverage":true},{"functionName":"chalkFactory","ranges":[{"startOffset":940,"endOffset":1382,"count":4}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1022,"endOffset":1080,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1209,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1385,"endOffset":1443,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1533,"endOffset":1732,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1760,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2054,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2450,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2766,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2822,"endOffset":2866,"count":33}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2870,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2950,"endOffset":3224,"count":4},{"startOffset":3075,"endOffset":3158,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3249,"endOffset":3833,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3297,"endOffset":3550,"count":33},{"startOffset":3523,"endOffset":3545,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":3855,"endOffset":4895,"count":33},{"startOffset":3908,"endOffset":3950,"count":0},{"startOffset":4008,"endOffset":4029,"count":0},{"startOffset":4106,"endOffset":4435,"count":0},{"startOffset":4772,"endOffset":4855,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":4929,"endOffset":5501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2765,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2456,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1675,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2458,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"os.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7480,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":1877,"endOffset":2118,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":1936,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2396,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2429,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2462,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2510,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2563,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2618,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2671,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2724,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":2784,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":2843,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":2895,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3003,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3105,"endOffset":3517,"count":1},{"startOffset":3207,"endOffset":3212,"count":0},{"startOffset":3274,"endOffset":3498,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":3519,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":3588,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":3609,"endOffset":3659,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":3690,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":3715,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":4261,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":4278,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":4358,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":4463,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":4718,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":5434,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":6113,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":6404,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":6661,"endOffset":6887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1611,"count":2}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1613,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2246,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2465,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3722,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4206,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4383,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4565,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4746,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4921,"endOffset":4971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6291,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2451,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3061,"endOffset":5812,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":5814,"endOffset":6238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"106","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107,"endOffset":399,"count":2},{"startOffset":139,"endOffset":153,"count":0},{"startOffset":186,"endOffset":260,"count":1},{"startOffset":263,"endOffset":323,"count":0},{"startOffset":326,"endOffset":373,"count":1},{"startOffset":376,"endOffset":394,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":496,"endOffset":575,"count":8}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":599,"endOffset":645,"count":2}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":709,"endOffset":1010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":965,"count":1}],"isBlockCoverage":true}]},{"scriptId":"108","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8851,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":300,"endOffset":478,"count":28},{"startOffset":373,"endOffset":405,"count":9},{"startOffset":407,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"assertListener","ranges":[{"startOffset":480,"endOffset":613,"count":9},{"startOffset":553,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"getListeners","ranges":[{"startOffset":615,"endOffset":804,"count":25},{"startOffset":730,"endOffset":770,"count":10}],"isBlockCoverage":true},{"functionName":"getEventProducers","ranges":[{"startOffset":806,"endOffset":1067,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1069,"endOffset":1479,"count":16},{"startOffset":1207,"endOffset":1300,"count":0},{"startOffset":1335,"endOffset":1477,"count":0}],"isBlockCoverage":true},{"functionName":"iterator","ranges":[{"startOffset":1481,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2397,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"isListenerSymbol","ranges":[{"startOffset":2945,"endOffset":3009,"count":25},{"startOffset":2980,"endOffset":3009,"count":18}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3037,"endOffset":4117,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":4120,"endOffset":4240,"count":2}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4243,"endOffset":4523,"count":7}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":4526,"endOffset":4761,"count":2}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":4764,"endOffset":4936,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4803,"endOffset":4931,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4881,"endOffset":4925,"count":2}],"isBlockCoverage":true},{"functionName":"events","ranges":[{"startOffset":4939,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5030,"endOffset":5689,"count":16},{"startOffset":5336,"endOffset":5340,"count":9},{"startOffset":5341,"endOffset":5360,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5437,"endOffset":5535,"count":7},{"startOffset":5530,"endOffset":5534,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5567,"endOffset":5679,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":5692,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":6310,"endOffset":6475,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":6478,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":6521,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":6652,"endOffset":7206,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":7209,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":7733,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8322,"endOffset":8346,"count":13}],"isBlockCoverage":true}]},{"scriptId":"109","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":48,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":164,"endOffset":276,"count":1},{"startOffset":194,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/chalk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":77,"endOffset":172,"count":1},{"startOffset":96,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"exports.set","ranges":[{"startOffset":189,"endOffset":324,"count":1},{"startOffset":212,"endOffset":272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"111","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/now-and-timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"112","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/provider-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1241,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":235,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"exports.babel","ranges":[{"startOffset":1123,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"exports.typescript","ranges":[{"startOffset":1190,"endOffset":1239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/globs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7695,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":526,"endOffset":554,"count":7}],"isBlockCoverage":true},{"functionName":"buildExtensionPattern","ranges":[{"startOffset":956,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePattern","ranges":[{"startOffset":1042,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePatterns","ranges":[{"startOffset":1419,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGlobs","ranges":[{"startOffset":1569,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":3490,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":3619,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":4269,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"findTests","ranges":[{"startOffset":4457,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"getChokidarIgnorePatterns","ranges":[{"startOffset":4665,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"processMatchingPatterns","ranges":[{"startOffset":5016,"endOffset":5566,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":5569,"endOffset":5678,"count":0}],"isBlockCoverage":false},{"functionName":"matchesIgnorePatterns","ranges":[{"startOffset":5738,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFileForMatching","ranges":[{"startOffset":5883,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"isHelperish","ranges":[{"startOffset":6462,"endOffset":7083,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":7121,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"applyTestFileFilter","ranges":[{"startOffset":7496,"endOffset":7642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1}],"isBlockCoverage":true},{"functionName":"DEFAULT_FILTER","ranges":[{"startOffset":323,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":356,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":416,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"checkCwdOption","ranges":[{"startOffset":599,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"getPathString","ranges":[{"startOffset":862,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobTasks","ranges":[{"startOffset":936,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"globDirs","ranges":[{"startOffset":1555,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"getPattern","ranges":[{"startOffset":1981,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterSync","ranges":[{"startOffset":2088,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"globToTask","ranges":[{"startOffset":2244,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2487,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":3240,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.stream","ranges":[{"startOffset":3705,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.hasMagic","ranges":[{"startOffset":4302,"endOffset":4409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"internal/fs/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13434,"count":1}],"isBlockCoverage":false},{"functionName":"allocNewPool","ranges":[{"startOffset":1130,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"checkPosition","ranges":[{"startOffset":1348,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"roundUpToMultipleOf8","ranges":[{"startOffset":1708,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1799,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4028,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"_openReadFs","ranges":[{"startOffset":4163,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":4675,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7202,"endOffset":7489,"count":0}],"isBlockCoverage":false},{"functionName":"closeFsStream","ranges":[{"startOffset":7492,"endOffset":7648,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":7679,"endOffset":7765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7826,"endOffset":7860,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":7888,"endOffset":10133,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._final","ranges":[{"startOffset":10276,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10479,"endOffset":10515,"count":0}],"isBlockCoverage":false},{"functionName":"_openWriteFs","ranges":[{"startOffset":10618,"endOffset":11051,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":11085,"endOffset":11753,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11789,"endOffset":12679,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12777,"endOffset":13159,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13322,"endOffset":13356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15615,"count":1}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":1696,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncId","ranges":[{"startOffset":1792,"endOffset":1849,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":1853,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":1893,"endOffset":1967,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":1971,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2023,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2083,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2131,"endOffset":2167,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2171,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":2276,"endOffset":2349,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2353,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":2416,"endOffset":2468,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":2532,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2602,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":2709,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":2788,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2865,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"validateFileHandle","ranges":[{"startOffset":2942,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":3094,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":3445,"endOffset":4308,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":4461,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4684,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":5162,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5489,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":6243,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":6595,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":7549,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":7913,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":8221,"endOffset":8356,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":8358,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":8549,"endOffset":8812,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":8814,"endOffset":8933,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":8935,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":9048,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":9582,"endOffset":10034,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":10036,"endOffset":10279,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":10281,"endOffset":10694,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":10696,"endOffset":10904,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":10906,"endOffset":11176,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":11178,"endOffset":11445,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":11447,"endOffset":11770,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":11772,"endOffset":11910,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":11912,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":12077,"endOffset":12263,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":12265,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":12488,"endOffset":12730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":12732,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":12927,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":13168,"endOffset":13440,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":13442,"endOffset":13671,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":13673,"endOffset":13850,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":13852,"endOffset":14182,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":14184,"endOffset":14680,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":14682,"endOffset":14923,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":14925,"endOffset":15229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7030,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1122,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1585,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2446,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2884,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3185,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3860,"endOffset":4058,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4061,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4769,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5255,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6534,"endOffset":6970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/array-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2702,"endOffset":3240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1},{"startOffset":2151,"endOffset":2169,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":284,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":627,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":654,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":874,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1411,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1710,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":1981,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":2173,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":2477,"endOffset":2794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2972,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":115,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":827,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1424,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":1578,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":1893,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2363,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":2646,"endOffset":2906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true}]},{"scriptId":"123","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":583,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":79,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":218,"endOffset":549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":79,"endOffset":154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":108,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":582,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":314,"endOffset":387,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":417,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":539,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":660,"endOffset":1158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4298,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":554,"endOffset":655,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":701,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":1523,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":1703,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":1841,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":1990,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":2121,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":2266,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":2411,"endOffset":2511,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":2559,"endOffset":2633,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":2671,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":2819,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":3064,"endOffset":3254,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":3334,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":3529,"endOffset":3826,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":3872,"endOffset":3959,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":3987,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":4158,"endOffset":4266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":447,"endOffset":1104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":405,"endOffset":1151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13682,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":187,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":807,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2804,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3457,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4220,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5371,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6710,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7742,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8840,"endOffset":9096,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":9897,"endOffset":10105,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10816,"endOffset":11112,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11564,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":11951,"endOffset":11987,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12373,"endOffset":12593,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13160,"endOffset":13397,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13451,"endOffset":13620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8085,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2076,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2140,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2189,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2270,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2332,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2394,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":2456,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2515,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2593,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2698,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2764,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2885,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":3083,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3399,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":4288,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":4906,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5242,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5671,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7054,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":7631,"endOffset":7836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"144","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9377,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":14},{"startOffset":242,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":15},{"startOffset":1087,"endOffset":1365,"count":1},{"startOffset":1365,"endOffset":1400,"count":14},{"startOffset":1400,"endOffset":1414,"count":0},{"startOffset":1415,"endOffset":1428,"count":0},{"startOffset":1449,"endOffset":1490,"count":14},{"startOffset":1478,"endOffset":1489,"count":0},{"startOffset":1492,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1597,"count":14},{"startOffset":1669,"endOffset":1705,"count":0},{"startOffset":1710,"endOffset":1756,"count":14},{"startOffset":1861,"endOffset":2015,"count":0},{"startOffset":2015,"endOffset":2783,"count":14},{"startOffset":2783,"endOffset":2815,"count":0},{"startOffset":2815,"endOffset":2835,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":1161,"count":14}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1189,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1829,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":2035,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7249,"endOffset":7765,"count":14},{"startOffset":7344,"endOffset":7375,"count":0},{"startOffset":7439,"endOffset":7443,"count":0},{"startOffset":7482,"endOffset":7486,"count":0},{"startOffset":7594,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":7787,"endOffset":8538,"count":14},{"startOffset":7895,"endOffset":7956,"count":0},{"startOffset":8104,"endOffset":8172,"count":0},{"startOffset":8226,"endOffset":8245,"count":8},{"startOffset":8248,"endOffset":8299,"count":8},{"startOffset":8422,"endOffset":8461,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9000,"endOffset":9228,"count":14},{"startOffset":9120,"endOffset":9125,"count":0},{"startOffset":9138,"endOffset":9226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8955,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1438,"endOffset":8929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":36},{"startOffset":1010,"endOffset":1049,"count":0},{"startOffset":1051,"endOffset":1084,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":22},{"startOffset":1505,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":6},{"startOffset":1682,"endOffset":1686,"count":0},{"startOffset":1728,"endOffset":1732,"count":0},{"startOffset":1821,"endOffset":1864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":14}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":22},{"startOffset":4410,"endOffset":4425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27098,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":24549,"count":14},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2111,"endOffset":2115,"count":0},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2212,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2287,"count":0},{"startOffset":2359,"endOffset":2397,"count":0},{"startOffset":6228,"endOffset":7451,"count":6},{"startOffset":7025,"endOffset":7258,"count":0},{"startOffset":7285,"endOffset":7310,"count":3},{"startOffset":7312,"endOffset":7367,"count":0},{"startOffset":7451,"endOffset":7532,"count":8},{"startOffset":7532,"endOffset":23426,"count":43},{"startOffset":7586,"endOffset":7609,"count":0},{"startOffset":7678,"endOffset":8506,"count":0},{"startOffset":8652,"endOffset":8715,"count":0},{"startOffset":8717,"endOffset":9849,"count":0},{"startOffset":9992,"endOffset":10008,"count":0},{"startOffset":10010,"endOffset":10125,"count":0},{"startOffset":10188,"endOffset":10345,"count":0},{"startOffset":10406,"endOffset":10494,"count":0},{"startOffset":10519,"endOffset":10954,"count":0},{"startOffset":11019,"endOffset":11378,"count":0},{"startOffset":11403,"endOffset":12858,"count":0},{"startOffset":12913,"endOffset":12937,"count":0},{"startOffset":12939,"endOffset":13206,"count":0},{"startOffset":13231,"endOffset":14361,"count":0},{"startOffset":14416,"endOffset":14569,"count":0},{"startOffset":14625,"endOffset":14886,"count":0},{"startOffset":14943,"endOffset":15553,"count":7},{"startOffset":15234,"endOffset":15268,"count":0},{"startOffset":15270,"endOffset":15469,"count":0},{"startOffset":15553,"endOffset":15607,"count":36},{"startOffset":15607,"endOffset":16173,"count":3},{"startOffset":15636,"endOffset":15658,"count":0},{"startOffset":15660,"endOffset":15909,"count":0},{"startOffset":15980,"endOffset":16004,"count":0},{"startOffset":16006,"endOffset":16093,"count":0},{"startOffset":16173,"endOffset":16237,"count":33},{"startOffset":16237,"endOffset":17174,"count":0},{"startOffset":17174,"endOffset":17235,"count":33},{"startOffset":17235,"endOffset":17535,"count":0},{"startOffset":17535,"endOffset":17589,"count":33},{"startOffset":17589,"endOffset":18139,"count":0},{"startOffset":18139,"endOffset":18199,"count":33},{"startOffset":18199,"endOffset":18424,"count":0},{"startOffset":18424,"endOffset":18484,"count":33},{"startOffset":18484,"endOffset":18785,"count":8},{"startOffset":18528,"endOffset":18567,"count":0},{"startOffset":18785,"endOffset":18881,"count":25},{"startOffset":18883,"endOffset":19090,"count":0},{"startOffset":19090,"endOffset":19175,"count":25},{"startOffset":19177,"endOffset":19234,"count":0},{"startOffset":19234,"endOffset":19266,"count":25},{"startOffset":19266,"endOffset":22465,"count":9},{"startOffset":19304,"endOffset":19355,"count":0},{"startOffset":19466,"endOffset":19489,"count":2},{"startOffset":19522,"endOffset":19579,"count":7},{"startOffset":19611,"endOffset":19656,"count":0},{"startOffset":19658,"endOffset":19736,"count":0},{"startOffset":19777,"endOffset":19830,"count":0},{"startOffset":19872,"endOffset":19924,"count":0},{"startOffset":19945,"endOffset":19970,"count":0},{"startOffset":19971,"endOffset":19982,"count":0},{"startOffset":19983,"endOffset":19996,"count":0},{"startOffset":19998,"endOffset":20076,"count":0},{"startOffset":20153,"endOffset":20330,"count":0},{"startOffset":20363,"endOffset":20371,"count":2},{"startOffset":20373,"endOffset":20590,"count":0},{"startOffset":20625,"endOffset":20653,"count":7},{"startOffset":20654,"endOffset":20667,"count":7},{"startOffset":20668,"endOffset":20676,"count":7},{"startOffset":20678,"endOffset":21078,"count":0},{"startOffset":21113,"endOffset":21141,"count":7},{"startOffset":21142,"endOffset":21160,"count":7},{"startOffset":21162,"endOffset":21695,"count":7},{"startOffset":21210,"endOffset":21214,"count":0},{"startOffset":21695,"endOffset":21746,"count":2},{"startOffset":21748,"endOffset":22078,"count":2},{"startOffset":22078,"endOffset":22465,"count":0},{"startOffset":22465,"endOffset":22553,"count":16},{"startOffset":22553,"endOffset":22734,"count":0},{"startOffset":22734,"endOffset":22802,"count":16},{"startOffset":22803,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22897,"count":0},{"startOffset":22897,"endOffset":22935,"count":16},{"startOffset":22935,"endOffset":22959,"count":14},{"startOffset":22960,"endOffset":22982,"count":0},{"startOffset":22984,"endOffset":23404,"count":16},{"startOffset":23017,"endOffset":23102,"count":0},{"startOffset":23131,"endOffset":23218,"count":0},{"startOffset":23322,"endOffset":23398,"count":7},{"startOffset":23404,"endOffset":23426,"count":16},{"startOffset":23426,"endOffset":23457,"count":8},{"startOffset":23457,"endOffset":23635,"count":0},{"startOffset":23635,"endOffset":23664,"count":8},{"startOffset":23664,"endOffset":23840,"count":0},{"startOffset":23840,"endOffset":23869,"count":8},{"startOffset":23869,"endOffset":24045,"count":0},{"startOffset":24045,"endOffset":24133,"count":8},{"startOffset":24106,"endOffset":24132,"count":1},{"startOffset":24135,"endOffset":24215,"count":7},{"startOffset":24215,"endOffset":24309,"count":8},{"startOffset":24309,"endOffset":24530,"count":0},{"startOffset":24530,"endOffset":24548,"count":8}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1977,"endOffset":2083,"count":9},{"startOffset":2044,"endOffset":2056,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2891,"endOffset":2920,"count":60}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2950,"endOffset":2983,"count":16}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":3019,"endOffset":3045,"count":52}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3067,"endOffset":3101,"count":33}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3121,"endOffset":3204,"count":59}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3223,"endOffset":3334,"count":50},{"startOffset":3275,"endOffset":3289,"count":42},{"startOffset":3290,"endOffset":3303,"count":8}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3354,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3653,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3730,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4104,"endOffset":5060,"count":50},{"startOffset":4147,"endOffset":4639,"count":9},{"startOffset":4188,"endOffset":4237,"count":0},{"startOffset":4304,"endOffset":4352,"count":0},{"startOffset":4387,"endOffset":4410,"count":0},{"startOffset":4411,"endOffset":4422,"count":0},{"startOffset":4423,"endOffset":4436,"count":0},{"startOffset":4438,"endOffset":4633,"count":0},{"startOffset":4665,"endOffset":4688,"count":0},{"startOffset":4689,"endOffset":4717,"count":0},{"startOffset":4719,"endOffset":4782,"count":0},{"startOffset":4802,"endOffset":4815,"count":7},{"startOffset":4867,"endOffset":4889,"count":7},{"startOffset":4891,"endOffset":4996,"count":0}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5085,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5542,"endOffset":6126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6320,"endOffset":6991,"count":4},{"startOffset":6387,"endOffset":6442,"count":0},{"startOffset":6469,"endOffset":6730,"count":0},{"startOffset":6757,"endOffset":6815,"count":3},{"startOffset":6815,"endOffset":6842,"count":1},{"startOffset":6842,"endOffset":6952,"count":0},{"startOffset":6952,"endOffset":6970,"count":1},{"startOffset":6970,"endOffset":6973,"count":0},{"startOffset":6974,"endOffset":6984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7162,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":24772,"endOffset":27071,"count":8},{"startOffset":24874,"endOffset":24912,"count":0},{"startOffset":24972,"endOffset":25068,"count":0},{"startOffset":25422,"endOffset":25431,"count":0},{"startOffset":25470,"endOffset":25485,"count":0},{"startOffset":25527,"endOffset":25531,"count":0},{"startOffset":25620,"endOffset":25627,"count":0},{"startOffset":25657,"endOffset":25686,"count":0},{"startOffset":26979,"endOffset":27009,"count":0},{"startOffset":27011,"endOffset":27051,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":25707,"endOffset":25860,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":25880,"endOffset":26880,"count":10},{"startOffset":25914,"endOffset":25968,"count":0},{"startOffset":25976,"endOffset":26037,"count":0},{"startOffset":26045,"endOffset":26122,"count":0},{"startOffset":26130,"endOffset":26220,"count":0},{"startOffset":26228,"endOffset":26277,"count":0},{"startOffset":26285,"endOffset":26391,"count":0},{"startOffset":26399,"endOffset":26528,"count":0},{"startOffset":26536,"endOffset":26646,"count":0},{"startOffset":26735,"endOffset":26742,"count":8},{"startOffset":26742,"endOffset":26813,"count":2},{"startOffset":26813,"endOffset":26870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":621,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":114,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":512,"endOffset":619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":79,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":179,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1041,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":224,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":344,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":811,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":296,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":436,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":528,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1311,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1630,"endOffset":1887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":250,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":559,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":731,"endOffset":937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1116,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":960,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1034,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":139,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":574,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":242,"endOffset":464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":303,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":655,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":885,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1123,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":152,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":371,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":778,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":852,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3115,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":326,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":843,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1080,"endOffset":1280,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1286,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1364,"endOffset":1438,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1444,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1520,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1768,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2157,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2399,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3007,"endOffset":3078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":957,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":250,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":568,"endOffset":711,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":749,"endOffset":955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3471,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":244,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":523,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1490,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2086,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3315,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3389,"endOffset":3469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":30,"endOffset":898,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":509,"endOffset":552,"count":0},{"startOffset":675,"endOffset":707,"count":0}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":108,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":582,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":206,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":455,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1320,"endOffset":1868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":215,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":962,"endOffset":1050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":302,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3517,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":48,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3121,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3142,"endOffset":3488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":79,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":275,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":411,"endOffset":526,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":596,"endOffset":721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":136,"endOffset":337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":190,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":557,"endOffset":918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":149,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":331,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":431,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":583,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":674,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":829,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1175,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1323,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1847,"endOffset":1912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":183,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1122,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":211,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":537,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":639,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":946,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":315,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":712,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":811,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1593,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2299,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":193,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":342,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":595,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":721,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":982,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1534,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":1628,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1758,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2000,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2139,"endOffset":2263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1459,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":174,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1930,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":139,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":395,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":1118,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1727,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2224,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":143,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":325,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":637,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1310,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1393,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1481,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1586,"endOffset":1701,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1707,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2002,"endOffset":2187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":143,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":217,"endOffset":294,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":300,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":222,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":304,"endOffset":829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":262,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":382,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":998,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":219,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":337,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":573,"endOffset":764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":257,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":401,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":491,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":909,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1246,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2526,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":396,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2258,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2352,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/dir-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":106,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":206,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"addExtensions","ranges":[{"startOffset":376,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"getGlob","ranges":[{"startOffset":525,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1344,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1877,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/path-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1176,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":78,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeSync","ranges":[{"startOffset":446,"endOffset":770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/gitignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2589,"count":1}],"isBlockCoverage":true},{"functionName":"mapGitIgnorePatternTo","ranges":[{"startOffset":392,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"parseGitIgnore","ranges":[{"startOffset":568,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"reduceIgnore","ranges":[{"startOffset":830,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"ensureAbsolutePathForCwd","ranges":[{"startOffset":1053,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"getIsIgnoredPredecate","ranges":[{"startOffset":1276,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"getFile","ranges":[{"startOffset":1407,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSync","ranges":[{"startOffset":1590,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1772,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1874,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2254,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15352,"count":1},{"startOffset":591,"endOffset":606,"count":0},{"startOffset":14909,"endOffset":15351,"count":0}],"isBlockCoverage":true},{"functionName":"makeArray","ranges":[{"startOffset":41,"endOffset":135,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":623,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":866,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRangeBackSlash","ranges":[{"startOffset":1188,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2097,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2214,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2880,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2989,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3253,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3353,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3785,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"startingReplacer","ranges":[{"startOffset":4026,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5218,"endOffset":5688,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5961,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6180,"endOffset":6192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6242,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6447,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":7495,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"REPLACERS","ranges":[{"startOffset":7704,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"makeRegex","ranges":[{"startOffset":8201,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8632,"endOffset":8670,"count":0}],"isBlockCoverage":false},{"functionName":"checkPattern","ranges":[{"startOffset":8777,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"splitPattern","ranges":[{"startOffset":8967,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreRule","ranges":[{"startOffset":9035,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"createRule","ranges":[{"startOffset":9234,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":9995,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":10063,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"isNotRelative","ranges":[{"startOffset":10623,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.convert","ranges":[{"startOffset":10727,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"Ignore","ranges":[{"startOffset":10752,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"_initCache","ranges":[{"startOffset":10920,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_addPattern","ranges":[{"startOffset":11029,"endOffset":11359,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11417,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":11760,"endOffset":11815,"count":0}],"isBlockCoverage":false},{"functionName":"_testOne","ranges":[{"startOffset":12409,"endOffset":12916,"count":0}],"isBlockCoverage":false},{"functionName":"_test","ranges":[{"startOffset":12947,"endOffset":13211,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":13215,"endOffset":14001,"count":0}],"isBlockCoverage":false},{"functionName":"ignores","ranges":[{"startOffset":14005,"endOffset":14087,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":14091,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":14155,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":14262,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":14350,"endOffset":14380,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":14402,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"isPathValid","ranges":[{"startOffset":14435,"endOffset":14506,"count":0}],"isBlockCoverage":false},{"functionName":"makePosix","ranges":[{"startOffset":14970,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.isNotRelative","ranges":[{"startOffset":15269,"endOffset":15349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/globby/stream-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectTransform","ranges":[{"startOffset":97,"endOffset":151,"count":0}],"isBlockCoverage":false},{"functionName":"FilterStream","ranges":[{"startOffset":201,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":264,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"UniqueStream","ranges":[{"startOffset":422,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":482,"endOffset":622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ignore-by-default/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"exports.directories","ranges":[{"startOffset":36,"endOffset":613,"count":1}],"isBlockCoverage":true}]},{"scriptId":"197","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14283,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":410,"endOffset":5113,"count":1},{"startOffset":491,"endOffset":496,"count":0},{"startOffset":744,"endOffset":749,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.registerUniqueTitle","ranges":[{"startOffset":1508,"endOffset":1632,"count":1},{"startOffset":1555,"endOffset":1579,"count":0}],"isBlockCoverage":true},{"functionName":"get snapshotDirectory","ranges":[{"startOffset":1748,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.chain.createChain.serial","ranges":[{"startOffset":1964,"endOffset":4898,"count":2},{"startOffset":2043,"endOffset":2193,"count":0},{"startOffset":2219,"endOffset":2332,"count":1},{"startOffset":2457,"endOffset":2522,"count":0},{"startOffset":2546,"endOffset":3361,"count":0},{"startOffset":3407,"endOffset":3526,"count":0},{"startOffset":3668,"endOffset":3679,"count":1},{"startOffset":3681,"endOffset":3754,"count":0},{"startOffset":3774,"endOffset":4021,"count":1},{"startOffset":3812,"endOffset":3876,"count":0},{"startOffset":3903,"endOffset":3959,"count":0},{"startOffset":4057,"endOffset":4092,"count":1},{"startOffset":4094,"endOffset":4159,"count":0},{"startOffset":4302,"endOffset":4766,"count":1},{"startOffset":4337,"endOffset":4458,"count":0},{"startOffset":4495,"endOffset":4541,"count":0},{"startOffset":4576,"endOffset":4586,"count":0},{"startOffset":4766,"endOffset":4883,"count":1},{"startOffset":4847,"endOffset":4857,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2269,"endOffset":2325,"count":1}],"isBlockCoverage":true},{"functionName":"compareTestSnapshot","ranges":[{"startOffset":5116,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotState","ranges":[{"startOffset":5502,"endOffset":5844,"count":1},{"startOffset":5546,"endOffset":5584,"count":0},{"startOffset":5614,"endOffset":5825,"count":0}],"isBlockCoverage":true},{"functionName":"onRun","ranges":[{"startOffset":5847,"endOffset":5905,"count":2}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":5908,"endOffset":5977,"count":2}],"isBlockCoverage":true},{"functionName":"attributeLeakedError","ranges":[{"startOffset":5980,"endOffset":6147,"count":0}],"isBlockCoverage":false},{"functionName":"beforeExitHandler","ranges":[{"startOffset":6150,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"runMultiple","ranges":[{"startOffset":6267,"endOffset":7483,"count":6}],"isBlockCoverage":true},{"functionName":"runAndStoreResult","ranges":[{"startOffset":6378,"endOffset":6536,"count":1},{"startOffset":6471,"endOffset":6500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6605,"endOffset":7425,"count":1},{"startOffset":6679,"endOffset":6966,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6715,"endOffset":6933,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7029,"endOffset":7413,"count":1},{"startOffset":7347,"endOffset":7374,"count":0}],"isBlockCoverage":true},{"functionName":"runSingle","ranges":[{"startOffset":7486,"endOffset":7757,"count":2}],"isBlockCoverage":true},{"functionName":"runHooks","ranges":[{"startOffset":7760,"endOffset":8861,"count":6},{"startOffset":8427,"endOffset":8829,"count":1},{"startOffset":8605,"endOffset":8825,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7847,"endOffset":8316,"count":1},{"startOffset":8008,"endOffset":8073,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":8014,"endOffset":8073,"count":0}],"isBlockCoverage":false},{"functionName":"runTest","ranges":[{"startOffset":8864,"endOffset":10483,"count":1},{"startOffset":9318,"endOffset":9384,"count":0},{"startOffset":10005,"endOffset":10335,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":9325,"endOffset":9384,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":10486,"endOffset":14208,"count":1},{"startOffset":10598,"endOffset":11016,"count":0},{"startOffset":11093,"endOffset":11120,"count":0},{"startOffset":11122,"endOffset":11142,"count":0},{"startOffset":11183,"endOffset":11209,"count":0},{"startOffset":11211,"endOffset":11231,"count":0},{"startOffset":11465,"endOffset":11501,"count":0},{"startOffset":11596,"endOffset":11914,"count":0},{"startOffset":11951,"endOffset":11978,"count":0},{"startOffset":11980,"endOffset":12076,"count":0},{"startOffset":14150,"endOffset":14205,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12303,"endOffset":12911,"count":1},{"startOffset":12446,"endOffset":12470,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12501,"endOffset":12899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12991,"endOffset":13661,"count":1},{"startOffset":13236,"endOffset":13252,"count":0},{"startOffset":13255,"endOffset":13279,"count":0},{"startOffset":13350,"endOffset":13373,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13554,"endOffset":13618,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13647,"endOffset":13655,"count":1}],"isBlockCoverage":true},{"functionName":"interrupt","ranges":[{"startOffset":14211,"endOffset":14254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/matcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1785,"count":1}],"isBlockCoverage":true},{"functionName":"makeRegexp","ranges":[{"startOffset":107,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":667,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.isMatch","ranges":[{"startOffset":1401,"endOffset":1783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/matcher/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/context-ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"ContextRef","ranges":[{"startOffset":74,"endOffset":111,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":114,"endOffset":145,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":148,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":194,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"LateBinding","ranges":[{"startOffset":310,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":479,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":482,"endOffset":544,"count":1}],"isBlockCoverage":true}]},{"scriptId":"202","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":967,"endOffset":1039,"count":1}],"isBlockCoverage":true}]},{"scriptId":"203","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseClone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"baseClone","ranges":[{"startOffset":3365,"endOffset":5545,"count":113},{"startOffset":3596,"endOffset":3682,"count":112},{"startOffset":3618,"endOffset":3657,"count":111},{"startOffset":3658,"endOffset":3677,"count":1},{"startOffset":3711,"endOffset":3735,"count":62},{"startOffset":3735,"endOffset":3760,"count":51},{"startOffset":3760,"endOffset":3783,"count":0},{"startOffset":3783,"endOffset":3827,"count":51},{"startOffset":3827,"endOffset":3932,"count":0},{"startOffset":3932,"endOffset":4550,"count":51},{"startOffset":4045,"endOffset":4093,"count":0},{"startOffset":4119,"endOffset":4136,"count":0},{"startOffset":4137,"endOffset":4159,"count":0},{"startOffset":4197,"endOffset":4201,"count":0},{"startOffset":4247,"endOffset":4399,"count":1},{"startOffset":4281,"endOffset":4332,"count":0},{"startOffset":4405,"endOffset":4546,"count":0},{"startOffset":4550,"endOffset":4630,"count":50},{"startOffset":4630,"endOffset":4652,"count":1},{"startOffset":4703,"endOffset":4728,"count":12},{"startOffset":4728,"endOffset":4778,"count":38},{"startOffset":4778,"endOffset":4914,"count":0},{"startOffset":4914,"endOffset":5079,"count":38},{"startOffset":4938,"endOffset":5079,"count":0},{"startOffset":5079,"endOffset":5147,"count":38},{"startOffset":5119,"endOffset":5133,"count":0},{"startOffset":5152,"endOffset":5178,"count":0},{"startOffset":5201,"endOffset":5212,"count":0},{"startOffset":5213,"endOffset":5230,"count":38},{"startOffset":5250,"endOffset":5258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4798,"endOffset":4908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4958,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5260,"endOffset":5524,"count":111}],"isBlockCoverage":true}]},{"scriptId":"204","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":402,"endOffset":507,"count":1}],"isBlockCoverage":true}]},{"scriptId":"205","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_ListCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":376,"endOffset":594,"count":1},{"startOffset":459,"endOffset":475,"count":0},{"startOffset":521,"endOffset":592,"count":0}],"isBlockCoverage":true}]},{"scriptId":"206","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":115,"endOffset":183,"count":1}],"isBlockCoverage":true}]},{"scriptId":"207","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":440,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_assocIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":286,"endOffset":454,"count":50},{"startOffset":370,"endOffset":439,"count":922},{"startOffset":407,"endOffset":435,"count":12},{"startOffset":439,"endOffset":453,"count":38}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":681,"endOffset":776,"count":922},{"startOffset":734,"endOffset":773,"count":910},{"startOffset":754,"endOffset":772,"count":0}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":240,"endOffset":387,"count":50},{"startOffset":356,"endOffset":367,"count":38},{"startOffset":368,"endOffset":384,"count":12}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":292,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_listCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheSet","ranges":[{"startOffset":292,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":148,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"stackDelete","ranges":[{"startOffset":237,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":183,"endOffset":242,"count":50}],"isBlockCoverage":true}]},{"scriptId":"216","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":235,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_stackSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"stackSet","ranges":[{"startOffset":436,"endOffset":824,"count":38},{"startOffset":706,"endOffset":823,"count":0}],"isBlockCoverage":true}]},{"scriptId":"218","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"219","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"getNative","ranges":[{"startOffset":331,"endOffset":453,"count":7},{"startOffset":439,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":7},{"startOffset":1256,"endOffset":1279,"count":0},{"startOffset":1327,"endOffset":1341,"count":0}],"isBlockCoverage":true}]},{"scriptId":"221","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":7},{"startOffset":670,"endOffset":693,"count":0},{"startOffset":905,"endOffset":921,"count":0},{"startOffset":922,"endOffset":940,"count":0},{"startOffset":941,"endOffset":959,"count":0}],"isBlockCoverage":true}]},{"scriptId":"222","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":64},{"startOffset":584,"endOffset":646,"count":0},{"startOffset":712,"endOffset":730,"count":5},{"startOffset":735,"endOffset":758,"count":59}],"isBlockCoverage":true}]},{"scriptId":"223","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":5},{"startOffset":899,"endOffset":911,"count":0},{"startOffset":995,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":59}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":116},{"startOffset":679,"endOffset":700,"count":14}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":7},{"startOffset":509,"endOffset":532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":12},{"startOffset":441,"endOffset":508,"count":0},{"startOffset":512,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":211,"endOffset":296,"count":7},{"startOffset":268,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"233","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_MapCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":389,"endOffset":606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":209,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":319,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":152,"endOffset":251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"238","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":279,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"hashGet","ranges":[{"startOffset":513,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":461,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_hashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":379,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":282,"endOffset":415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getMapData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":214,"endOffset":369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isKeyable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":201,"endOffset":400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheGet","ranges":[{"startOffset":228,"endOffset":298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":280,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_mapCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":279,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":274,"endOffset":507,"count":38},{"startOffset":359,"endOffset":362,"count":0},{"startOffset":407,"endOffset":489,"count":111},{"startOffset":465,"endOffset":485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"249","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_assignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":629,"endOffset":867,"count":112},{"startOffset":743,"endOffset":765,"count":0},{"startOffset":767,"endOffset":817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":314,"endOffset":589,"count":112},{"startOffset":386,"endOffset":403,"count":0},{"startOffset":405,"endOffset":551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"251","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_defineProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64,"endOffset":194,"count":1},{"startOffset":180,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssign","ranges":[{"startOffset":339,"endOffset":439,"count":1}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copyObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1044,"count":1}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":467,"endOffset":1013,"count":2},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":650,"endOffset":994,"count":1},{"startOffset":717,"endOffset":776,"count":0},{"startOffset":882,"endOffset":935,"count":0}],"isBlockCoverage":true}]},{"scriptId":"254","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":761,"endOffset":859,"count":39},{"startOffset":814,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayLikeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":697,"endOffset":1744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseTimes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":313,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1026,"count":1},{"startOffset":851,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":853,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":355,"endOffset":452,"count":1}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":1}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1},{"startOffset":548,"endOffset":559,"count":0},{"startOffset":697,"endOffset":708,"count":0},{"startOffset":1072,"endOffset":1084,"count":0}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/stubFalse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":210,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":456,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1},{"startOffset":643,"endOffset":661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"265","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":2050,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":645,"endOffset":773,"count":39},{"startOffset":706,"endOffset":723,"count":0},{"startOffset":724,"endOffset":741,"count":0},{"startOffset":742,"endOffset":770,"count":0}],"isBlockCoverage":true}]},{"scriptId":"267","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseUnary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":218,"endOffset":302,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254,"endOffset":299,"count":76}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nodeUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":615,"endOffset":962,"count":1},{"startOffset":806,"endOffset":911,"count":0},{"startOffset":912,"endOffset":942,"count":0},{"startOffset":948,"endOffset":960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":479,"endOffset":747,"count":39},{"startOffset":571,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_isPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":273,"endOffset":448,"count":90},{"startOffset":404,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"271","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"272","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":90}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":695,"endOffset":798,"count":39},{"startOffset":774,"endOffset":795,"count":0}],"isBlockCoverage":true}]},{"scriptId":"274","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseAssignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignIn","ranges":[{"startOffset":345,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/keysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":643,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":523,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_nativeKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":292,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1},{"startOffset":508,"endOffset":519,"count":0},{"startOffset":567,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":783,"endOffset":1024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copyArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"copyArray","ranges":[{"startOffset":219,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":317,"endOffset":414,"count":1}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getSymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":886,"count":1},{"startOffset":624,"endOffset":635,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":638,"endOffset":854,"count":39},{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":774,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayFilter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":289,"endOffset":600,"count":39},{"startOffset":377,"endOffset":380,"count":0},{"startOffset":464,"endOffset":581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"283","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/stubArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"stubArray","ranges":[{"startOffset":323,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_copySymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbolsIn","ranges":[{"startOffset":335,"endOffset":436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getSymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":754,"count":1},{"startOffset":549,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbolsIn","ranges":[{"startOffset":563,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayPush.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":200,"endOffset":407,"count":38},{"startOffset":341,"endOffset":389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"287","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":342,"endOffset":424,"count":38}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseGetAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":537,"endOffset":704,"count":38},{"startOffset":652,"endOffset":660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getAllKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":367,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_getTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1},{"startOffset":1296,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":1309,"endOffset":1808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_DataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true}]},{"scriptId":"293","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_WeakMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":329,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":1454,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneArrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_Uint8Array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneDataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDataView","ranges":[{"startOffset":267,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"cloneRegExp","ranges":[{"startOffset":243,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1},{"startOffset":138,"endOffset":149,"count":0},{"startOffset":205,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"cloneSymbol","ranges":[{"startOffset":394,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cloneTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"cloneTypedArray","ranges":[{"startOffset":275,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_initCloneObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":290,"endOffset":450,"count":51},{"startOffset":443,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"305","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":370,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":400,"endOffset":648,"count":51},{"startOffset":444,"endOffset":468,"count":0},{"startOffset":532,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"306","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMap","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"309","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsSet","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/create-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4201,"count":1}],"isBlockCoverage":true},{"functionName":"startChain","ranges":[{"startOffset":52,"endOffset":279,"count":11}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":108,"endOffset":154,"count":2}],"isBlockCoverage":true},{"functionName":"extendChain","ranges":[{"startOffset":281,"endOffset":647,"count":63},{"startOffset":338,"endOffset":357,"count":9}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":371,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"callWithFlag","ranges":[{"startOffset":649,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"createHookChain","ranges":[{"startOffset":981,"endOffset":1506,"count":8},{"startOffset":1311,"endOffset":1489,"count":4}],"isBlockCoverage":true},{"functionName":"createChain","ranges":[{"startOffset":1508,"endOffset":4169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"311","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/parse-test-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"parseTestArgs","ranges":[{"startOffset":14,"endOffset":599,"count":2},{"startOffset":91,"endOffset":105,"count":1},{"startOffset":106,"endOffset":117,"count":1},{"startOffset":233,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"buildTitle","ranges":[{"startOffset":290,"endOffset":511,"count":2},{"startOffset":347,"endOffset":388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/snapshot-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13484,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotError","ranges":[{"startOffset":1226,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"ChecksumError","ranges":[{"startOffset":1426,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"VersionMismatchError","ranges":[{"startOffset":1618,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"isLegacySnapshot","ranges":[{"startOffset":1929,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"LegacyError","ranges":[{"startOffset":2102,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"tryRead","ranges":[{"startOffset":2239,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLineEndings","ranges":[{"startOffset":2397,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"formatEntry","ranges":[{"startOffset":2625,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"combineEntries","ranges":[{"startOffset":2862,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"generateReport","ranges":[{"startOffset":3513,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"appendReportEntries","ranges":[{"startOffset":4043,"endOffset":4454,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshots","ranges":[{"startOffset":4456,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshots","ranges":[{"startOffset":6472,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"Manager","ranges":[{"startOffset":8488,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":8896,"endOffset":9599,"count":0}],"isBlockCoverage":false},{"functionName":"deferRecord","ranges":[{"startOffset":9602,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":10646,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":10737,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11500,"endOffset":11992,"count":0}],"isBlockCoverage":false},{"functionName":"mem.cacheKey.file.file","ranges":[{"startOffset":12029,"endOffset":12612,"count":0}],"isBlockCoverage":false},{"functionName":"cacheKey","ranges":[{"startOffset":12625,"endOffset":12643,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":12702,"endOffset":13461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7286,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3104,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3188,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3290,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3394,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3500,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3608,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3766,"endOffset":3848,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3850,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3908,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":3992,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4076,"endOffset":4162,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsDisabled","ranges":[{"startOffset":5155,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5230,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsDisabled","ranges":[{"startOffset":5320,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5364,"endOffset":5404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3513,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":617,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1448,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":1962,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2439,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":3376,"endOffset":3443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2937,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":781,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":844,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1078,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1368,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1444,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1490,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"timingSafeEqual","ranges":[{"startOffset":1858,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2406,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10293,"count":1}],"isBlockCoverage":false},{"functionName":"KeyObject","ranges":[{"startOffset":1041,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":1475,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":1566,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":1624,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":1704,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":1863,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2067,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2125,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":2356,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2415,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":2644,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":2973,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":3827,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":3925,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":4521,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":4617,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":6116,"endOffset":6252,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":6452,"endOffset":6568,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":6570,"endOffset":7132,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":7134,"endOffset":8375,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":8377,"endOffset":8465,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":8467,"endOffset":8562,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":8564,"endOffset":9055,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9057,"endOffset":9340,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":9342,"endOffset":9577,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":9579,"endOffset":9846,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":9848,"endOffset":9912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8131,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":970,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2539,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":2954,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3230,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3653,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":3920,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4203,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4477,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4681,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":4879,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5039,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5504,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5659,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":5878,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6399,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6536,"endOffset":6859,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6929,"endOffset":8044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2089,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2345,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3011,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3811,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4295,"endOffset":4929,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4932,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"zlib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28287,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3264,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":3989,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4143,"endOffset":4228,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4230,"endOffset":4684,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4686,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5228,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5794,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6867,"endOffset":8421,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8627,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9087,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9280,"endOffset":9332,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9472,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9726,"endOffset":9798,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10396,"endOffset":10471,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10912,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11357,"endOffset":11439,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11472,"endOffset":11532,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11567,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12168,"endOffset":12397,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12400,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14606,"endOffset":15196,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15198,"endOffset":17500,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":17502,"endOffset":17692,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":17888,"endOffset":20476,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":20826,"endOffset":21092,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21118,"endOffset":21530,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":21574,"endOffset":21698,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":21794,"endOffset":21918,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22014,"endOffset":22126,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":22216,"endOffset":22336,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":22430,"endOffset":22624,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":22726,"endOffset":22862,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":22964,"endOffset":23080,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":23172,"endOffset":23561,"count":18},{"startOffset":23231,"endOffset":23560,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":23244,"endOffset":23345,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":23360,"endOffset":23558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23624,"endOffset":23699,"count":107},{"startOffset":23676,"endOffset":23692,"count":9},{"startOffset":23693,"endOffset":23696,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":23915,"endOffset":25026,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25120,"endOffset":25273,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":25387,"endOffset":25546,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":25665,"endOffset":25829,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":25765,"endOffset":25822,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26039,"endOffset":26075,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26079,"endOffset":26120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"328","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1}],"isBlockCoverage":true},{"functionName":"shortcircuitPrimitive","ranges":[{"startOffset":408,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"compareDescriptors","ranges":[{"startOffset":730,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2864,"endOffset":3352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"330","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/describe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5980,"count":1}],"isBlockCoverage":true},{"functionName":"describePrimitive","ranges":[{"startOffset":2448,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"unboxComplex","ranges":[{"startOffset":2959,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"registerPlugins","ranges":[{"startOffset":3326,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"describeComplex","ranges":[{"startOffset":3728,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":4700,"endOffset":5953,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1384,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":408,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":651,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1159,"endOffset":1381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7182,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":436,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":742,"endOffset":838,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectValue","ranges":[{"startOffset":949,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1206,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":1402,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1473,"endOffset":1560,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1564,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":1999,"endOffset":6369,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2066,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2437,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2567,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":3034,"endOffset":3470,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":3476,"endOffset":4492,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":4498,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":6411,"endOffset":7135,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6481,"endOffset":6777,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":6783,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":7058,"endOffset":7129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getObjectKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1043,"count":1}],"isBlockCoverage":true},{"functionName":"getObjectKeys","ranges":[{"startOffset":14,"endOffset":1011,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/formatUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":60,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"formatCtorAndStringTag","ranges":[{"startOffset":168,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFormatter","ranges":[{"startOffset":621,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":844,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":1193,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":1877,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"shouldFormat","ranges":[{"startOffset":2165,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"customize","ranges":[{"startOffset":2206,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"SingleValueFormatter","ranges":[{"startOffset":2579,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2790,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":2965,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":3120,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/lineBuilder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7142,"count":1}],"isBlockCoverage":true},{"functionName":"translateGutter","ranges":[{"startOffset":123,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Line","ranges":[{"startOffset":502,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":674,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":721,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":762,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":820,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":884,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":938,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1031,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":1206,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":1483,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":1634,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":1787,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":1875,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":2048,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2093,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2219,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":2279,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":2397,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2528,"endOffset":2630,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":2634,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2727,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":3538,"endOffset":4285,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":4289,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":4425,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":4563,"endOffset":4669,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":4673,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":5452,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5721,"endOffset":5764,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5769,"endOffset":5846,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":5851,"endOffset":5927,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":5932,"endOffset":6009,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6014,"endOffset":6091,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6096,"endOffset":6165,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6184,"endOffset":6267,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6274,"endOffset":6356,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6363,"endOffset":6446,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6453,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6543,"endOffset":6642,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6667,"endOffset":6752,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6759,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6850,"endOffset":6935,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6942,"endOffset":7027,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":7034,"endOffset":7135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/hasLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"hasLength","ranges":[{"startOffset":104,"endOffset":275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.islength/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1187,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":1030,"endOffset":1158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/recursorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1892,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51,"endOffset":74,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":116,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":416,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"replay","ranges":[{"startOffset":578,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"sequence","ranges":[{"startOffset":1273,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"singleValue","ranges":[{"startOffset":1521,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1689,"endOffset":1865,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/stats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3834,"count":1}],"isBlockCoverage":true},{"functionName":"describeIterableRecursor","ranges":[{"startOffset":228,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"describeListRecursor","ranges":[{"startOffset":380,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"describePropertyRecursor","ranges":[{"startOffset":516,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeIterableStats","ranges":[{"startOffset":668,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeListStats","ranges":[{"startOffset":807,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePropertyStats","ranges":[{"startOffset":930,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":1306,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1355,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1436,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2991,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3139,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3385,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3623,"endOffset":3753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/arrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":342,"endOffset":443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/typedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4437,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":382,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":628,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":909,"endOffset":1009,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeBytes","ranges":[{"startOffset":1045,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"Bytes","ranges":[{"startOffset":1291,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1346,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1485,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2300,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"TypedArrayValue","ranges":[{"startOffset":2465,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":2542,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":3047,"endOffset":3867,"count":3}],"isBlockCoverage":true},{"functionName":"createListRecursor","ranges":[{"startOffset":3235,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":3311,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":3753,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":3975,"endOffset":4318,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/boxed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":264,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedBoxedValue","ranges":[{"startOffset":632,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":711,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":781,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1124,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":306,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"basicEscape","ranges":[{"startOffset":707,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLinebreak","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"themeControlPictures","ranges":[{"startOffset":1221,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuotes","ranges":[{"startOffset":1537,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"includesLinebreaks","ranges":[{"startOffset":1836,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLine","ranges":[{"startOffset":1934,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"gatherLines","ranges":[{"startOffset":3615,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"StringValue","ranges":[{"startOffset":3947,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3999,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"get includesLinebreaks","ranges":[{"startOffset":4127,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4204,"endOffset":5175,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":5179,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5557,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":10823,"endOffset":10863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/fast-diff/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27285,"count":1}],"isBlockCoverage":true},{"functionName":"diff_main","ranges":[{"startOffset":1553,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"diff_compute_","ranges":[{"startOffset":2987,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisect_","ranges":[{"startOffset":4922,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisectSplit_","ranges":[{"startOffset":8763,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":9335,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":10396,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"diff_halfMatch_","ranges":[{"startOffset":11745,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15072,"endOffset":22357,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_start","ranges":[{"startOffset":22360,"endOffset":22457,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_end","ranges":[{"startOffset":22459,"endOffset":22554,"count":0}],"isBlockCoverage":false},{"functionName":"starts_with_pair_end","ranges":[{"startOffset":22556,"endOffset":22645,"count":0}],"isBlockCoverage":false},{"functionName":"ends_with_pair_start","ranges":[{"startOffset":22647,"endOffset":22751,"count":0}],"isBlockCoverage":false},{"functionName":"remove_empty_tuples","ranges":[{"startOffset":22753,"endOffset":22939,"count":0}],"isBlockCoverage":false},{"functionName":"make_edit_splice","ranges":[{"startOffset":22941,"endOffset":23244,"count":0}],"isBlockCoverage":false},{"functionName":"find_cursor_edit_diff","ranges":[{"startOffset":23246,"endOffset":26986,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":26988,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":0}],"isBlockCoverage":false},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/dataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":948,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":348,"endOffset":446,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2613,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":304,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":499,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"formatDate","ranges":[{"startOffset":680,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"DateValue","ranges":[{"startOffset":990,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1069,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2122,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedDateValue","ranges":[{"startOffset":2460,"endOffset":2610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/date-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":723,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/time-zone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3607,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":331,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":637,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorValue","ranges":[{"startOffset":868,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":941,"endOffset":1081,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1085,"endOffset":2195,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2199,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedErrorValue","ranges":[{"startOffset":2402,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2589,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedErrorValue","ranges":[{"startOffset":3514,"endOffset":3604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/isEnumerable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"isEnumerable","ranges":[{"startOffset":14,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3274,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":377,"endOffset":599,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":629,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionValue","ranges":[{"startOffset":869,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":942,"endOffset":1708,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedFunctionValue","ranges":[{"startOffset":1860,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1957,"endOffset":2205,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2209,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2751,"endOffset":2811,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedFunctionValue","ranges":[{"startOffset":2899,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2993,"endOffset":3207,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3211,"endOffset":3271,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":412,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":512,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1842,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":369,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"MapValue","ranges":[{"startOffset":594,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":667,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":864,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1029,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1226,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMapValue","ranges":[{"startOffset":1749,"endOffset":1839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":167,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":268,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":630,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":916,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2731,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":219,"endOffset":401,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":431,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedFlags","ranges":[{"startOffset":616,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"RegexpValue","ranges":[{"startOffset":823,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":929,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1110,"endOffset":2315,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2319,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedRegexpValue","ranges":[{"startOffset":2610,"endOffset":2728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/complexValues/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1812,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":369,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"SetValue","ranges":[{"startOffset":594,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":667,"endOffset":860,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":864,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1027,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1224,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSetValue","ranges":[{"startOffset":1719,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7789,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":228,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":354,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":519,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":653,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexItem","ranges":[{"startOffset":1017,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1099,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1175,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1723,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":4316,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveItem","ranges":[{"startOffset":4531,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4613,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4774,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":5333,"endOffset":6842,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":6846,"endOffset":7575,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7579,"endOffset":7633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/mapEntry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7281,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":318,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":615,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithKey","ranges":[{"startOffset":974,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"MapEntry","ranges":[{"startOffset":1443,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1639,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1920,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":2403,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3008,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":3352,"endOffset":4183,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":4187,"endOffset":7062,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7066,"endOffset":7140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/themeUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5232,"count":1}],"isBlockCoverage":true},{"functionName":"freezeTheme","ranges":[{"startOffset":151,"endOffset":490,"count":1},{"startOffset":233,"endOffset":472,"count":42},{"startOffset":338,"endOffset":468,"count":120},{"startOffset":397,"endOffset":425,"count":118},{"startOffset":427,"endOffset":462,"count":41}],"isBlockCoverage":true},{"functionName":"normalizePlugins","ranges":[{"startOffset":2401,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3190,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"addModifier","ranges":[{"startOffset":4127,"endOffset":4319,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiers","ranges":[{"startOffset":4427,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiersToOriginal","ranges":[{"startOffset":5043,"endOffset":5171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.clonedeep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45025,"count":1},{"startOffset":3163,"endOffset":3170,"count":0},{"startOffset":3171,"endOffset":3196,"count":0},{"startOffset":3197,"endOffset":3204,"count":0},{"startOffset":3278,"endOffset":3289,"count":0},{"startOffset":3290,"endOffset":3318,"count":0},{"startOffset":9479,"endOffset":9490,"count":0},{"startOffset":9927,"endOffset":9938,"count":0},{"startOffset":10650,"endOffset":10661,"count":0},{"startOffset":10717,"endOffset":10728,"count":0},{"startOffset":31859,"endOffset":31870,"count":0},{"startOffset":32442,"endOffset":32973,"count":0},{"startOffset":41056,"endOffset":41068,"count":0}],"isBlockCoverage":true},{"functionName":"addMapEntry","ranges":[{"startOffset":3912,"endOffset":4055,"count":0}],"isBlockCoverage":false},{"functionName":"addSetEntry","ranges":[{"startOffset":4222,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEach","ranges":[{"startOffset":4631,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPush","ranges":[{"startOffset":5058,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReduce","ranges":[{"startOffset":5698,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":6329,"endOffset":6490,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":6703,"endOffset":6788,"count":6},{"startOffset":6760,"endOffset":6771,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":6982,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":7468,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":7899,"endOffset":7999,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7944,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":8152,"endOffset":8315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8636,"endOffset":8788,"count":1},{"startOffset":8686,"endOffset":8704,"count":0},{"startOffset":8705,"endOffset":8732,"count":0},{"startOffset":8754,"endOffset":8780,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":10854,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":11165,"endOffset":11247,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":11528,"endOffset":11609,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":11792,"endOffset":12023,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":12258,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":12622,"endOffset":12775,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":13097,"endOffset":13307,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":13424,"endOffset":13475,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":13723,"endOffset":14007,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":14201,"endOffset":14348,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":14594,"endOffset":14672,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":14918,"endOffset":15129,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":15529,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":15847,"endOffset":15980,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":16220,"endOffset":16299,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":16485,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":16793,"endOffset":16863,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":17100,"endOffset":17192,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":17583,"endOffset":17652,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":17760,"endOffset":17818,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":18057,"endOffset":18125,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":18310,"endOffset":18369,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":18606,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":18903,"endOffset":19240,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":19717,"endOffset":20266,"count":0}],"isBlockCoverage":false},{"functionName":"assignValue","ranges":[{"startOffset":20637,"endOffset":20859,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21120,"endOffset":21288,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":21555,"endOffset":21655,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":22224,"endOffset":23887,"count":0}],"isBlockCoverage":false},{"functionName":"baseCreate","ranges":[{"startOffset":24122,"endOffset":24205,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":24666,"endOffset":24833,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":24986,"endOffset":25053,"count":5}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":25274,"endOffset":25501,"count":6},{"startOffset":25348,"endOffset":25371,"count":0},{"startOffset":25407,"endOffset":25429,"count":0},{"startOffset":25444,"endOffset":25458,"count":0}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":25713,"endOffset":25981,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":26185,"endOffset":26366,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":26550,"endOffset":26736,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":26949,"endOffset":27155,"count":0}],"isBlockCoverage":false},{"functionName":"cloneMap","ranges":[{"startOffset":27407,"endOffset":27590,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":27742,"endOffset":27906,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSet","ranges":[{"startOffset":28158,"endOffset":28341,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":28518,"endOffset":28616,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":28837,"endOffset":29053,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":29274,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":29849,"endOffset":30257,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbols","ranges":[{"startOffset":30499,"endOffset":30596,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":30815,"endOffset":30897,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":31071,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":31472,"endOffset":31594,"count":6},{"startOffset":31580,"endOffset":31591,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":32455,"endOffset":32970,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneArray","ranges":[{"startOffset":33124,"endOffset":33448,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":33604,"endOffset":33764,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneByTag","ranges":[{"startOffset":34260,"endOffset":35097,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":35372,"endOffset":35595,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35798,"endOffset":35997,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36186,"endOffset":36260,"count":6},{"startOffset":36234,"endOffset":36257,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36454,"endOffset":36629,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":36790,"endOffset":36978,"count":11},{"startOffset":36892,"endOffset":36959,"count":0},{"startOffset":36963,"endOffset":36977,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":37394,"endOffset":37462,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":38145,"endOffset":38240,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":38629,"endOffset":38897,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":39975,"endOffset":40078,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":40604,"endOffset":40693,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":41409,"endOffset":41701,"count":6},{"startOffset":41652,"endOffset":41656,"count":0},{"startOffset":41682,"endOffset":41698,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":42248,"endOffset":42376,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":42959,"endOffset":43076,"count":12}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":43575,"endOffset":43653,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":44283,"endOffset":44381,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":44706,"endOffset":44743,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":44955,"endOffset":44995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51155,"count":1},{"startOffset":3263,"endOffset":3270,"count":0},{"startOffset":3271,"endOffset":3296,"count":0},{"startOffset":3297,"endOffset":3304,"count":0},{"startOffset":3378,"endOffset":3389,"count":0},{"startOffset":3390,"endOffset":3418,"count":0},{"startOffset":7827,"endOffset":7838,"count":0},{"startOffset":7946,"endOffset":7957,"count":0},{"startOffset":8194,"endOffset":8205,"count":0},{"startOffset":8501,"endOffset":8512,"count":0},{"startOffset":28453,"endOffset":28463,"count":0},{"startOffset":41292,"endOffset":41434,"count":0},{"startOffset":43594,"endOffset":43606,"count":0},{"startOffset":47661,"endOffset":47679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3992,"endOffset":4339,"count":1},{"startOffset":4183,"endOffset":4288,"count":0},{"startOffset":4289,"endOffset":4319,"count":0},{"startOffset":4325,"endOffset":4337,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":4811,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":5440,"endOffset":5601,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":5821,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5857,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":6118,"endOffset":6203,"count":3},{"startOffset":6175,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":6459,"endOffset":6559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7078,"endOffset":7230,"count":1},{"startOffset":7128,"endOffset":7146,"count":0},{"startOffset":7147,"endOffset":7174,"count":0},{"startOffset":7196,"endOffset":7222,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8230,"endOffset":8360,"count":1},{"startOffset":8346,"endOffset":8358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9258,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":8977,"endOffset":8997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9007,"endOffset":9255,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":9387,"endOffset":9600,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":9706,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":10086,"endOffset":10221,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":10404,"endOffset":10635,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":10870,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":11236,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":11749,"endOffset":11967,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":12084,"endOffset":12152,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":12400,"endOffset":12699,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":12893,"endOffset":13040,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":13286,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":13610,"endOffset":13838,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":14238,"endOffset":14455,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":14564,"endOffset":14714,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":14954,"endOffset":15087,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":15273,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":15581,"endOffset":15651,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":15888,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":16457,"endOffset":16562,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":16670,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":16984,"endOffset":17120,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":17305,"endOffset":17364,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":17601,"endOffset":17660,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":17898,"endOffset":18286,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":18763,"endOffset":19810,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":20074,"endOffset":20277,"count":0}],"isBlockCoverage":false},{"functionName":"assignValue","ranges":[{"startOffset":20648,"endOffset":20886,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21147,"endOffset":21315,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignValue","ranges":[{"startOffset":21579,"endOffset":21854,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":22565,"endOffset":22792,"count":4},{"startOffset":22615,"endOffset":22677,"count":0},{"startOffset":22743,"endOffset":22761,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":22978,"endOffset":23075,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":23296,"endOffset":23498,"count":3},{"startOffset":23370,"endOffset":23393,"count":0},{"startOffset":23441,"endOffset":23455,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":23721,"endOffset":23856,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeysIn","ranges":[{"startOffset":24070,"endOffset":24386,"count":0}],"isBlockCoverage":false},{"functionName":"baseMerge","ranges":[{"startOffset":24803,"endOffset":25402,"count":0}],"isBlockCoverage":false},{"functionName":"baseMergeDeep","ranges":[{"startOffset":26039,"endOffset":27758,"count":0}],"isBlockCoverage":false},{"functionName":"baseRest","ranges":[{"startOffset":28067,"endOffset":28167,"count":1}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":28466,"endOffset":28645,"count":1}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":28850,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":29275,"endOffset":29461,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":29682,"endOffset":29898,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":30119,"endOffset":30324,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":30694,"endOffset":31240,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":31423,"endOffset":32158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31477,"endOffset":32154,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseFor","ranges":[{"startOffset":32377,"endOffset":32774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32422,"endOffset":32771,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":32948,"endOffset":33103,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":33349,"endOffset":33471,"count":3},{"startOffset":33457,"endOffset":33468,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":33672,"endOffset":34080,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":34236,"endOffset":34396,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":34671,"endOffset":34946,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":35316,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35847,"endOffset":36046,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36235,"endOffset":36309,"count":3},{"startOffset":36283,"endOffset":36306,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36503,"endOffset":36678,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeysIn","ranges":[{"startOffset":36972,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":37322,"endOffset":37399,"count":4}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":37754,"endOffset":38318,"count":1},{"startOffset":37858,"endOffset":37865,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37880,"endOffset":38315,"count":0}],"isBlockCoverage":false},{"functionName":"safeGet","ranges":[{"startOffset":38563,"endOffset":38748,"count":0}],"isBlockCoverage":false},{"functionName":"shortOut","ranges":[{"startOffset":39310,"endOffset":39688,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39385,"endOffset":39685,"count":1},{"startOffset":39528,"endOffset":39606,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":39849,"endOffset":40037,"count":3},{"startOffset":39951,"endOffset":40018,"count":0},{"startOffset":40022,"endOffset":40036,"count":0}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":40720,"endOffset":40815,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41238,"endOffset":41270,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":41294,"endOffset":41434,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":42513,"endOffset":42616,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":43142,"endOffset":43231,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":43947,"endOffset":44292,"count":3},{"startOffset":44000,"endOffset":44023,"count":0},{"startOffset":44235,"endOffset":44251,"count":0},{"startOffset":44252,"endOffset":44270,"count":0},{"startOffset":44271,"endOffset":44289,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":44839,"endOffset":44967,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":45550,"endOffset":45673,"count":6}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":46172,"endOffset":46256,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":46857,"endOffset":47244,"count":0}],"isBlockCoverage":false},{"functionName":"toPlainObject","ranges":[{"startOffset":48238,"endOffset":48314,"count":0}],"isBlockCoverage":false},{"functionName":"keysIn","ranges":[{"startOffset":48822,"endOffset":48930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49954,"endOffset":50031,"count":0}],"isBlockCoverage":false},{"functionName":"constant","ranges":[{"startOffset":50461,"endOffset":50534,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50497,"endOffset":50531,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":50833,"endOffset":50877,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":51089,"endOffset":51129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/pluginRegistry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6129,"count":1}],"isBlockCoverage":true},{"functionName":"PluginError","ranges":[{"startOffset":707,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"PluginTypeError","ranges":[{"startOffset":864,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedApiError","ranges":[{"startOffset":1031,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedError","ranges":[{"startOffset":1210,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorTagError","ranges":[{"startOffset":1406,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorIdError","ranges":[{"startOffset":1657,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1949,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"modifyTheme","ranges":[{"startOffset":3521,"endOffset":3635,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3637,"endOffset":5078,"count":0}],"isBlockCoverage":false},{"functionName":"getDeserializers","ranges":[{"startOffset":5098,"endOffset":5361,"count":0}],"isBlockCoverage":false},{"functionName":"getThemes","ranges":[{"startOffset":5407,"endOffset":5590,"count":0}],"isBlockCoverage":false},{"functionName":"getTryDescribeValues","ranges":[{"startOffset":5622,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDescriptorRef","ranges":[{"startOffset":5780,"endOffset":6076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38803,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":7960,"endOffset":8033,"count":35},{"startOffset":7995,"endOffset":8031,"count":32}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":35}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8057,"endOffset":8579,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":8603,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":8728,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":8885,"endOffset":10577,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10605,"endOffset":10796,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.toString","ranges":[{"startOffset":10826,"endOffset":10863,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":10892,"endOffset":11117,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11150,"endOffset":11420,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11452,"endOffset":12239,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":12409,"endOffset":15470,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":15490,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":15769,"endOffset":16297,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":16373,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":16670,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":16767,"endOffset":16832,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":16856,"endOffset":16921,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":16945,"endOffset":17010,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17038,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"compareLoose","ranges":[{"startOffset":17170,"endOffset":17231,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":17261,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":17348,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":17485,"endOffset":17600,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":17618,"endOffset":17681,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":17699,"endOffset":17762,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":17780,"endOffset":17845,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":17865,"endOffset":17931,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":17951,"endOffset":18016,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":18036,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":18121,"endOffset":18835,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator","ranges":[{"startOffset":18869,"endOffset":19521,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.parse","ranges":[{"startOffset":19565,"endOffset":19998,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.toString","ranges":[{"startOffset":20032,"endOffset":20067,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.test","ranges":[{"startOffset":20097,"endOffset":20380,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.intersects","ranges":[{"startOffset":20416,"endOffset":22036,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":22060,"endOffset":23117,"count":0}],"isBlockCoverage":false},{"functionName":"Range.format","ranges":[{"startOffset":23144,"endOffset":23283,"count":0}],"isBlockCoverage":false},{"functionName":"Range.toString","ranges":[{"startOffset":23312,"endOffset":23347,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":23378,"endOffset":24600,"count":0}],"isBlockCoverage":false},{"functionName":"Range.intersects","ranges":[{"startOffset":24631,"endOffset":25086,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":25176,"endOffset":25376,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":25522,"endOffset":25857,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":25859,"endOffset":25935,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":26208,"endOffset":26360,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":26362,"endOffset":27146,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":27345,"endOffset":27497,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":27499,"endOffset":28980,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":28982,"endOffset":29170,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":29172,"endOffset":30696,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":30821,"endOffset":31013,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":31227,"endOffset":31797,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":31884,"endOffset":32180,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":32182,"endOffset":33203,"count":0}],"isBlockCoverage":false},{"functionName":"satisfies","ranges":[{"startOffset":33235,"endOffset":33396,"count":0}],"isBlockCoverage":false},{"functionName":"maxSatisfying","ranges":[{"startOffset":33436,"endOffset":33882,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":33922,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":34401,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":35678,"endOffset":35917,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":36013,"endOffset":36102,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":36202,"endOffset":36291,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":36319,"endOffset":38110,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":38144,"endOffset":38298,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":38332,"endOffset":38460,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":38486,"endOffset":38802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6145,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":331,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":457,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":622,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":756,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":1125,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"compareKeys","ranges":[{"startOffset":1171,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1696,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexProperty","ranges":[{"startOffset":2877,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2949,"endOffset":3021,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3025,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3304,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3811,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveProperty","ranges":[{"startOffset":3977,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4049,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4328,"endOffset":5010,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5014,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6007,"endOffset":6059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2775,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":329,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":704,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolValue","ranges":[{"startOffset":1010,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1113,"endOffset":1403,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":1407,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1542,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":1653,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1790,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSymbolValue","ranges":[{"startOffset":2157,"endOffset":2230,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2234,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":2728,"endOffset":2772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/js-string-escape/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/well-known-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":689,"count":12}],"isBlockCoverage":true},{"functionName":"exports.isWellKnown","ranges":[{"startOffset":715,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getLabel","ranges":[{"startOffset":767,"endOffset":799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanValue","ranges":[{"startOffset":425,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":477,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":741,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/bigInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":718,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":406,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":501,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"NumberValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":781,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/primitiveValues/undefined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":421,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":516,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getCtor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"getCtor","ranges":[{"startOffset":59,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/getStringTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":727,"count":1},{"startOffset":473,"endOffset":726,"count":0}],"isBlockCoverage":true},{"functionName":"getStringTag","ranges":[{"startOffset":51,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":225,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"getStringTagWithPromiseWorkaround","ranges":[{"startOffset":525,"endOffset":671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Registry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"Registry","ranges":[{"startOffset":33,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":107,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":222,"endOffset":372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/shouldCompareDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"shouldCompareDeep","ranges":[{"startOffset":206,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/symbolProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2757,"count":1}],"isBlockCoverage":true},{"functionName":"Comparable","ranges":[{"startOffset":247,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":352,"endOffset":533,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":537,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1297,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"Collector","ranges":[{"startOffset":2150,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"collectAll","ranges":[{"startOffset":2290,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2540,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Circular.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"Circular","ranges":[{"startOffset":33,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":84,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":365,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":587,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":651,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13745,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":630,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"compareComplexShape","ranges":[{"startOffset":642,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"diffDescriptors","ranges":[{"startOffset":1888,"endOffset":13545,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":13589,"endOffset":13724,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/Indenter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"Indenter","ranges":[{"startOffset":33,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"increase","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"decrease","ranges":[{"startOffset":220,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":292,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3070,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":241,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptor","ranges":[{"startOffset":295,"endOffset":2902,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2948,"endOffset":3045,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/serialize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4107,"endOffset":4142,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4189,"endOffset":4224,"count":31}],"isBlockCoverage":true},{"functionName":"DescriptorSerializationError","ranges":[{"startOffset":4281,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPluginError","ranges":[{"startOffset":4482,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"PointerLookupError","ranges":[{"startOffset":4717,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedPluginError","ranges":[{"startOffset":4935,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedVersion","ranges":[{"startOffset":5266,"endOffset":5469,"count":0}],"isBlockCoverage":false},{"functionName":"shallowSerializeDescriptor","ranges":[{"startOffset":5473,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"serializeState","ranges":[{"startOffset":5658,"endOffset":6286,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6288,"endOffset":8094,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeState","ranges":[{"startOffset":8126,"endOffset":8445,"count":0}],"isBlockCoverage":false},{"functionName":"shallowDeserializeDescriptor","ranges":[{"startOffset":8447,"endOffset":8642,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeRecord","ranges":[{"startOffset":8644,"endOffset":9330,"count":0}],"isBlockCoverage":false},{"functionName":"buildPluginMap","ranges":[{"startOffset":9332,"endOffset":10671,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":10673,"endOffset":11782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":477,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9576,"count":1}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":689,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"encodeValue","ranges":[{"startOffset":830,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"decodeValue","ranges":[{"startOffset":3038,"endOffset":5525,"count":0}],"isBlockCoverage":false},{"functionName":"buildBuffer","ranges":[{"startOffset":5527,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6174,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"decodePlugins","ranges":[{"startOffset":7927,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRecord","ranges":[{"startOffset":8475,"endOffset":9190,"count":0}],"isBlockCoverage":false},{"functionName":"extractVersion","ranges":[{"startOffset":9228,"endOffset":9296,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9338,"endOffset":9551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash.flattendeep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8925,"count":1},{"startOffset":889,"endOffset":896,"count":0},{"startOffset":897,"endOffset":922,"count":0},{"startOffset":923,"endOffset":930,"count":0},{"startOffset":1004,"endOffset":1015,"count":0},{"startOffset":1016,"endOffset":1044,"count":0},{"startOffset":1998,"endOffset":2009,"count":0}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":1247,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"baseFlatten","ranges":[{"startOffset":2489,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"isFlattenable","ranges":[{"startOffset":3300,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDeep","ranges":[{"startOffset":3731,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":4245,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":5591,"endOffset":5694,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":6220,"endOffset":6309,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":6649,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":7488,"endOffset":7616,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":8199,"endOffset":8316,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":8815,"endOffset":8893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/concordance/lib/metaDescriptors/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":63,"endOffset":120,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer","ranges":[{"startOffset":249,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":392,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":439,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/indent-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":389,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":643,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":740,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":801,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1292,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":1624,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toBase64","ranges":[{"startOffset":1732,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":1876,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":2165,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":2253,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":2497,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":2605,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":2677,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":2746,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":2837,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":2936,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":3140,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":3358,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":3582,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":3753,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":3854,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":3963,"endOffset":4111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/write-file-atomic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6812,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":593,"endOffset":850,"count":1},{"startOffset":765,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"getTmpname","ranges":[{"startOffset":875,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupOnExit","ranges":[{"startOffset":1079,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"serializeActiveFile","ranges":[{"startOffset":1240,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"isChownErrOk","ranges":[{"startOffset":1682,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileAsync","ranges":[{"startOffset":1945,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4412,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":4689,"endOffset":6811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":1},{"startOffset":896,"endOffset":903,"count":0},{"startOffset":963,"endOffset":980,"count":0},{"startOffset":982,"endOffset":1018,"count":0},{"startOffset":1044,"endOffset":1077,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":1},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4124,"count":1},{"startOffset":379,"endOffset":405,"count":0},{"startOffset":456,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":1479,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2013,"endOffset":2731,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":2052,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":2759,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2841,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":3433,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":3743,"endOffset":4123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28321,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2164,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":2928,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3514,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3632,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":4727,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":5669,"endOffset":7313,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":7315,"endOffset":9040,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9042,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":11892,"endOffset":12499,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":12581,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":12789,"endOffset":13160,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":13267,"endOffset":13642,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":13725,"endOffset":14089,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":14178,"endOffset":14550,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":14598,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":15037,"endOffset":15433,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":15456,"endOffset":15768,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":15795,"endOffset":16115,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":16139,"endOffset":16512,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":16516,"endOffset":17233,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":17235,"endOffset":20593,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":20595,"endOffset":20801,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":20803,"endOffset":21167,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":21169,"endOffset":21883,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":21885,"endOffset":23499,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":23501,"endOffset":24082,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":24084,"endOffset":24734,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":24752,"endOffset":24846,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":24866,"endOffset":24978,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":25003,"endOffset":25097,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":25123,"endOffset":25235,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":25255,"endOffset":26624,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":26627,"endOffset":27699,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27716,"endOffset":27808,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":27833,"endOffset":27939,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":28019,"endOffset":28088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"internal/assert/assertion_error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16587,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1239,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1517,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2126,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":10553,"endOffset":15437,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":15441,"endOffset":15516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15520,"endOffset":16550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"internal/assert/calltracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":293,"endOffset":301,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":358,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1371,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1991,"endOffset":2219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"402","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-typedarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArray","ranges":[{"startOffset":475,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictTypedArray","ranges":[{"startOffset":583,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isLooseTypedArray","ranges":[{"startOffset":945,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/typedarray-to-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"typedarrayToBuffer","ranges":[{"startOffset":245,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"worker_threads.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":false}]},{"scriptId":"405","url":"internal/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12025,"count":1}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1963,"endOffset":2043,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":2086,"endOffset":6548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6552,"endOffset":7041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7045,"endOffset":7141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7145,"endOffset":7314,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7318,"endOffset":8065,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8069,"endOffset":8537,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":8541,"endOffset":8656,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":8660,"endOffset":9494,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":9498,"endOffset":9604,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":9608,"endOffset":9720,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":9724,"endOffset":9823,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":9827,"endOffset":9885,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":9889,"endOffset":9949,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":9953,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":10017,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":10157,"endOffset":10566,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":10570,"endOffset":10892,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":10966,"endOffset":11560,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":11562,"endOffset":11848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"internal/worker/io.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7900,"count":1}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":2646,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3200,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3252,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":3543,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3802,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":4007,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":4238,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":4852,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":5614,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5967,"endOffset":6272,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":6323,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":6476,"endOffset":6752,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6756,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6909,"endOffset":7148,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":7152,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":7423,"endOffset":7584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"internal/error-serdes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3774,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":586,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1387,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1806,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1953,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2140,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3063,"endOffset":3717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/mem/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"mem","ranges":[{"startOffset":149,"endOffset":1157,"count":2},{"startOffset":431,"endOffset":459,"count":0},{"startOffset":1089,"endOffset":1101,"count":0}],"isBlockCoverage":true},{"functionName":"cacheKey","ranges":[{"startOffset":317,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"memoized","ranges":[{"startOffset":479,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.clear","ranges":[{"startOffset":1206,"endOffset":1413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/mem/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2660,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":36,"endOffset":632,"count":4},{"startOffset":295,"endOffset":322,"count":2},{"startOffset":324,"endOffset":535,"count":2},{"startOffset":535,"endOffset":559,"count":0},{"startOffset":561,"endOffset":575,"count":0},{"startOffset":575,"endOffset":631,"count":2}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":838,"endOffset":1204,"count":2},{"startOffset":944,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1231,"endOffset":1409,"count":2},{"startOffset":1363,"endOffset":1408,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1436,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":1968,"endOffset":2350,"count":2},{"startOffset":2020,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFn","ranges":[{"startOffset":2369,"endOffset":2631,"count":2},{"startOffset":2491,"endOffset":2554,"count":4}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/map-age-cleaner/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3903,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":671,"endOffset":752,"count":1},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"mapAgeCleaner","ranges":[{"startOffset":872,"endOffset":3774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/p-defer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/concordance-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3893,"count":1},{"startOffset":3636,"endOffset":3648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3513,"endOffset":3589,"count":112},{"startOffset":3556,"endOffset":3587,"count":62}],"isBlockCoverage":true},{"functionName":"get maxDepth","ranges":[{"startOffset":3738,"endOffset":3814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":62},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":315,"count":62},{"startOffset":294,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/cloneDeepWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":817,"endOffset":1012,"count":1},{"startOffset":921,"endOffset":932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":1437,"endOffset":1927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/elementFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":188,"endOffset":10493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/node_modules/arrify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/diffShallow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12237,"count":1}],"isBlockCoverage":true},{"functionName":"diffShallow","ranges":[{"startOffset":14,"endOffset":12207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/escapeText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"escapeText","ranges":[{"startOffset":14,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@concordance/react/lib/testJsonFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1551,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":48,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/serialize-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4606,"count":1}],"isBlockCoverage":true},{"functionName":"isAvaAssertionError","ranges":[{"startOffset":360,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":451,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"extractSource","ranges":[{"startOffset":635,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"buildSource","ranges":[{"startOffset":1254,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"trySerializeError","ranges":[{"startOffset":1981,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3944,"endOffset":4571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/clean-yaml-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"cleanYamlObj","ranges":[{"startOffset":132,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"setProp","ranges":[{"startOffset":1903,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFilter","ranges":[{"startOffset":2133,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":160,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7648,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":175,"endOffset":253,"count":57}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":416,"endOffset":886,"count":1}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":897,"endOffset":944,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":948,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":2048,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":2450,"endOffset":3023,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3027,"endOffset":4002,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":4006,"endOffset":6075,"count":0}],"isBlockCoverage":false},{"functionName":"setFile","ranges":[{"startOffset":6079,"endOffset":6316,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPackagesRegExp","ranges":[{"startOffset":6318,"endOffset":6600,"count":1},{"startOffset":6424,"endOffset":6599,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6465,"endOffset":6495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/stack-utils/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"428","url":"internal/source_map/source_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10485,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":3884,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3998,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4098,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4197,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4501,"endOffset":8427,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8485,"endOffset":8554,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":8644,"endOffset":9577,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":9644,"endOffset":9991,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":10186,"endOffset":10449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23103,"count":1}],"isBlockCoverage":true},{"functionName":"formatDescriptorDiff","ranges":[{"startOffset":261,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptorWithLabel","ranges":[{"startOffset":517,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithLabel","ranges":[{"startOffset":673,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"formatPowerAssertValue","ranges":[{"startOffset":808,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":930,"endOffset":998,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1013,"endOffset":1021,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":1046,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1133,"endOffset":1884,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorWithLongStackTrace","ranges":[{"startOffset":1929,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"validateExpectations","ranges":[{"startOffset":2128,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpectations","ranges":[{"startOffset":4738,"endOffset":7050,"count":0}],"isBlockCoverage":false},{"functionName":"Assertions","ranges":[{"startOffset":7072,"endOffset":23067,"count":2},{"startOffset":22691,"endOffset":23064,"count":0}],"isBlockCoverage":true},{"functionName":"withSkip","ranges":[{"startOffset":7273,"endOffset":7344,"count":36}],"isBlockCoverage":true},{"functionName":"withPowerAssert","ranges":[{"startOffset":7524,"endOffset":7871,"count":0}],"isBlockCoverage":false},{"functionName":"checkMessage","ranges":[{"startOffset":7897,"endOffset":8316,"count":1},{"startOffset":7982,"endOffset":8012,"count":0},{"startOffset":8037,"endOffset":8315,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8342,"endOffset":8364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8391,"endOffset":8579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8604,"endOffset":9507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9533,"endOffset":9864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9896,"endOffset":10508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10543,"endOffset":11070,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11099,"endOffset":12664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12698,"endOffset":15048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15080,"endOffset":15667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15704,"endOffset":17580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17611,"endOffset":19177,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19206,"endOffset":19502,"count":1},{"startOffset":19270,"endOffset":19288,"count":0},{"startOffset":19323,"endOffset":19498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19530,"endOffset":19822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19849,"endOffset":20129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20157,"endOffset":20441,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20469,"endOffset":21363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21394,"endOffset":22309,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22374,"endOffset":22685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22778,"endOffset":23053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":65,"endOffset":200,"count":2},{"startOffset":134,"endOffset":162,"count":0}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18756,"count":1}],"isBlockCoverage":true},{"functionName":"formatErrorValue","ranges":[{"startOffset":337,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"captureSavedError","ranges":[{"startOffset":502,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext","ranges":[{"startOffset":746,"endOffset":4042,"count":2}],"isBlockCoverage":true},{"functionName":"pass","ranges":[{"startOffset":785,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"pending","ranges":[{"startOffset":844,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":911,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":969,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"compareWithSnapshot","ranges":[{"startOffset":1040,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.snapshot.skip","ranges":[{"startOffset":1195,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.log","ranges":[{"startOffset":1246,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan","ranges":[{"startOffset":1502,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan.skip","ranges":[{"startOffset":1580,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.timeout","ranges":[{"startOffset":1608,"endOffset":1640,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.teardown","ranges":[{"startOffset":1661,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.try","ranges":[{"startOffset":1725,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"get end","ranges":[{"startOffset":4045,"endOffset":4184,"count":0}],"isBlockCoverage":false},{"functionName":"get title","ranges":[{"startOffset":4187,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4240,"endOffset":4303,"count":2}],"isBlockCoverage":true},{"functionName":"set context","ranges":[{"startOffset":4306,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"get passed","ranges":[{"startOffset":4379,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgStart","ranges":[{"startOffset":4438,"endOffset":4539,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgEnd","ranges":[{"startOffset":4542,"endOffset":4601,"count":0}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4619,"endOffset":7595,"count":2},{"startOffset":4723,"endOffset":4728,"count":0}],"isBlockCoverage":true},{"functionName":"Test.compareWithSnapshot","ranges":[{"startOffset":5415,"endOffset":5967,"count":0}],"isBlockCoverage":false},{"functionName":"Test.skipSnapshot","ranges":[{"startOffset":5992,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"Test.runAttempt","ranges":[{"startOffset":6271,"endOffset":7084,"count":0}],"isBlockCoverage":false},{"functionName":"bindEndCallback","ranges":[{"startOffset":7598,"endOffset":8007,"count":0}],"isBlockCoverage":false},{"functionName":"endCallback","ranges":[{"startOffset":8010,"endOffset":8482,"count":0}],"isBlockCoverage":false},{"functionName":"createExecutionContext","ranges":[{"startOffset":8485,"endOffset":8551,"count":2}],"isBlockCoverage":true},{"functionName":"countPassedAssertion","ranges":[{"startOffset":8554,"endOffset":8906,"count":1},{"startOffset":8601,"endOffset":8692,"count":0},{"startOffset":8730,"endOffset":8855,"count":0}],"isBlockCoverage":true},{"functionName":"addLog","ranges":[{"startOffset":8909,"endOffset":8950,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingAssertion","ranges":[{"startOffset":8953,"endOffset":9540,"count":0}],"isBlockCoverage":false},{"functionName":"addFailedAssertion","ranges":[{"startOffset":9543,"endOffset":9928,"count":0}],"isBlockCoverage":false},{"functionName":"finishAttempt","ranges":[{"startOffset":9931,"endOffset":10949,"count":0}],"isBlockCoverage":false},{"functionName":"saveFirstError","ranges":[{"startOffset":10952,"endOffset":11038,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":11041,"endOffset":11337,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":11340,"endOffset":11637,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":11640,"endOffset":11820,"count":1},{"startOffset":11701,"endOffset":11817,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":11823,"endOffset":11918,"count":2}],"isBlockCoverage":true},{"functionName":"addTeardown","ranges":[{"startOffset":11921,"endOffset":12310,"count":0}],"isBlockCoverage":false},{"functionName":"runTeardowns","ranges":[{"startOffset":12313,"endOffset":12514,"count":2},{"startOffset":12377,"endOffset":12511,"count":0}],"isBlockCoverage":true},{"functionName":"verifyPlan","ranges":[{"startOffset":12517,"endOffset":12878,"count":2},{"startOffset":12583,"endOffset":12621,"count":0},{"startOffset":12623,"endOffset":12875,"count":0}],"isBlockCoverage":true},{"functionName":"verifyAssertions","ranges":[{"startOffset":12881,"endOffset":13526,"count":2},{"startOffset":12926,"endOffset":12942,"count":0},{"startOffset":12980,"endOffset":13098,"count":0},{"startOffset":13138,"endOffset":13241,"count":0},{"startOffset":13277,"endOffset":13523,"count":1},{"startOffset":13311,"endOffset":13377,"count":0},{"startOffset":13409,"endOffset":13427,"count":0},{"startOffset":13429,"endOffset":13519,"count":0}],"isBlockCoverage":true},{"functionName":"trackThrows","ranges":[{"startOffset":13529,"endOffset":13595,"count":0}],"isBlockCoverage":false},{"functionName":"detectImproperThrows","ranges":[{"startOffset":13598,"endOffset":14271,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingThrowsAssertion","ranges":[{"startOffset":14274,"endOffset":14711,"count":0}],"isBlockCoverage":false},{"functionName":"attributeLeakedError","ranges":[{"startOffset":14714,"endOffset":14863,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":14866,"endOffset":15048,"count":2},{"startOffset":14983,"endOffset":15045,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":15051,"endOffset":17865,"count":2},{"startOffset":15149,"endOffset":15470,"count":0},{"startOffset":15705,"endOffset":15854,"count":0},{"startOffset":16031,"endOffset":16885,"count":0},{"startOffset":17837,"endOffset":17864,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15732,"endOffset":15848,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16484,"endOffset":16879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16926,"endOffset":17831,"count":2}],"isBlockCoverage":true},{"functionName":"finishDueToAttributedError","ranges":[{"startOffset":16977,"endOffset":17019,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToTimeout","ranges":[{"startOffset":17052,"endOffset":17094,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToInactivity","ranges":[{"startOffset":17130,"endOffset":17370,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17397,"endOffset":17731,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17744,"endOffset":17772,"count":2}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":17868,"endOffset":18729,"count":2},{"startOffset":17967,"endOffset":18020,"count":0},{"startOffset":18264,"endOffset":18455,"count":0}],"isBlockCoverage":true}]},{"scriptId":"432","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/plur/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":87,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/irregular-plurals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":227,"count":5}],"isBlockCoverage":true}]},{"scriptId":"434","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/dependency-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":151,"endOffset":311,"count":3},{"startOffset":205,"endOffset":219,"count":1},{"startOffset":219,"endOffset":310,"count":2}],"isBlockCoverage":true},{"functionName":"track","ranges":[{"startOffset":337,"endOffset":552,"count":133},{"startOffset":401,"endOffset":415,"count":0},{"startOffset":452,"endOffset":483,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":578,"endOffset":869,"count":1},{"startOffset":659,"endOffset":867,"count":3}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":740,"endOffset":863,"count":134},{"startOffset":794,"endOffset":821,"count":133}],"isBlockCoverage":true}]},{"scriptId":"435","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/line-numbers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":0,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"findTest","ranges":[{"startOffset":579,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":1169,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1284,"endOffset":2438,"count":1},{"startOffset":1371,"endOffset":2437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1632,"endOffset":2435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19729,"count":1},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":238,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":444,"endOffset":516,"count":2}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":1174,"endOffset":1478,"count":4},{"startOffset":1236,"endOffset":1248,"count":0},{"startOffset":1296,"endOffset":1380,"count":0},{"startOffset":1381,"endOffset":1474,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":1480,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":1627,"endOffset":1829,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":1826,"count":8},{"startOffset":1770,"endOffset":1799,"count":1},{"startOffset":1805,"endOffset":1825,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1912,"endOffset":2942,"count":4},{"startOffset":2040,"endOffset":2341,"count":0},{"startOffset":2375,"endOffset":2416,"count":0},{"startOffset":2460,"endOffset":2720,"count":0},{"startOffset":2751,"endOffset":2845,"count":1},{"startOffset":2850,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":3117,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":3607,"endOffset":4650,"count":4},{"startOffset":3685,"endOffset":4173,"count":0},{"startOffset":4576,"endOffset":4594,"count":0},{"startOffset":4625,"endOffset":4649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5057,"endOffset":5798,"count":4},{"startOffset":5168,"endOffset":5797,"count":0}],"isBlockCoverage":true},{"functionName":"mapSourcePosition","ranges":[{"startOffset":5802,"endOffset":7614,"count":250},{"startOffset":5910,"endOffset":6822,"count":4},{"startOffset":6068,"endOffset":6705,"count":0},{"startOffset":6923,"endOffset":6981,"count":0},{"startOffset":6983,"endOffset":7592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6450,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":7754,"endOffset":8450,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":8846,"endOffset":10836,"count":250},{"startOffset":8940,"endOffset":8974,"count":0},{"startOffset":9048,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9185,"count":0},{"startOffset":9244,"endOffset":9474,"count":0},{"startOffset":9897,"endOffset":9913,"count":150},{"startOffset":9936,"endOffset":10558,"count":125},{"startOffset":10080,"endOffset":10112,"count":0},{"startOffset":10239,"endOffset":10280,"count":50},{"startOffset":10420,"endOffset":10473,"count":25},{"startOffset":10479,"endOffset":10554,"count":0},{"startOffset":10558,"endOffset":10757,"count":125},{"startOffset":10583,"endOffset":10642,"count":25},{"startOffset":10620,"endOffset":10636,"count":0},{"startOffset":10642,"endOffset":10757,"count":100},{"startOffset":10697,"endOffset":10757,"count":0}],"isBlockCoverage":true},{"functionName":"cloneCallSite","ranges":[{"startOffset":10838,"endOffset":11143,"count":250}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11084,"count":5000},{"startOffset":11017,"endOffset":11065,"count":4500},{"startOffset":11066,"endOffset":11079,"count":500}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":11019,"endOffset":11065,"count":1250}],"isBlockCoverage":true},{"functionName":"wrapCallSite","ranges":[{"startOffset":11145,"endOffset":13493,"count":250},{"startOffset":11257,"endOffset":11316,"count":0},{"startOffset":11340,"endOffset":11393,"count":0},{"startOffset":11633,"endOffset":11668,"count":0},{"startOffset":12275,"endOffset":12279,"count":0},{"startOffset":12300,"endOffset":12324,"count":0},{"startOffset":12325,"endOffset":12342,"count":0},{"startOffset":12343,"endOffset":12361,"count":0},{"startOffset":12363,"endOffset":12400,"count":0},{"startOffset":13129,"endOffset":13238,"count":0},{"startOffset":13254,"endOffset":13492,"count":0}],"isBlockCoverage":true},{"functionName":"frame.getFunctionName","ranges":[{"startOffset":12660,"endOffset":12829,"count":250},{"startOffset":12711,"endOffset":12759,"count":25},{"startOffset":12759,"endOffset":12822,"count":225}],"isBlockCoverage":true},{"functionName":"frame.getFileName","ranges":[{"startOffset":12855,"endOffset":12893,"count":0}],"isBlockCoverage":false},{"functionName":"frame.getLineNumber","ranges":[{"startOffset":12921,"endOffset":12957,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getColumnNumber","ranges":[{"startOffset":12987,"endOffset":13029,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getScriptNameOrSourceURL","ranges":[{"startOffset":13068,"endOffset":13106,"count":250}],"isBlockCoverage":true},{"functionName":"frame.getEvalOrigin","ranges":[{"startOffset":13352,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":13605,"endOffset":14218,"count":25},{"startOffset":13683,"endOffset":13741,"count":0},{"startOffset":13767,"endOffset":13777,"count":0},{"startOffset":13809,"endOffset":13814,"count":0},{"startOffset":13990,"endOffset":14109,"count":250}],"isBlockCoverage":true},{"functionName":"getErrorSource","ranges":[{"startOffset":14285,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"printErrorAndExit","ranges":[{"startOffset":15106,"endOffset":15483,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":15485,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":16228,"endOffset":19374,"count":2},{"startOffset":16268,"endOffset":16273,"count":0},{"startOffset":16409,"endOffset":16530,"count":0},{"startOffset":16660,"endOffset":16807,"count":0},{"startOffset":16942,"endOffset":17097,"count":0},{"startOffset":17190,"endOffset":17207,"count":0},{"startOffset":17209,"endOffset":17703,"count":0},{"startOffset":17841,"endOffset":17884,"count":0},{"startOffset":17966,"endOffset":18056,"count":1},{"startOffset":18194,"endOffset":18200,"count":0},{"startOffset":18657,"endOffset":18698,"count":0},{"startOffset":18705,"endOffset":18716,"count":0},{"startOffset":19255,"endOffset":19288,"count":0},{"startOffset":19290,"endOffset":19368,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":17447,"endOffset":17632,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":19409,"endOffset":19728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"438","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/source-map-support/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/buffer-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1595,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":184,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":281,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":824,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":1154,"endOffset":1565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/test/index.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1409,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":162,"count":1},{"startOffset":141,"endOffset":159,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":164,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":352,"endOffset":1095,"count":1},{"startOffset":434,"endOffset":507,"count":0},{"startOffset":509,"endOffset":605,"count":0},{"startOffset":607,"endOffset":735,"count":0},{"startOffset":758,"endOffset":1094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1117,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1185,"endOffset":1238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1266,"endOffset":1368,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1302,"endOffset":1364,"count":1}],"isBlockCoverage":true}]},{"scriptId":"450","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":269,"count":1},{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"451","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/ava/lib/worker/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"makeCjsExport","ranges":[{"startOffset":89,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":98,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":151,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true}]},{"scriptId":"453","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":1},{"startOffset":351,"endOffset":356,"count":0}],"isBlockCoverage":true}]},{"scriptId":"454","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2069,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":173,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":361,"endOffset":1104,"count":1},{"startOffset":443,"endOffset":516,"count":0},{"startOffset":518,"endOffset":614,"count":0},{"startOffset":616,"endOffset":744,"count":0},{"startOffset":767,"endOffset":1103,"count":0}],"isBlockCoverage":true},{"functionName":"createPlugin","ranges":[{"startOffset":1180,"endOffset":2005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1284,"endOffset":2000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/change-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/tslib/tslib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13204,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1317,"endOffset":2289,"count":1},{"startOffset":1390,"endOffset":1462,"count":0},{"startOffset":1502,"endOffset":1515,"count":0},{"startOffset":1517,"endOffset":1644,"count":0},{"startOffset":1805,"endOffset":1864,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1557,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createExporter","ranges":[{"startOffset":1870,"endOffset":2286,"count":2},{"startOffset":1946,"endOffset":2188,"count":1},{"startOffset":2098,"endOffset":2177,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2205,"endOffset":2278,"count":46},{"startOffset":2254,"endOffset":2271,"count":23},{"startOffset":2272,"endOffset":2275,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2293,"endOffset":13200,"count":1},{"startOffset":2362,"endOffset":2450,"count":0},{"startOffset":2451,"endOffset":2537,"count":0},{"startOffset":2790,"endOffset":3030,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":2413,"endOffset":2449,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":2463,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":2558,"endOffset":2756,"count":0}],"isBlockCoverage":false},{"functionName":"__assign","ranges":[{"startOffset":2793,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"__rest","ranges":[{"startOffset":3048,"endOffset":3549,"count":0}],"isBlockCoverage":false},{"functionName":"__decorate","ranges":[{"startOffset":3571,"endOffset":4120,"count":0}],"isBlockCoverage":false},{"functionName":"__param","ranges":[{"startOffset":4139,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"__metadata","ranges":[{"startOffset":4281,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":4485,"endOffset":5160,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":5183,"endOffset":7054,"count":0}],"isBlockCoverage":false},{"functionName":"__createBinding","ranges":[{"startOffset":7081,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"__exportStar","ranges":[{"startOffset":7197,"endOffset":7323,"count":11},{"startOffset":7247,"endOffset":7316,"count":17}],"isBlockCoverage":true},{"functionName":"__values","ranges":[{"startOffset":7343,"endOffset":7811,"count":0}],"isBlockCoverage":false},{"functionName":"__read","ranges":[{"startOffset":7829,"endOffset":8354,"count":0}],"isBlockCoverage":false},{"functionName":"__spread","ranges":[{"startOffset":8374,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArrays","ranges":[{"startOffset":8552,"endOffset":8854,"count":0}],"isBlockCoverage":false},{"functionName":"__await","ranges":[{"startOffset":8873,"endOffset":8973,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncGenerator","ranges":[{"startOffset":9001,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncDelegator","ranges":[{"startOffset":9959,"endOffset":10302,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncValues","ranges":[{"startOffset":10327,"endOffset":11013,"count":0}],"isBlockCoverage":false},{"functionName":"__makeTemplateObject","ranges":[{"startOffset":11045,"endOffset":11221,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":11245,"endOffset":11505,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":11532,"endOffset":11623,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":11657,"endOffset":11876,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":11910,"endOffset":12159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/camel-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":845,"count":1}],"isBlockCoverage":true},{"functionName":"camelCaseTransform","ranges":[{"startOffset":153,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"camelCaseTransformMerge","ranges":[{"startOffset":365,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":590,"endOffset":780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/pascal-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":943,"count":1}],"isBlockCoverage":true},{"functionName":"pascalCaseTransform","ranges":[{"startOffset":145,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCaseTransformMerge","ranges":[{"startOffset":498,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCase","ranges":[{"startOffset":677,"endOffset":876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/no-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1636,"count":1}],"isBlockCoverage":true},{"functionName":"noCase","ranges":[{"startOffset":443,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":1405,"endOffset":1602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lower-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"localeLowerCase","ranges":[{"startOffset":833,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"lowerCase","ranges":[{"startOffset":1141,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/capital-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":631,"count":1}],"isBlockCoverage":true},{"functionName":"capitalCaseTransform","ranges":[{"startOffset":199,"endOffset":306,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase","ranges":[{"startOffset":360,"endOffset":562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"upperCaseFirst","ranges":[{"startOffset":139,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/constant-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"constantCase","ranges":[{"startOffset":187,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/upper-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"localeUpperCase","ranges":[{"startOffset":688,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"upperCase","ranges":[{"startOffset":996,"endOffset":1053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/dot-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":371,"count":1}],"isBlockCoverage":true},{"functionName":"dotCase","ranges":[{"startOffset":145,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/header-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"headerCase","ranges":[{"startOffset":155,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/param-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"paramCase","ranges":[{"startOffset":147,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/path-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":378,"count":1}],"isBlockCoverage":true},{"functionName":"pathCase","ranges":[{"startOffset":147,"endOffset":315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/sentence-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"sentenceCaseTransform","ranges":[{"startOffset":199,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceCase","ranges":[{"startOffset":439,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/snake-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"snakeCase","ranges":[{"startOffset":147,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/replace-visitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4266,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":455,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":643,"endOffset":1386,"count":1},{"startOffset":725,"endOffset":798,"count":0},{"startOffset":800,"endOffset":896,"count":0},{"startOffset":898,"endOffset":1026,"count":0},{"startOffset":1049,"endOffset":1385,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1388,"endOffset":1483,"count":1},{"startOffset":1456,"endOffset":1461,"count":0}],"isBlockCoverage":true},{"functionName":"ReplaceVisitor","ranges":[{"startOffset":1535,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"get nodeType","ranges":[{"startOffset":1646,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"onProgramNode","ranges":[{"startOffset":1713,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"onIdentifierNode","ranges":[{"startOffset":1807,"endOffset":4010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1254,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":296,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":426,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":621,"endOffset":716,"count":2},{"startOffset":695,"endOffset":713,"count":0}],"isBlockCoverage":true},{"functionName":"addDefault","ranges":[{"startOffset":718,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":848,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":986,"endOffset":1118,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":1120,"endOffset":1254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/import-injector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8994,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":364,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":552,"endOffset":1295,"count":1},{"startOffset":634,"endOffset":707,"count":0},{"startOffset":709,"endOffset":805,"count":0},{"startOffset":807,"endOffset":935,"count":0},{"startOffset":958,"endOffset":1294,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1297,"endOffset":1392,"count":3},{"startOffset":1365,"endOffset":1370,"count":2},{"startOffset":1371,"endOffset":1389,"count":1}],"isBlockCoverage":true},{"functionName":"ImportInjector","ranges":[{"startOffset":1419,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"addDefault","ranges":[{"startOffset":1931,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":2036,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":2238,"endOffset":2364,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":2368,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"_applyDefaults","ranges":[{"startOffset":2500,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"_generateImport","ranges":[{"startOffset":3294,"endOffset":8518,"count":0}],"isBlockCoverage":false},{"functionName":"_insertStatements","ranges":[{"startOffset":8522,"endOffset":8956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16683,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1564,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1715,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1881,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2171,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2305,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2427,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2549,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2685,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2827,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2960,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3089,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3228,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3378,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3524,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3671,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3816,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3949,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4091,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4229,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4357,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4490,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4622,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4752,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4890,"endOffset":4949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5029,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5159,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5302,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5442,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5583,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5732,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5876,"endOffset":5935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6024,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6173,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6328,"endOffset":6393,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6470,"endOffset":6517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6598,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6730,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6852,"endOffset":6893,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6971,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7101,"endOffset":7153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7233,"endOffset":7283,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7357,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7476,"endOffset":7521,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7607,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7749,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7886,"endOffset":7937,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8013,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8146,"endOffset":8203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8278,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8412,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8557,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8687,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8814,"endOffset":8867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8944,"endOffset":8991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9086,"endOffset":9151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9612,"endOffset":9885,"count":287},{"startOffset":9678,"endOffset":9685,"count":0},{"startOffset":9749,"endOffset":9756,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9828,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10304,"endOffset":10578,"count":560},{"startOffset":10370,"endOffset":10377,"count":0},{"startOffset":10441,"endOffset":10448,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10520,"endOffset":10570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11683,"endOffset":11957,"count":45},{"startOffset":11749,"endOffset":11756,"count":0},{"startOffset":11820,"endOffset":11827,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11899,"endOffset":11949,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12035,"endOffset":12308,"count":20},{"startOffset":12101,"endOffset":12108,"count":0},{"startOffset":12172,"endOffset":12179,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12251,"endOffset":12300,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13242,"endOffset":13517,"count":11},{"startOffset":13308,"endOffset":13315,"count":0},{"startOffset":13379,"endOffset":13386,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13458,"endOffset":13509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16143,"endOffset":16417,"count":287},{"startOffset":16209,"endOffset":16216,"count":0},{"startOffset":16280,"endOffset":16287,"count":1},{"startOffset":16287,"endOffset":16416,"count":286}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16359,"endOffset":16409,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16421,"endOffset":16516,"count":58},{"startOffset":16495,"endOffset":16513,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":282,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"476","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":300,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1002,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":157,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116118,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13938,"endOffset":14033,"count":1},{"startOffset":14012,"endOffset":14030,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":14035,"endOffset":14326,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":14328,"endOffset":14629,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":14631,"endOffset":14924,"count":0}],"isBlockCoverage":false},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":14926,"endOffset":15227,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15229,"endOffset":15508,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15510,"endOffset":15803,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":15805,"endOffset":16094,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":16096,"endOffset":16385,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16387,"endOffset":16676,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":16678,"endOffset":16961,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":16963,"endOffset":17266,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":17268,"endOffset":17563,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17565,"endOffset":17860,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":17862,"endOffset":18155,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":18157,"endOffset":18446,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":18448,"endOffset":18747,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":18749,"endOffset":19018,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":19020,"endOffset":19309,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":19311,"endOffset":19596,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":19598,"endOffset":19897,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":19899,"endOffset":20196,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":20198,"endOffset":20479,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":20481,"endOffset":20764,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":20766,"endOffset":21059,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":21061,"endOffset":21348,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":21350,"endOffset":21639,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteral","ranges":[{"startOffset":21641,"endOffset":21924,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":21926,"endOffset":22215,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":22217,"endOffset":22504,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":22506,"endOffset":22801,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpression","ranges":[{"startOffset":22803,"endOffset":23096,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":23098,"endOffset":23385,"count":0}],"isBlockCoverage":false},{"functionName":"isProgram","ranges":[{"startOffset":23387,"endOffset":23662,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectExpression","ranges":[{"startOffset":23664,"endOffset":23957,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":23959,"endOffset":24244,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":24246,"endOffset":24535,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":24537,"endOffset":24820,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":24822,"endOffset":25113,"count":0}],"isBlockCoverage":false},{"functionName":"isSequenceExpression","ranges":[{"startOffset":25115,"endOffset":25412,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":25414,"endOffset":25721,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchCase","ranges":[{"startOffset":25723,"endOffset":26004,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":26006,"endOffset":26297,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":26299,"endOffset":26588,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":26590,"endOffset":26879,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":26881,"endOffset":27166,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":27168,"endOffset":27459,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":27461,"endOffset":27754,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":27756,"endOffset":28055,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":28057,"endOffset":28354,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":28356,"endOffset":28645,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":28647,"endOffset":28934,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":28936,"endOffset":29231,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayPattern","ranges":[{"startOffset":29233,"endOffset":29518,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":29520,"endOffset":29827,"count":0}],"isBlockCoverage":false},{"functionName":"isClassBody","ranges":[{"startOffset":29829,"endOffset":30108,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":30110,"endOffset":30401,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":30403,"endOffset":30696,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":30698,"endOffset":30999,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":31001,"endOffset":31310,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":31312,"endOffset":31617,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":31619,"endOffset":31910,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":31912,"endOffset":32201,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":32203,"endOffset":32498,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":32500,"endOffset":32805,"count":0}],"isBlockCoverage":false},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":32807,"endOffset":33116,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":33118,"endOffset":33409,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":33411,"endOffset":33696,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":33698,"endOffset":33981,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":33983,"endOffset":34270,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":34272,"endOffset":34559,"count":0}],"isBlockCoverage":false},{"functionName":"isSuper","ranges":[{"startOffset":34561,"endOffset":34832,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":34834,"endOffset":35143,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateElement","ranges":[{"startOffset":35145,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":35438,"endOffset":35729,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":35731,"endOffset":36022,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":36024,"endOffset":36319,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":36321,"endOffset":36620,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":36622,"endOffset":36925,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":36927,"endOffset":37244,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":37246,"endOffset":37557,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":37559,"endOffset":37850,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":37852,"endOffset":38137,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":38139,"endOffset":38430,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":38432,"endOffset":38725,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":38727,"endOffset":39014,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":39016,"endOffset":39317,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":39319,"endOffset":39612,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":39614,"endOffset":39909,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":39911,"endOffset":40202,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":40204,"endOffset":40513,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":40515,"endOffset":40830,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":40832,"endOffset":41127,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":41129,"endOffset":41430,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":41432,"endOffset":41737,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":41739,"endOffset":42034,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":42036,"endOffset":42339,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":42341,"endOffset":42636,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":42638,"endOffset":42931,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":42933,"endOffset":43234,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":43236,"endOffset":43543,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":43545,"endOffset":43858,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":43860,"endOffset":44159,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":44161,"endOffset":44460,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":44462,"endOffset":44767,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":44769,"endOffset":45084,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":45086,"endOffset":45387,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":45389,"endOffset":45690,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":45692,"endOffset":45997,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":45999,"endOffset":46304,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":46306,"endOffset":46601,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":46603,"endOffset":46900,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":46902,"endOffset":47211,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":47213,"endOffset":47494,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":47496,"endOffset":47803,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":47805,"endOffset":48120,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":48122,"endOffset":48423,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":48425,"endOffset":48726,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":48728,"endOffset":49025,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":49027,"endOffset":49326,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":49328,"endOffset":49629,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":49631,"endOffset":49910,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":49912,"endOffset":50201,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":50203,"endOffset":50500,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":50502,"endOffset":50789,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":50791,"endOffset":51100,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":51102,"endOffset":51415,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":51417,"endOffset":51716,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":51718,"endOffset":51995,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":51997,"endOffset":52294,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":52296,"endOffset":52587,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":52589,"endOffset":52880,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":52882,"endOffset":53171,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":53173,"endOffset":53462,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":53464,"endOffset":53753,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":53755,"endOffset":54050,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":54052,"endOffset":54345,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":54347,"endOffset":54640,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":54642,"endOffset":54941,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":54943,"endOffset":55228,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":55230,"endOffset":55525,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":55527,"endOffset":55808,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":55810,"endOffset":56107,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":56109,"endOffset":56414,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":56416,"endOffset":56705,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":56707,"endOffset":56994,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":56996,"endOffset":57295,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":57297,"endOffset":57592,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":57594,"endOffset":57889,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":57891,"endOffset":58188,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":58190,"endOffset":58465,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":58467,"endOffset":58750,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":58752,"endOffset":59049,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":59051,"endOffset":59348,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":59350,"endOffset":59619,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":59621,"endOffset":59904,"count":0}],"isBlockCoverage":false},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":59906,"endOffset":60209,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":60211,"endOffset":60510,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":60512,"endOffset":60803,"count":0}],"isBlockCoverage":false},{"functionName":"isBindExpression","ranges":[{"startOffset":60805,"endOffset":61094,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":61096,"endOffset":61383,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":61385,"endOffset":61694,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":61696,"endOffset":62003,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":62005,"endOffset":62306,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":62308,"endOffset":62627,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":62629,"endOffset":62934,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":62936,"endOffset":63237,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":63239,"endOffset":63536,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":63538,"endOffset":63811,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":63813,"endOffset":64104,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":64106,"endOffset":64385,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":64387,"endOffset":64672,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":64674,"endOffset":64979,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":64981,"endOffset":65290,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":65292,"endOffset":65575,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":65577,"endOffset":65864,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":65866,"endOffset":66159,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":66161,"endOffset":66452,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":66454,"endOffset":66753,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":66755,"endOffset":67050,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":67052,"endOffset":67343,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":67345,"endOffset":67636,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":67638,"endOffset":67951,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":67953,"endOffset":68276,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":68278,"endOffset":68577,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":68579,"endOffset":68874,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":68876,"endOffset":69169,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":69171,"endOffset":69456,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":69458,"endOffset":69751,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":69753,"endOffset":70044,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":70046,"endOffset":70335,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":70337,"endOffset":70624,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":70626,"endOffset":70917,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":70919,"endOffset":71210,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":71212,"endOffset":71503,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":71505,"endOffset":71796,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":71798,"endOffset":72095,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":72097,"endOffset":72390,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":72392,"endOffset":72679,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":72681,"endOffset":72962,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":72964,"endOffset":73253,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":73255,"endOffset":73550,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":73552,"endOffset":73843,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":73845,"endOffset":74136,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":74138,"endOffset":74421,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":74423,"endOffset":74710,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":74712,"endOffset":74995,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":74997,"endOffset":75280,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":75282,"endOffset":75571,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":75573,"endOffset":75854,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":75856,"endOffset":76139,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":76141,"endOffset":76438,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":76440,"endOffset":76735,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":76737,"endOffset":77020,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":77022,"endOffset":77321,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":77323,"endOffset":77612,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":77614,"endOffset":77913,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":77915,"endOffset":78200,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":78202,"endOffset":78489,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":78491,"endOffset":78810,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":78812,"endOffset":79117,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":79119,"endOffset":79410,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":79412,"endOffset":79717,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":79719,"endOffset":80008,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":80010,"endOffset":80301,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":80303,"endOffset":80598,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":80600,"endOffset":80885,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":80887,"endOffset":81186,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":81188,"endOffset":81475,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":81477,"endOffset":81762,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":81764,"endOffset":82075,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":82077,"endOffset":82388,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":82390,"endOffset":82689,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":82691,"endOffset":82988,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":82990,"endOffset":83307,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":83309,"endOffset":83602,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":83604,"endOffset":83921,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":83923,"endOffset":84236,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":84238,"endOffset":84529,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":84531,"endOffset":86486,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":86488,"endOffset":86832,"count":0}],"isBlockCoverage":false},{"functionName":"isScopable","ranges":[{"startOffset":86834,"endOffset":87787,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockParent","ranges":[{"startOffset":87789,"endOffset":88679,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":88681,"endOffset":89115,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":89117,"endOffset":91234,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminatorless","ranges":[{"startOffset":91236,"endOffset":91729,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":91731,"endOffset":92166,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":92168,"endOffset":92521,"count":0}],"isBlockCoverage":false},{"functionName":"isLoop","ranges":[{"startOffset":92523,"endOffset":92957,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":92959,"endOffset":93298,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":93300,"endOffset":93712,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":93714,"endOffset":94078,"count":0}],"isBlockCoverage":false},{"functionName":"isForXStatement","ranges":[{"startOffset":94080,"endOffset":94433,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":94435,"endOffset":94927,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionParent","ranges":[{"startOffset":94929,"endOffset":95433,"count":0}],"isBlockCoverage":false},{"functionName":"isPureish","ranges":[{"startOffset":95435,"endOffset":96090,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":96092,"endOffset":97401,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternLike","ranges":[{"startOffset":97403,"endOffset":97949,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":97951,"endOffset":98556,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":98558,"endOffset":98974,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":98976,"endOffset":99548,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutable","ranges":[{"startOffset":99550,"endOffset":100396,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":100398,"endOffset":100955,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":100957,"endOffset":101328,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMember","ranges":[{"startOffset":101330,"endOffset":101679,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":101681,"endOffset":102062,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":102064,"endOffset":102409,"count":0}],"isBlockCoverage":false},{"functionName":"isPattern","ranges":[{"startOffset":102411,"endOffset":102850,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":102852,"endOffset":103192,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":103194,"endOffset":103648,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":103650,"endOffset":104068,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":104070,"endOffset":104597,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":104599,"endOffset":106929,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":106931,"endOffset":108174,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":108176,"endOffset":108860,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":108862,"endOffset":109614,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":109616,"endOffset":109975,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":109977,"endOffset":110387,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":110389,"endOffset":110814,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":110816,"endOffset":111599,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":111601,"endOffset":111982,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":111984,"endOffset":112475,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":112477,"endOffset":113889,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBaseType","ranges":[{"startOffset":113891,"endOffset":114638,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":114640,"endOffset":115010,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":115012,"endOffset":115378,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":115380,"endOffset":115744,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":115746,"endOffset":116118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":113,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":112,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":289,"endOffset":384,"count":1},{"startOffset":363,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":386,"endOffset":857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":183,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45132,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":20042,"endOffset":20137,"count":1},{"startOffset":20116,"endOffset":20134,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":20139,"endOffset":20236,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":20238,"endOffset":20345,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":20347,"endOffset":20446,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":20448,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":20557,"endOffset":20642,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":20644,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"BlockStatement","ranges":[{"startOffset":20745,"endOffset":20840,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement","ranges":[{"startOffset":20842,"endOffset":20937,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":20939,"endOffset":21034,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":21036,"endOffset":21125,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":21127,"endOffset":21236,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":21238,"endOffset":21339,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":21341,"endOffset":21442,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":21444,"endOffset":21543,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":21545,"endOffset":21640,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":21642,"endOffset":21747,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":21749,"endOffset":21824,"count":0}],"isBlockCoverage":false},{"functionName":"ForInStatement","ranges":[{"startOffset":21826,"endOffset":21921,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":21923,"endOffset":22014,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":22016,"endOffset":22121,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":22123,"endOffset":22226,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":22228,"endOffset":22315,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":22317,"endOffset":22406,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":22408,"endOffset":22507,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":22509,"endOffset":22602,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":22604,"endOffset":22699,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":22701,"endOffset":22790,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":22792,"endOffset":22887,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":22889,"endOffset":22982,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":22984,"endOffset":23085,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":23087,"endOffset":23186,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":23188,"endOffset":23281,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":23283,"endOffset":23364,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":23366,"endOffset":23465,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":23467,"endOffset":23558,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":23560,"endOffset":23655,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":23657,"endOffset":23746,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":23748,"endOffset":23845,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":23847,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":23952,"endOffset":24065,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":24067,"endOffset":24154,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":24156,"endOffset":24253,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":24255,"endOffset":24350,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowStatement","ranges":[{"startOffset":24352,"endOffset":24447,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":24449,"endOffset":24540,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":24542,"endOffset":24639,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":24641,"endOffset":24740,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":24742,"endOffset":24847,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":24849,"endOffset":24952,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":24954,"endOffset":25049,"count":0}],"isBlockCoverage":false},{"functionName":"WithStatement","ranges":[{"startOffset":25051,"endOffset":25144,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":25146,"endOffset":25247,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPattern","ranges":[{"startOffset":25249,"endOffset":25340,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":25342,"endOffset":25455,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":25457,"endOffset":25542,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":25544,"endOffset":25641,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":25643,"endOffset":25742,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":25744,"endOffset":25851,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":25853,"endOffset":25968,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":25970,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":26083,"endOffset":26180,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement","ranges":[{"startOffset":26182,"endOffset":26277,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":26279,"endOffset":26380,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":26382,"endOffset":26493,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":26495,"endOffset":26610,"count":0}],"isBlockCoverage":false},{"functionName":"ImportSpecifier","ranges":[{"startOffset":26612,"endOffset":26709,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":26711,"endOffset":26802,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":26804,"endOffset":26893,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":26895,"endOffset":26988,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadElement","ranges":[{"startOffset":26990,"endOffset":27083,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":27085,"endOffset":27162,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":27164,"endOffset":27279,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":27281,"endOffset":27378,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":27380,"endOffset":27477,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":27479,"endOffset":27576,"count":0}],"isBlockCoverage":false},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":27578,"endOffset":27679,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":27681,"endOffset":27786,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":27788,"endOffset":27897,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":27899,"endOffset":28022,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":28024,"endOffset":28141,"count":0}],"isBlockCoverage":false},{"functionName":"ClassImplements","ranges":[{"startOffset":28143,"endOffset":28240,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":28242,"endOffset":28333,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":28335,"endOffset":28432,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":28434,"endOffset":28533,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":28535,"endOffset":28628,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":28630,"endOffset":28737,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":28739,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":28840,"endOffset":28941,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":28943,"endOffset":29040,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":29042,"endOffset":29157,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":29159,"endOffset":29280,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":29282,"endOffset":29383,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":29385,"endOffset":29492,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":29494,"endOffset":29605,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":29607,"endOffset":29708,"count":0}],"isBlockCoverage":false},{"functionName":"GenericTypeAnnotation","ranges":[{"startOffset":29710,"endOffset":29819,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":29821,"endOffset":29922,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":29924,"endOffset":30023,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":30025,"endOffset":30132,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":30134,"endOffset":30247,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":30249,"endOffset":30368,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":30370,"endOffset":30475,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":30477,"endOffset":30582,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":30584,"endOffset":30695,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteralTypeAnnotation","ranges":[{"startOffset":30697,"endOffset":30818,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":30820,"endOffset":30927,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":30929,"endOffset":31036,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":31038,"endOffset":31149,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":31151,"endOffset":31262,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":31264,"endOffset":31365,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":31367,"endOffset":31470,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":31472,"endOffset":31587,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":31589,"endOffset":31676,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":31678,"endOffset":31791,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteralTypeAnnotation","ranges":[{"startOffset":31793,"endOffset":31914,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":31916,"endOffset":32023,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":32025,"endOffset":32132,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":32134,"endOffset":32237,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":32239,"endOffset":32344,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":32346,"endOffset":32453,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":32455,"endOffset":32540,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":32542,"endOffset":32637,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":32639,"endOffset":32742,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":32744,"endOffset":32837,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterDeclaration","ranges":[{"startOffset":32839,"endOffset":32954,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":32956,"endOffset":33075,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":33077,"endOffset":33182,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":33184,"endOffset":33267,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":33269,"endOffset":33372,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":33374,"endOffset":33471,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":33473,"endOffset":33570,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":33572,"endOffset":33667,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":33669,"endOffset":33764,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":33766,"endOffset":33861,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":33863,"endOffset":33964,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":33966,"endOffset":34065,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":34067,"endOffset":34166,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":34168,"endOffset":34273,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":34275,"endOffset":34366,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":34368,"endOffset":34469,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":34471,"endOffset":34558,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":34560,"endOffset":34663,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":34665,"endOffset":34776,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":34778,"endOffset":34873,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":34875,"endOffset":34968,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":34970,"endOffset":35075,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":35077,"endOffset":35178,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":35180,"endOffset":35281,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":35283,"endOffset":35386,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":35388,"endOffset":35469,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":35471,"endOffset":35560,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":35562,"endOffset":35665,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":35667,"endOffset":35770,"count":0}],"isBlockCoverage":false},{"functionName":"Noop","ranges":[{"startOffset":35772,"endOffset":35847,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":35849,"endOffset":35938,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":35940,"endOffset":36049,"count":0}],"isBlockCoverage":false},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":36051,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":36158,"endOffset":36255,"count":0}],"isBlockCoverage":false},{"functionName":"BindExpression","ranges":[{"startOffset":36257,"endOffset":36352,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":36354,"endOffset":36447,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":36449,"endOffset":36564,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":36566,"endOffset":36679,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":36681,"endOffset":36788,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":36790,"endOffset":36915,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":36917,"endOffset":37028,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":37030,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":37139,"endOffset":37242,"count":0}],"isBlockCoverage":false},{"functionName":"Import","ranges":[{"startOffset":37244,"endOffset":37323,"count":0}],"isBlockCoverage":false},{"functionName":"ImportAttribute","ranges":[{"startOffset":37325,"endOffset":37422,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":37424,"endOffset":37509,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":37511,"endOffset":37602,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":37604,"endOffset":37715,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":37717,"endOffset":37832,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":37834,"endOffset":37923,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntLiteral","ranges":[{"startOffset":37925,"endOffset":38018,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":38020,"endOffset":38119,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":38121,"endOffset":38218,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":38220,"endOffset":38325,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":38327,"endOffset":38428,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":38430,"endOffset":38527,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":38529,"endOffset":38626,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":38628,"endOffset":38747,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":38749,"endOffset":38878,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":38880,"endOffset":38985,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":38987,"endOffset":39088,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":39090,"endOffset":39189,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":39191,"endOffset":39282,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":39284,"endOffset":39383,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":39385,"endOffset":39482,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":39484,"endOffset":39579,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":39581,"endOffset":39674,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":39676,"endOffset":39773,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":39775,"endOffset":39872,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":39874,"endOffset":39971,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":39973,"endOffset":40070,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":40072,"endOffset":40175,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":40177,"endOffset":40276,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":40278,"endOffset":40371,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":40373,"endOffset":40460,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":40462,"endOffset":40557,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":40559,"endOffset":40660,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":40662,"endOffset":40759,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":40761,"endOffset":40858,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":40860,"endOffset":40949,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":40951,"endOffset":41044,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":41046,"endOffset":41135,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":41137,"endOffset":41226,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":41228,"endOffset":41323,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":41325,"endOffset":41412,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":41414,"endOffset":41503,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":41505,"endOffset":41608,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":41610,"endOffset":41711,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":41713,"endOffset":41802,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":41804,"endOffset":41909,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":41911,"endOffset":42006,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":42008,"endOffset":42113,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":42115,"endOffset":42206,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":42208,"endOffset":42301,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":42303,"endOffset":42428,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":42430,"endOffset":42541,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":42543,"endOffset":42640,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":42642,"endOffset":42753,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":42755,"endOffset":42850,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":42852,"endOffset":42949,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":42951,"endOffset":43052,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":43054,"endOffset":43145,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":43147,"endOffset":43252,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":43254,"endOffset":43347,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":43349,"endOffset":43440,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":43442,"endOffset":43559,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":43561,"endOffset":43678,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":43680,"endOffset":43785,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":43787,"endOffset":43890,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":43892,"endOffset":44015,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":44017,"endOffset":44116,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":44118,"endOffset":44241,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterDeclaration","ranges":[{"startOffset":44243,"endOffset":44362,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":44364,"endOffset":44461,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":44463,"endOffset":44631,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":44633,"endOffset":44796,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":44798,"endOffset":44959,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":44961,"endOffset":45132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":294,"endOffset":389,"count":2},{"startOffset":362,"endOffset":367,"count":1},{"startOffset":368,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":391,"endOffset":1063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2539,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":156,"endOffset":205,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":284,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":473,"count":45}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":553,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":682,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":815,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":959,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1100,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1243,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1400,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1817,"endOffset":1912,"count":1},{"startOffset":1885,"endOffset":1890,"count":0}],"isBlockCoverage":true}]},{"scriptId":"486","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"FastObject","ranges":[{"startOffset":349,"endOffset":856,"count":18},{"startOffset":635,"endOffset":663,"count":9},{"startOffset":665,"endOffset":804,"count":9},{"startOffset":804,"endOffset":825,"count":1},{"startOffset":826,"endOffset":829,"count":8}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":944,"endOffset":999,"count":8}],"isBlockCoverage":true}]},{"scriptId":"487","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27728,"count":1},{"startOffset":1884,"endOffset":1895,"count":0},{"startOffset":2626,"endOffset":2721,"count":0},{"startOffset":5560,"endOffset":5564,"count":0},{"startOffset":7979,"endOffset":8097,"count":0},{"startOffset":16754,"endOffset":16758,"count":0},{"startOffset":18408,"endOffset":18412,"count":0},{"startOffset":19461,"endOffset":19465,"count":0},{"startOffset":21700,"endOffset":21773,"count":0},{"startOffset":25283,"endOffset":25345,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":558,"endOffset":744,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":746,"endOffset":1489,"count":1},{"startOffset":828,"endOffset":901,"count":0},{"startOffset":903,"endOffset":999,"count":0},{"startOffset":1001,"endOffset":1129,"count":0},{"startOffset":1152,"endOffset":1488,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1491,"endOffset":1586,"count":2},{"startOffset":1565,"endOffset":1583,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2515,"count":1},{"startOffset":2182,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2341,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3131,"endOffset":3462,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3307,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10398,"endOffset":10707,"count":1},{"startOffset":10473,"endOffset":10706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10464,"endOffset":10472,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10550,"endOffset":10702,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11868,"endOffset":12105,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12222,"endOffset":13423,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15221,"endOffset":15471,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16233,"endOffset":16555,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16409,"endOffset":16546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18486,"endOffset":18828,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18682,"endOffset":18819,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19552,"endOffset":19894,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19748,"endOffset":19885,"count":0}],"isBlockCoverage":false},{"functionName":"fields.shorthand.validate","ranges":[{"startOffset":20087,"endOffset":20332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20334,"endOffset":20615,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20951,"endOffset":21344,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21114,"endOffset":21339,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":21789,"endOffset":22156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24182,"endOffset":24417,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":26032,"endOffset":26373,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26488,"endOffset":26937,"count":1},{"startOffset":26615,"endOffset":26936,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26796,"endOffset":26928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":371,"endOffset":466,"count":3},{"startOffset":445,"endOffset":463,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":468,"endOffset":916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":154,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":165,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":199,"endOffset":589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":739,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":899,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1188,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11642,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10182,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":10435,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":10782,"endOffset":11228,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":11230,"endOffset":11642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1020,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1123,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1251,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1347,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1487,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2252,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2280,"endOffset":2294,"count":3}],"isBlockCoverage":true}]},{"scriptId":"496","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8173,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1041,"endOffset":1136,"count":1},{"startOffset":1115,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1624,"endOffset":1783,"count":13},{"startOffset":1674,"endOffset":1699,"count":0},{"startOffset":1723,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1785,"endOffset":1845,"count":130}],"isBlockCoverage":true},{"functionName":"typeIs","ranges":[{"startOffset":1847,"endOffset":1972,"count":164},{"startOffset":1913,"endOffset":1939,"count":147},{"startOffset":1940,"endOffset":1969,"count":17}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1974,"endOffset":2046,"count":91}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":2048,"endOffset":2136,"count":33}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":2138,"endOffset":2248,"count":39}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2250,"endOffset":2350,"count":34}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2352,"endOffset":2422,"count":34}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2424,"endOffset":2508,"count":12}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2510,"endOffset":2910,"count":71}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":2544,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2912,"endOffset":3208,"count":21}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2948,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3210,"endOffset":3684,"count":346}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3248,"endOffset":3627,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3686,"endOffset":4199,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3731,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4201,"endOffset":4482,"count":140}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4236,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"assertShape","ranges":[{"startOffset":4484,"endOffset":5094,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4516,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5096,"endOffset":5819,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":5821,"endOffset":5981,"count":80}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":5848,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"defineType","ranges":[{"startOffset":6154,"endOffset":8154,"count":238},{"startOffset":6226,"endOffset":6249,"count":3},{"startOffset":6250,"endOffset":6255,"count":235},{"startOffset":6301,"endOffset":6646,"count":26},{"startOffset":6346,"endOffset":6642,"count":1},{"startOffset":6443,"endOffset":6636,"count":5},{"startOffset":6679,"endOffset":6698,"count":41},{"startOffset":6699,"endOffset":6704,"count":38},{"startOffset":6737,"endOffset":6756,"count":25},{"startOffset":6757,"endOffset":6762,"count":24},{"startOffset":6795,"endOffset":6814,"count":177},{"startOffset":6815,"endOffset":6830,"count":174},{"startOffset":6831,"endOffset":6836,"count":23},{"startOffset":6876,"endOffset":6994,"count":696},{"startOffset":6919,"endOffset":6990,"count":0},{"startOffset":7024,"endOffset":7079,"count":4},{"startOffset":7126,"endOffset":7168,"count":807},{"startOffset":7158,"endOffset":7163,"count":18},{"startOffset":7211,"endOffset":7724,"count":540},{"startOffset":7281,"endOffset":7311,"count":109},{"startOffset":7313,"endOffset":7349,"count":43},{"startOffset":7388,"endOffset":7423,"count":431},{"startOffset":7423,"endOffset":7546,"count":109},{"startOffset":7449,"endOffset":7473,"count":13},{"startOffset":7475,"endOffset":7546,"count":13},{"startOffset":7588,"endOffset":7720,"count":1260},{"startOffset":7634,"endOffset":7714,"count":0},{"startOffset":8073,"endOffset":8129,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7927,"endOffset":8048,"count":457},{"startOffset":7996,"endOffset":8001,"count":45}],"isBlockCoverage":true}]},{"scriptId":"497","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":850,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":234,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"validateField","ranges":[{"startOffset":473,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"validateChild","ranges":[{"startOffset":661,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16204,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":420,"count":1},{"startOffset":399,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":422,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":610,"endOffset":1353,"count":1},{"startOffset":692,"endOffset":765,"count":0},{"startOffset":767,"endOffset":863,"count":0},{"startOffset":865,"endOffset":993,"count":0},{"startOffset":1016,"endOffset":1352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5121,"endOffset":5424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5211,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"fields.declaration.validate","ranges":[{"startOffset":6323,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6575,"endOffset":6788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6929,"endOffset":7369,"count":1},{"startOffset":7206,"endOffset":7368,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7222,"endOffset":7360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8112,"endOffset":8688,"count":1},{"startOffset":8262,"endOffset":8687,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8474,"endOffset":8679,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10460,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11561,"endOffset":11889,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11751,"endOffset":11882,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15263,"endOffset":15549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15815,"endOffset":16065,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16829,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":1038,"endOffset":1822,"count":3}],"isBlockCoverage":true}]},{"scriptId":"500","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5428,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"501","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":310,"endOffset":1053,"count":1},{"startOffset":392,"endOffset":465,"count":0},{"startOffset":467,"endOffset":563,"count":0},{"startOffset":565,"endOffset":693,"count":0},{"startOffset":716,"endOffset":1052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"502","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1078,"count":1},{"startOffset":567,"endOffset":690,"count":8},{"startOffset":630,"endOffset":638,"count":4},{"startOffset":639,"endOffset":653,"count":4},{"startOffset":655,"endOffset":688,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":836,"endOffset":1076,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":881,"endOffset":1072,"count":15},{"startOffset":964,"endOffset":1017,"count":11}],"isBlockCoverage":true}]},{"scriptId":"503","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7963,"count":1},{"startOffset":1473,"endOffset":1635,"count":0},{"startOffset":3423,"endOffset":3522,"count":0},{"startOffset":4608,"endOffset":4707,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2953,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3114,"endOffset":3251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14177,"count":1},{"startOffset":4595,"endOffset":4705,"count":12}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":138,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":326,"endOffset":1069,"count":1},{"startOffset":408,"endOffset":481,"count":0},{"startOffset":483,"endOffset":579,"count":0},{"startOffset":581,"endOffset":709,"count":0},{"startOffset":732,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":257,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":280,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":154,"endOffset":238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44094,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16219,"endOffset":16314,"count":1},{"startOffset":16293,"endOffset":16311,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":16316,"endOffset":16524,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":16526,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":16620,"endOffset":16722,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":16724,"endOffset":16818,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":16820,"endOffset":16922,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":16924,"endOffset":17004,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":17006,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":17102,"endOffset":17192,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":17194,"endOffset":17284,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":17286,"endOffset":17376,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":17378,"endOffset":17462,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":17464,"endOffset":17568,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":17570,"endOffset":17666,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":17668,"endOffset":17764,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":17766,"endOffset":17860,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":17862,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":17954,"endOffset":18054,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":18056,"endOffset":18126,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":18128,"endOffset":18218,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":18220,"endOffset":18306,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":18308,"endOffset":18408,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":18410,"endOffset":18508,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":18510,"endOffset":18592,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":18594,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":18680,"endOffset":18774,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":18776,"endOffset":18864,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":18866,"endOffset":18956,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":18958,"endOffset":19042,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":19044,"endOffset":19134,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":19136,"endOffset":19224,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":19226,"endOffset":19322,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":19324,"endOffset":19418,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":19420,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":19510,"endOffset":19586,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":19588,"endOffset":19682,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":19684,"endOffset":19770,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":19772,"endOffset":19862,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":19864,"endOffset":19948,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":19950,"endOffset":20042,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":20044,"endOffset":20142,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20144,"endOffset":20252,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":20254,"endOffset":20336,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":20338,"endOffset":20430,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":20432,"endOffset":20522,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":20524,"endOffset":20614,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":20616,"endOffset":20702,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":20704,"endOffset":20796,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":20798,"endOffset":20892,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":20894,"endOffset":20994,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":20996,"endOffset":21094,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":21096,"endOffset":21186,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21188,"endOffset":21276,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":21278,"endOffset":21374,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":21376,"endOffset":21462,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":21464,"endOffset":21572,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":21574,"endOffset":21654,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":21656,"endOffset":21748,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":21750,"endOffset":21844,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":21846,"endOffset":21948,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":21950,"endOffset":22060,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":22062,"endOffset":22168,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22170,"endOffset":22262,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22264,"endOffset":22354,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":22356,"endOffset":22452,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":22454,"endOffset":22560,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":22562,"endOffset":22672,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":22674,"endOffset":22766,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":22768,"endOffset":22854,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":22856,"endOffset":22940,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":22942,"endOffset":23030,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":23032,"endOffset":23120,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":23122,"endOffset":23194,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23196,"endOffset":23306,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":23308,"endOffset":23400,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":23402,"endOffset":23494,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":23496,"endOffset":23588,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":23590,"endOffset":23686,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":23688,"endOffset":23788,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":23790,"endOffset":23894,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":23896,"endOffset":24014,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":24016,"endOffset":24128,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":24130,"endOffset":24222,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":24224,"endOffset":24310,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":24312,"endOffset":24404,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":24406,"endOffset":24500,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":24502,"endOffset":24590,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":24592,"endOffset":24694,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":24696,"endOffset":24790,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":24792,"endOffset":24888,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":24890,"endOffset":24982,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":24984,"endOffset":25094,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":25096,"endOffset":25212,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":25214,"endOffset":25310,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":25312,"endOffset":25414,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":25416,"endOffset":25522,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":25524,"endOffset":25620,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":25622,"endOffset":25726,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":25728,"endOffset":25824,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":25826,"endOffset":25920,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":25922,"endOffset":26024,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":26026,"endOffset":26134,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":26136,"endOffset":26250,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":26252,"endOffset":26352,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":26354,"endOffset":26454,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":26456,"endOffset":26562,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":26564,"endOffset":26680,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":26682,"endOffset":26784,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":26786,"endOffset":26888,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":26890,"endOffset":26996,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":26998,"endOffset":27104,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":27106,"endOffset":27202,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":27204,"endOffset":27302,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":27304,"endOffset":27414,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":27416,"endOffset":27498,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":27500,"endOffset":27608,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":27610,"endOffset":27726,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":27728,"endOffset":27830,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":27832,"endOffset":27934,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":27936,"endOffset":28034,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":28036,"endOffset":28136,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":28138,"endOffset":28240,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":28242,"endOffset":28322,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":28324,"endOffset":28414,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":28416,"endOffset":28514,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":28516,"endOffset":28604,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":28606,"endOffset":28716,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":28718,"endOffset":28832,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":28834,"endOffset":28934,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":28936,"endOffset":29014,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":29016,"endOffset":29114,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":29116,"endOffset":29208,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":29210,"endOffset":29302,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":29304,"endOffset":29394,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":29396,"endOffset":29486,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":29488,"endOffset":29578,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":29580,"endOffset":29676,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":29678,"endOffset":29772,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":29774,"endOffset":29868,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":29870,"endOffset":29970,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":29972,"endOffset":30058,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":30060,"endOffset":30156,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":30158,"endOffset":30240,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":30242,"endOffset":30340,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":30342,"endOffset":30448,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":30450,"endOffset":30540,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":30542,"endOffset":30630,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":30632,"endOffset":30732,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":30734,"endOffset":30830,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":30832,"endOffset":30928,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":30930,"endOffset":31028,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":31030,"endOffset":31106,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":31108,"endOffset":31192,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":31194,"endOffset":31292,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":31294,"endOffset":31392,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":31394,"endOffset":31464,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":31466,"endOffset":31550,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":31552,"endOffset":31656,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":31658,"endOffset":31758,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":31760,"endOffset":31852,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":31854,"endOffset":31944,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":31946,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":32036,"endOffset":32146,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":32148,"endOffset":32256,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":32258,"endOffset":32360,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":32362,"endOffset":32482,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":32484,"endOffset":32590,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":32592,"endOffset":32694,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":32696,"endOffset":32794,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":32796,"endOffset":32870,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportAttribute","ranges":[{"startOffset":32872,"endOffset":32964,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":32966,"endOffset":33046,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":33048,"endOffset":33134,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":33136,"endOffset":33242,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":33244,"endOffset":33354,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":33356,"endOffset":33440,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":33442,"endOffset":33530,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":33532,"endOffset":33626,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":33628,"endOffset":33720,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":33722,"endOffset":33822,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":33824,"endOffset":33920,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":33922,"endOffset":34014,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":34016,"endOffset":34108,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":34110,"endOffset":34224,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":34226,"endOffset":34350,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":34352,"endOffset":34452,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":34454,"endOffset":34550,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":34552,"endOffset":34646,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":34648,"endOffset":34734,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":34736,"endOffset":34830,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":34832,"endOffset":34924,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":34926,"endOffset":35016,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":35018,"endOffset":35106,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":35108,"endOffset":35200,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":35202,"endOffset":35294,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":35296,"endOffset":35388,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":35390,"endOffset":35482,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":35484,"endOffset":35582,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":35584,"endOffset":35678,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":35680,"endOffset":35768,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":35770,"endOffset":35852,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":35854,"endOffset":35944,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":35946,"endOffset":36042,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":36044,"endOffset":36136,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":36138,"endOffset":36230,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":36232,"endOffset":36316,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":36318,"endOffset":36406,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":36408,"endOffset":36492,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":36494,"endOffset":36578,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":36580,"endOffset":36670,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":36672,"endOffset":36754,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":36756,"endOffset":36840,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":36842,"endOffset":36940,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":36942,"endOffset":37038,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":37040,"endOffset":37124,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":37126,"endOffset":37226,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":37228,"endOffset":37318,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":37320,"endOffset":37420,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":37422,"endOffset":37508,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":37510,"endOffset":37598,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":37600,"endOffset":37720,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":37722,"endOffset":37828,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":37830,"endOffset":37922,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":37924,"endOffset":38030,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":38032,"endOffset":38122,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":38124,"endOffset":38216,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":38218,"endOffset":38314,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":38316,"endOffset":38402,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":38404,"endOffset":38504,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":38506,"endOffset":38594,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":38596,"endOffset":38682,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":38684,"endOffset":38796,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":38798,"endOffset":38910,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":38912,"endOffset":39012,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":39014,"endOffset":39112,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":39114,"endOffset":39232,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":39234,"endOffset":39328,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":39330,"endOffset":39448,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":39450,"endOffset":39564,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":39566,"endOffset":39658,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":39660,"endOffset":39742,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":39744,"endOffset":39818,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":39820,"endOffset":39898,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":39900,"endOffset":39984,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":39986,"endOffset":40058,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":40060,"endOffset":40140,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":40142,"endOffset":40232,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":40234,"endOffset":40334,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":40336,"endOffset":40420,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":40422,"endOffset":40492,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":40494,"endOffset":40566,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":40568,"endOffset":40664,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":40666,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":40736,"endOffset":40824,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":40826,"endOffset":40904,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":40906,"endOffset":40996,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":40998,"endOffset":41074,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":41076,"endOffset":41160,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":41162,"endOffset":41246,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":41248,"endOffset":41318,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":41320,"endOffset":41406,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":41408,"endOffset":41484,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":41486,"endOffset":41566,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":41568,"endOffset":41664,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":41666,"endOffset":41740,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":41742,"endOffset":41828,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":41830,"endOffset":41908,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":41910,"endOffset":41990,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":41992,"endOffset":42068,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":42070,"endOffset":42142,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":42144,"endOffset":42240,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":42242,"endOffset":42338,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":42340,"endOffset":42432,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":42434,"endOffset":42504,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":42506,"endOffset":42584,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":42586,"endOffset":42684,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":42686,"endOffset":42778,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":42780,"endOffset":42868,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":42870,"endOffset":42948,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":42950,"endOffset":43032,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":43034,"endOffset":43102,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":43104,"endOffset":43180,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":43182,"endOffset":43270,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":43272,"endOffset":43346,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBaseType","ranges":[{"startOffset":43348,"endOffset":43430,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":43432,"endOffset":43598,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":43600,"endOffset":43762,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":43764,"endOffset":43924,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":43926,"endOffset":44094,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":177,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":605,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":274,"endOffset":369,"count":1},{"startOffset":348,"endOffset":366,"count":0}],"isBlockCoverage":true},{"functionName":"createFlowUnionType","ranges":[{"startOffset":371,"endOffset":605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":676,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true},{"functionName":"createTSUnionType","ranges":[{"startOffset":375,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1052,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1052,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":223,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":381,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":580,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCommentsWithoutLoc","ranges":[{"startOffset":2203,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2349,"endOffset":2484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":246,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":269,"endOffset":340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":250,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":273,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":260,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":283,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":279,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":255,"endOffset":273,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":278,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":112,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":264,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":287,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":169,"endOffset":264,"count":1},{"startOffset":237,"endOffset":242,"count":0}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":266,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/uniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":688,"count":1}],"isBlockCoverage":true},{"functionName":"uniq","ranges":[{"startOffset":582,"endOffset":663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseUniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1909,"count":1}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":704,"endOffset":1880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_SetCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":277,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setCacheAdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheAdd","ranges":[{"startOffset":302,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":316,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheHas","ranges":[{"startOffset":218,"endOffset":284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayIncludes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":347,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"baseIndexOf","ranges":[{"startOffset":458,"endOffset":627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseFindIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"baseFindIndex","ranges":[{"startOffset":443,"endOffset":732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNaN","ranges":[{"startOffset":211,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_strictIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"strictIndexOf","ranges":[{"startOffset":350,"endOffset":566,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_arrayIncludesWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":336,"endOffset":577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_cacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"cacheHas","ranges":[{"startOffset":250,"endOffset":308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_createSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1},{"startOffset":415,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"createSet","ranges":[{"startOffset":424,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/noop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":177,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_setToArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"setToArray","ranges":[{"startOffset":151,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":293,"count":2}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":266,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":289,"endOffset":398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":391,"endOffset":486,"count":3},{"startOffset":465,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":488,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":267,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":290,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":158,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6598,"count":1}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":271,"endOffset":376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":215,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":1},{"startOffset":270,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":293,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":207,"endOffset":302,"count":1},{"startOffset":281,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":304,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":221,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":647,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":167,"endOffset":647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":438,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":1016,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":2},{"startOffset":357,"endOffset":375,"count":0}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":380,"endOffset":509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":160,"endOffset":586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":765,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":333,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":293,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":316,"endOffset":626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":408,"endOffset":503,"count":2},{"startOffset":482,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":505,"endOffset":2389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":176,"endOffset":1262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":219,"endOffset":932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":406,"endOffset":501,"count":3},{"startOffset":474,"endOffset":479,"count":1},{"startOffset":480,"endOffset":498,"count":2}],"isBlockCoverage":true},{"functionName":"valueToNode","ranges":[{"startOffset":503,"endOffset":2300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/isRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1},{"startOffset":602,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"559","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/lodash/_baseIsRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":382,"endOffset":478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":177,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":316,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":339,"endOffset":816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":178,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":291,"endOffset":309,"count":0}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":314,"endOffset":441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":156,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":391,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":212,"endOffset":307,"count":1},{"startOffset":286,"endOffset":304,"count":0}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":309,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":311,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":191,"endOffset":334,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":311,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":165,"endOffset":1465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2350,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":113,"endOffset":2350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":150,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":161,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":594,"endOffset":719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":191,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/import-builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5178,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":224,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":412,"endOffset":1155,"count":1},{"startOffset":494,"endOffset":567,"count":0},{"startOffset":569,"endOffset":665,"count":0},{"startOffset":667,"endOffset":795,"count":0},{"startOffset":818,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1157,"endOffset":1252,"count":1},{"startOffset":1225,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"ImportBuilder","ranges":[{"startOffset":1278,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1518,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":1625,"endOffset":1748,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1752,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"namespace","ranges":[{"startOffset":1923,"endOffset":2328,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":2332,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"named","ranges":[{"startOffset":2723,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"var","ranges":[{"startOffset":3204,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInterop","ranges":[{"startOffset":3741,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"wildcardInterop","ranges":[{"startOffset":3839,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"_interop","ranges":[{"startOffset":3939,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":4474,"endOffset":5040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5044,"endOffset":5141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/helper-module-imports/lib/is-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"isModule","ranges":[{"startOffset":109,"endOffset":381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@pwn/is/lib/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93,"endOffset":543,"count":1},{"startOffset":160,"endOffset":173,"count":0},{"startOffset":176,"endOffset":250,"count":0},{"startOffset":480,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":554,"endOffset":21011,"count":1},{"startOffset":1693,"endOffset":2831,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":1587,"count":1}],"isBlockCoverage":true},{"functionName":"tagOf","ranges":[{"startOffset":989,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1698,"endOffset":2513,"count":0}],"isBlockCoverage":true},{"functionName":"addPredicate","ranges":[{"startOffset":2999,"endOffset":3543,"count":37},{"startOffset":3084,"endOffset":3156,"count":0},{"startOffset":3204,"endOffset":3283,"count":0},{"startOffset":3330,"endOffset":3401,"count":0}],"isBlockCoverage":true},{"functionName":"delegate","ranges":[{"startOffset":3455,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":3667,"endOffset":4664,"count":8}],"isBlockCoverage":true},{"functionName":"nilBundle","ranges":[{"startOffset":4807,"endOffset":5747,"count":1}],"isBlockCoverage":true},{"functionName":"isNull","ranges":[{"startOffset":4964,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":5171,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"isExist","ranges":[{"startOffset":5402,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":5648,"endOffset":5740,"count":0}],"isBlockCoverage":false},{"functionName":"numberBundle","ranges":[{"startOffset":5796,"endOffset":8829,"count":1},{"startOffset":7506,"endOffset":7658,"count":0},{"startOffset":8112,"endOffset":8273,"count":0},{"startOffset":8490,"endOffset":8824,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":5962,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeral","ranges":[{"startOffset":6274,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":6755,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":6992,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":7219,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"isFiniteNumber","ranges":[{"startOffset":7550,"endOffset":7650,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinite","ranges":[{"startOffset":7824,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":8157,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8506,"endOffset":8814,"count":0}],"isBlockCoverage":true},{"functionName":"stringBundle","ranges":[{"startOffset":8878,"endOffset":11697,"count":1},{"startOffset":10730,"endOffset":11692,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":9044,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":9320,"endOffset":9419,"count":0}],"isBlockCoverage":false},{"functionName":"isSubstring","ranges":[{"startOffset":9611,"endOffset":10078,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefix","ranges":[{"startOffset":10315,"endOffset":10437,"count":0}],"isBlockCoverage":false},{"functionName":"isSuffix","ranges":[{"startOffset":10601,"endOffset":10721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10903,"count":0}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":10907,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"booleanBundle","ranges":[{"startOffset":11747,"endOffset":12006,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":11917,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"objectBundle","ranges":[{"startOffset":12055,"endOffset":14957,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":12222,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObject","ranges":[{"startOffset":12527,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDefined","ranges":[{"startOffset":12827,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"isConforms","ranges":[{"startOffset":14191,"endOffset":14950,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBundle","ranges":[{"startOffset":15005,"endOffset":17495,"count":1},{"startOffset":15218,"endOffset":15347,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":15261,"endOffset":15339,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":15717,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"isInArray","ranges":[{"startOffset":16497,"endOffset":17488,"count":0}],"isBlockCoverage":false},{"functionName":"typeBundle","ranges":[{"startOffset":17542,"endOffset":18821,"count":1}],"isBlockCoverage":true},{"functionName":"isSameType","ranges":[{"startOffset":17728,"endOffset":17854,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":18001,"endOffset":18208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18304,"endOffset":18607,"count":1},{"startOffset":18493,"endOffset":18600,"count":7}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":18611,"endOffset":18740,"count":7}],"isBlockCoverage":true},{"functionName":"predicate","ranges":[{"startOffset":18657,"endOffset":18733,"count":0}],"isBlockCoverage":false},{"functionName":"equalityBundle","ranges":[{"startOffset":18872,"endOffset":20992,"count":1}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":19078,"endOffset":19229,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepEqual","ranges":[{"startOffset":19787,"endOffset":20985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":391746,"count":1}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":236,"endOffset":689,"count":93},{"startOffset":634,"endOffset":646,"count":17},{"startOffset":647,"endOffset":653,"count":76}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":722,"endOffset":885,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":887,"endOffset":987,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":7912,"endOffset":8071,"count":0}],"isBlockCoverage":false},{"functionName":"isWhitespace","ranges":[{"startOffset":8128,"endOffset":8582,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":8603,"endOffset":8676,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":8705,"endOffset":8778,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8782,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":9096,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":9201,"endOffset":9257,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":9261,"endOffset":9367,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":9372,"endOffset":9430,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":9476,"endOffset":9655,"count":0}],"isBlockCoverage":false},{"functionName":"adjustCommentsAfterTrailingComma","ranges":[{"startOffset":9659,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"processComment","ranges":[{"startOffset":11045,"endOffset":15137,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationForPosition","ranges":[{"startOffset":26174,"endOffset":26540,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":26544,"endOffset":26659,"count":0}],"isBlockCoverage":false},{"functionName":"raiseWithData","ranges":[{"startOffset":26663,"endOffset":26961,"count":0}],"isBlockCoverage":false},{"functionName":"_raise","ranges":[{"startOffset":26965,"endOffset":27231,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleProperty","ranges":[{"startOffset":27236,"endOffset":27371,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":27387,"endOffset":35338,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":35363,"endOffset":35544,"count":11}],"isBlockCoverage":true},{"functionName":"types$1.template","ranges":[{"startOffset":35840,"endOffset":35862,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":36038,"endOffset":36348,"count":0}],"isBlockCoverage":false},{"functionName":"types.name.updateContext","ranges":[{"startOffset":36378,"endOffset":36781,"count":0}],"isBlockCoverage":false},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":36813,"endOffset":36976,"count":0}],"isBlockCoverage":false},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":37014,"endOffset":37112,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":37144,"endOffset":37429,"count":0}],"isBlockCoverage":false},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":37461,"endOffset":37475,"count":0}],"isBlockCoverage":false},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":37539,"endOffset":38090,"count":0}],"isBlockCoverage":false},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":38125,"endOffset":38315,"count":0}],"isBlockCoverage":false},{"functionName":"types.star.updateContext","ranges":[{"startOffset":38345,"endOffset":38394,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":48362,"endOffset":48613,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":48615,"endOffset":48960,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":48961,"endOffset":49407,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWord","ranges":[{"startOffset":50095,"endOffset":50196,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":50197,"endOffset":50323,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":50324,"endOffset":50418,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":50419,"endOffset":50557,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":50558,"endOffset":50617,"count":0}],"isBlockCoverage":false},{"functionName":"isIteratorStart","ranges":[{"startOffset":50672,"endOffset":50755,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":55354,"endOffset":55643,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":55645,"endOffset":55750,"count":0}],"isBlockCoverage":false},{"functionName":"isMaybeDefaultImport","ranges":[{"startOffset":55752,"endOffset":55880,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":56029,"endOffset":56236,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":56302,"endOffset":134392,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagStart.updateContext","ranges":[{"startOffset":140156,"endOffset":140291,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagEnd.updateContext","ranges":[{"startOffset":140326,"endOffset":140623,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":140626,"endOffset":140761,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":140763,"endOffset":141189,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":141202,"endOffset":153461,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":153481,"endOffset":153596,"count":0}],"isBlockCoverage":false},{"functionName":"ScopeHandler","ranges":[{"startOffset":153623,"endOffset":153820,"count":0}],"isBlockCoverage":false},{"functionName":"get inFunction","ranges":[{"startOffset":153824,"endOffset":153910,"count":0}],"isBlockCoverage":false},{"functionName":"get allowSuper","ranges":[{"startOffset":153914,"endOffset":153998,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":154002,"endOffset":154099,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":154103,"endOffset":154184,"count":0}],"isBlockCoverage":false},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":154188,"endOffset":154283,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":154287,"endOffset":154383,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":154387,"endOffset":154440,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":154444,"endOffset":154513,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":154517,"endOffset":154556,"count":0}],"isBlockCoverage":false},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":154560,"endOffset":154693,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":154697,"endOffset":155623,"count":0}],"isBlockCoverage":false},{"functionName":"maybeExportDefined","ranges":[{"startOffset":155627,"endOffset":155768,"count":0}],"isBlockCoverage":false},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":155772,"endOffset":155963,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":155967,"endOffset":156611,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":156615,"endOffset":156867,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":156871,"endOffset":156947,"count":0}],"isBlockCoverage":false},{"functionName":"currentVarScope","ranges":[{"startOffset":156951,"endOffset":157141,"count":0}],"isBlockCoverage":false},{"functionName":"currentThisScope","ranges":[{"startOffset":157145,"endOffset":157399,"count":0}],"isBlockCoverage":false},{"functionName":"TypeScriptScope","ranges":[{"startOffset":157444,"endOffset":157615,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":157674,"endOffset":157737,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":157741,"endOffset":158477,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":158481,"endOffset":159200,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":159204,"endOffset":159395,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":159540,"endOffset":159581,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":159585,"endOffset":159632,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":159636,"endOffset":159671,"count":0}],"isBlockCoverage":false},{"functionName":"currentFlags","ranges":[{"startOffset":159675,"endOffset":159743,"count":0}],"isBlockCoverage":false},{"functionName":"get hasAwait","ranges":[{"startOffset":159747,"endOffset":159819,"count":0}],"isBlockCoverage":false},{"functionName":"get hasYield","ranges":[{"startOffset":159823,"endOffset":159895,"count":0}],"isBlockCoverage":false},{"functionName":"get hasReturn","ranges":[{"startOffset":159899,"endOffset":159973,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":159977,"endOffset":160097,"count":0}],"isBlockCoverage":false},{"functionName":"nonNull","ranges":[{"startOffset":160099,"endOffset":160205,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":160207,"endOffset":160281,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":162114,"endOffset":162735,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":162755,"endOffset":220332,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":220421,"endOffset":226062,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":226085,"endOffset":226756,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":226760,"endOffset":226952,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":226953,"endOffset":227259,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":227374,"endOffset":229512,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":230069,"endOffset":230355,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":230373,"endOffset":231673,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":231677,"endOffset":231878,"count":0}],"isBlockCoverage":false},{"functionName":"curPosition","ranges":[{"startOffset":231882,"endOffset":231967,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":231971,"endOffset":232310,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":232330,"endOffset":232391,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":233012,"endOffset":233215,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":233259,"endOffset":233473,"count":0}],"isBlockCoverage":false},{"functionName":"pushToken","ranges":[{"startOffset":233477,"endOffset":233609,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":233613,"endOffset":234002,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":234006,"endOffset":234126,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":234130,"endOffset":234184,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":234188,"endOffset":234411,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":234415,"endOffset":234609,"count":0}],"isBlockCoverage":false},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":234613,"endOffset":234695,"count":0}],"isBlockCoverage":false},{"functionName":"setStrict","ranges":[{"startOffset":234699,"endOffset":235061,"count":0}],"isBlockCoverage":false},{"functionName":"curContext","ranges":[{"startOffset":235065,"endOffset":235145,"count":0}],"isBlockCoverage":false},{"functionName":"nextToken","ranges":[{"startOffset":235149,"endOffset":235721,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":235725,"endOffset":236092,"count":0}],"isBlockCoverage":false},{"functionName":"skipBlockComment","ranges":[{"startOffset":236096,"endOffset":236757,"count":0}],"isBlockCoverage":false},{"functionName":"skipLineComment","ranges":[{"startOffset":236761,"endOffset":237287,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpace","ranges":[{"startOffset":237291,"endOffset":238312,"count":0}],"isBlockCoverage":false},{"functionName":"finishToken","ranges":[{"startOffset":238316,"endOffset":238582,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_numberSign","ranges":[{"startOffset":238586,"endOffset":239516,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":239520,"endOffset":239908,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_slash","ranges":[{"startOffset":239912,"endOffset":240239,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_interpreter","ranges":[{"startOffset":240243,"endOffset":240741,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":240745,"endOffset":241225,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":241229,"endOffset":242486,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_caret","ranges":[{"startOffset":242490,"endOffset":242696,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":242700,"endOffset":243307,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_lt_gt","ranges":[{"startOffset":243311,"endOffset":244079,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":244083,"endOffset":244494,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_question","ranges":[{"startOffset":244498,"endOffset":245047,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":245051,"endOffset":248987,"count":0}],"isBlockCoverage":false},{"functionName":"finishOp","ranges":[{"startOffset":248991,"endOffset":249151,"count":0}],"isBlockCoverage":false},{"functionName":"readRegexp","ranges":[{"startOffset":249155,"endOffset":250601,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":250605,"endOffset":252746,"count":0}],"isBlockCoverage":false},{"functionName":"readRadixNumber","ranges":[{"startOffset":252750,"endOffset":253582,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":253586,"endOffset":255741,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":255745,"endOffset":256338,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":256342,"endOffset":257239,"count":0}],"isBlockCoverage":false},{"functionName":"readTmplToken","ranges":[{"startOffset":257243,"endOffset":259048,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":259052,"endOffset":261082,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":261086,"endOffset":261423,"count":0}],"isBlockCoverage":false},{"functionName":"readWord1","ranges":[{"startOffset":261427,"endOffset":262704,"count":0}],"isBlockCoverage":false},{"functionName":"isIterator","ranges":[{"startOffset":262708,"endOffset":262794,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":262798,"endOffset":263098,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":263102,"endOffset":263298,"count":0}],"isBlockCoverage":false},{"functionName":"braceIsBlock","ranges":[{"startOffset":263302,"endOffset":264304,"count":0}],"isBlockCoverage":false},{"functionName":"updateContext","ranges":[{"startOffset":264308,"endOffset":264660,"count":0}],"isBlockCoverage":false},{"functionName":"addExtra","ranges":[{"startOffset":264704,"endOffset":264828,"count":0}],"isBlockCoverage":false},{"functionName":"isRelational","ranges":[{"startOffset":264832,"endOffset":264922,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadRelational","ranges":[{"startOffset":264926,"endOffset":265261,"count":0}],"isBlockCoverage":false},{"functionName":"expectRelational","ranges":[{"startOffset":265265,"endOffset":265409,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":265413,"endOffset":265528,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":265532,"endOffset":265766,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":265770,"endOffset":265893,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":265897,"endOffset":265982,"count":0}],"isBlockCoverage":false},{"functionName":"expectContextual","ranges":[{"startOffset":265986,"endOffset":266090,"count":0}],"isBlockCoverage":false},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":266094,"endOffset":266214,"count":0}],"isBlockCoverage":false},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":266218,"endOffset":266333,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":266337,"endOffset":266423,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":266427,"endOffset":266513,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":266517,"endOffset":266590,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoSpace","ranges":[{"startOffset":266594,"endOffset":266752,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":266756,"endOffset":267017,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":267021,"endOffset":267293,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":267297,"endOffset":267600,"count":0}],"isBlockCoverage":false},{"functionName":"checkYieldAwaitInDefaultParams","ranges":[{"startOffset":267604,"endOffset":268003,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":268007,"endOffset":269174,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":269178,"endOffset":269605,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":269609,"endOffset":269783,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionErrors","ranges":[{"startOffset":269814,"endOffset":269891,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":269911,"endOffset":270214,"count":0}],"isBlockCoverage":false},{"functionName":"__clone","ranges":[{"startOffset":270218,"endOffset":270556,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":270600,"endOffset":270683,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAt","ranges":[{"startOffset":270687,"endOffset":270751,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAtNode","ranges":[{"startOffset":270755,"endOffset":270839,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":270843,"endOffset":270962,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":270966,"endOffset":271171,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocation","ranges":[{"startOffset":271175,"endOffset":271329,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":271333,"endOffset":271522,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":271526,"endOffset":271657,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":271700,"endOffset":271817,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":271859,"endOffset":273960,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":273964,"endOffset":274379,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":274383,"endOffset":275353,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":275357,"endOffset":275431,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":275435,"endOffset":275771,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpread","ranges":[{"startOffset":275775,"endOffset":276034,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":276038,"endOffset":276208,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":276212,"endOffset":276627,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingList","ranges":[{"startOffset":276631,"endOffset":277643,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":277647,"endOffset":277955,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItemTypes","ranges":[{"startOffset":277959,"endOffset":278018,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":278022,"endOffset":278424,"count":0}],"isBlockCoverage":false},{"functionName":"checkLVal","ranges":[{"startOffset":278428,"endOffset":280971,"count":0}],"isBlockCoverage":false},{"functionName":"checkToRestConversion","ranges":[{"startOffset":280975,"endOffset":281189,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":281193,"endOffset":281446,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRestNotLast","ranges":[{"startOffset":281450,"endOffset":281536,"count":0}],"isBlockCoverage":false},{"functionName":"raiseTrailingCommaAfterRest","ranges":[{"startOffset":281540,"endOffset":281632,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicatedProto","ranges":[{"startOffset":281683,"endOffset":282310,"count":0}],"isBlockCoverage":false},{"functionName":"getExpression","ranges":[{"startOffset":282314,"endOffset":282764,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":282768,"endOffset":283348,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":283352,"endOffset":285344,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":285348,"endOffset":285896,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditional","ranges":[{"startOffset":285900,"endOffset":286307,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOps","ranges":[{"startOffset":286311,"endOffset":286825,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOp","ranges":[{"startOffset":286829,"endOffset":288907,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":288911,"endOffset":289630,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":289634,"endOffset":289879,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":289883,"endOffset":291670,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":291674,"endOffset":292089,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscripts","ranges":[{"startOffset":292093,"endOffset":292686,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscript","ranges":[{"startOffset":292690,"endOffset":295966,"count":0}],"isBlockCoverage":false},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":295970,"endOffset":296409,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":296413,"endOffset":296654,"count":0}],"isBlockCoverage":false},{"functionName":"finishCallExpression","ranges":[{"startOffset":296658,"endOffset":297452,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":297456,"endOffset":298792,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":298796,"endOffset":298891,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":298895,"endOffset":299147,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":299151,"endOffset":299336,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":299340,"endOffset":308189,"count":0}],"isBlockCoverage":false},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":308193,"endOffset":308366,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybePrivateName","ranges":[{"startOffset":308370,"endOffset":308967,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionExpression","ranges":[{"startOffset":308971,"endOffset":309299,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetaProperty","ranges":[{"startOffset":309303,"endOffset":309939,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":309943,"endOffset":310402,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":310406,"endOffset":310806,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":310810,"endOffset":314576,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseArrow","ranges":[{"startOffset":314580,"endOffset":314643,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrow","ranges":[{"startOffset":314647,"endOffset":314727,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenItem","ranges":[{"startOffset":314731,"endOffset":314794,"count":0}],"isBlockCoverage":false},{"functionName":"parseNew","ranges":[{"startOffset":314798,"endOffset":315923,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewArguments","ranges":[{"startOffset":315927,"endOffset":316153,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":316157,"endOffset":316650,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":316654,"endOffset":317144,"count":0}],"isBlockCoverage":false},{"functionName":"parseObj","ranges":[{"startOffset":317148,"endOffset":318143,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncProp","ranges":[{"startOffset":318147,"endOffset":318383,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMember","ranges":[{"startOffset":318387,"endOffset":319953,"count":0}],"isBlockCoverage":false},{"functionName":"isGetterOrSetterMethod","ranges":[{"startOffset":319957,"endOffset":320197,"count":0}],"isBlockCoverage":false},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":320201,"endOffset":320290,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":320294,"endOffset":320829,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":320833,"endOffset":321502,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectProperty","ranges":[{"startOffset":321506,"endOffset":322538,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjPropValue","ranges":[{"startOffset":322542,"endOffset":322888,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyName","ranges":[{"startOffset":322892,"endOffset":323533,"count":0}],"isBlockCoverage":false},{"functionName":"initFunction","ranges":[{"startOffset":323537,"endOffset":323646,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethod","ranges":[{"startOffset":323650,"endOffset":324473,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":324477,"endOffset":325402,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":325406,"endOffset":325537,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":325541,"endOffset":325687,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBody","ranges":[{"startOffset":325691,"endOffset":327146,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParamList","ranges":[{"startOffset":327150,"endOffset":327319,"count":0}],"isBlockCoverage":false},{"functionName":"checkParams","ranges":[{"startOffset":327323,"endOffset":327646,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprList","ranges":[{"startOffset":327650,"endOffset":328206,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprListItem","ranges":[{"startOffset":328210,"endOffset":329131,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifier","ranges":[{"startOffset":329135,"endOffset":329310,"count":0}],"isBlockCoverage":false},{"functionName":"createIdentifier","ranges":[{"startOffset":329314,"endOffset":329454,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierName","ranges":[{"startOffset":329458,"endOffset":330086,"count":0}],"isBlockCoverage":false},{"functionName":"checkReservedWord","ranges":[{"startOffset":330090,"endOffset":331338,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitAllowed","ranges":[{"startOffset":331342,"endOffset":331612,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwait","ranges":[{"startOffset":331616,"endOffset":332602,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":332606,"endOffset":333220,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":333224,"endOffset":333496,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBody","ranges":[{"startOffset":333500,"endOffset":333827,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyEarlyErrors","ranges":[{"startOffset":333831,"endOffset":334215,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":334219,"endOffset":335123,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyStyle","ranges":[{"startOffset":335127,"endOffset":335328,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":335332,"endOffset":335602,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicPermittingContext","ranges":[{"startOffset":335606,"endOffset":335922,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicForbiddingContext","ranges":[{"startOffset":335926,"endOffset":336242,"count":0}],"isBlockCoverage":false},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":336246,"endOffset":336501,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":336505,"endOffset":336582,"count":0}],"isBlockCoverage":false},{"functionName":"primaryTopicReferenceIsAllowedInCurrentTopicContext","ranges":[{"startOffset":336586,"endOffset":336711,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentTopicContext","ranges":[{"startOffset":336715,"endOffset":336869,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":336873,"endOffset":337359,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":337624,"endOffset":338419,"count":0}],"isBlockCoverage":false},{"functionName":"stmtToDirective","ranges":[{"startOffset":338423,"endOffset":339026,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":339030,"endOffset":339285,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":339289,"endOffset":339852,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatement","ranges":[{"startOffset":339856,"endOffset":340026,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementContent","ranges":[{"startOffset":340030,"endOffset":343909,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":343913,"endOffset":344165,"count":0}],"isBlockCoverage":false},{"functionName":"takeDecorators","ranges":[{"startOffset":344169,"endOffset":344491,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":344495,"endOffset":344563,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":344567,"endOffset":345269,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":345273,"endOffset":346283,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":346287,"endOffset":346636,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":346640,"endOffset":347023,"count":0}],"isBlockCoverage":false},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":347027,"endOffset":347531,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":347535,"endOffset":347663,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":347667,"endOffset":347814,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":347818,"endOffset":348170,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":348174,"endOffset":349795,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":349799,"endOffset":349995,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":349999,"endOffset":350267,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":350271,"endOffset":350680,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":350684,"endOffset":351910,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":351914,"endOffset":352247,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":352251,"endOffset":353315,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarStatement","ranges":[{"startOffset":353319,"endOffset":353488,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhileStatement","ranges":[{"startOffset":353492,"endOffset":353791,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":353795,"endOffset":354123,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":354127,"endOffset":354227,"count":0}],"isBlockCoverage":false},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":354231,"endOffset":355285,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":355289,"endOffset":355438,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":355442,"endOffset":355878,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDirective","ranges":[{"startOffset":355882,"endOffset":356042,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockBody","ranges":[{"startOffset":356046,"endOffset":356317,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":356321,"endOffset":357600,"count":0}],"isBlockCoverage":false},{"functionName":"parseFor","ranges":[{"startOffset":357604,"endOffset":358074,"count":0}],"isBlockCoverage":false},{"functionName":"parseForIn","ranges":[{"startOffset":358078,"endOffset":359061,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":359065,"endOffset":359988,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarId","ranges":[{"startOffset":359992,"endOffset":360181,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunction","ranges":[{"startOffset":360185,"endOffset":361706,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionId","ranges":[{"startOffset":361710,"endOffset":361822,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParams","ranges":[{"startOffset":361826,"endOffset":362165,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":362169,"endOffset":362417,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":362421,"endOffset":362863,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":362867,"endOffset":362977,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":362981,"endOffset":363039,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":363043,"endOffset":363203,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":363207,"endOffset":364647,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":364651,"endOffset":365375,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":365379,"endOffset":365698,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":365702,"endOffset":369420,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPropertyName","ranges":[{"startOffset":369424,"endOffset":369853,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":369857,"endOffset":370130,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":370134,"endOffset":370427,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":370431,"endOffset":370655,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":370659,"endOffset":371244,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":371248,"endOffset":371293,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccessModifier","ranges":[{"startOffset":371297,"endOffset":371346,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":371350,"endOffset":371669,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":371673,"endOffset":372176,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":372180,"endOffset":372603,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":372607,"endOffset":372718,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":372722,"endOffset":374295,"count":0}],"isBlockCoverage":false},{"functionName":"eatExportStar","ranges":[{"startOffset":374299,"endOffset":374357,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":374361,"endOffset":374715,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":374719,"endOffset":375147,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":375151,"endOffset":375442,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":375446,"endOffset":375904,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":375908,"endOffset":376137,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":376141,"endOffset":377135,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":377139,"endOffset":377211,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":377215,"endOffset":377909,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportFrom","ranges":[{"startOffset":377913,"endOffset":378202,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":378206,"endOffset":378813,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":378817,"endOffset":380590,"count":0}],"isBlockCoverage":false},{"functionName":"checkDeclaration","ranges":[{"startOffset":380594,"endOffset":381487,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":381491,"endOffset":381772,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":381776,"endOffset":382331,"count":0}],"isBlockCoverage":false},{"functionName":"parseImport","ranges":[{"startOffset":382335,"endOffset":382992,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSource","ranges":[{"startOffset":382996,"endOffset":383108,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseDefaultImport","ranges":[{"startOffset":383112,"endOffset":383183,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":383187,"endOffset":383449,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseModuleAttributes","ranges":[{"startOffset":383453,"endOffset":384573,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":384577,"endOffset":384828,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":384832,"endOffset":385160,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":385164,"endOffset":385614,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":385618,"endOffset":386141,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScope","ranges":[{"startOffset":386167,"endOffset":386301,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":386333,"endOffset":386446,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":386450,"endOffset":386511,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":386515,"endOffset":386567,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":386571,"endOffset":387073,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":387077,"endOffset":388051,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":388055,"endOffset":388457,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":388503,"endOffset":389026,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeHandler","ranges":[{"startOffset":389030,"endOffset":389078,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":389082,"endOffset":389511,"count":0}],"isBlockCoverage":false},{"functionName":"pluginsMap","ranges":[{"startOffset":389516,"endOffset":389826,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":389828,"endOffset":390727,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":390728,"endOffset":390922,"count":0}],"isBlockCoverage":false},{"functionName":"getParser","ranges":[{"startOffset":390924,"endOffset":391155,"count":0}],"isBlockCoverage":false},{"functionName":"getParserClass","ranges":[{"startOffset":391187,"endOffset":391618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/visitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":125,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"get nodeType","ranges":[{"startOffset":215,"endOffset":262,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeNode","ranges":[{"startOffset":266,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"onIdentifierNode","ranges":[{"startOffset":351,"endOffset":467,"count":0}],"isBlockCoverage":false},{"functionName":"onAfterNode","ranges":[{"startOffset":471,"endOffset":550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-invalid-import-type-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"ReplaceVisitorInvalidImportTypeError","ranges":[{"startOffset":299,"endOffset":367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"ReplaceVisitorError","ranges":[{"startOffset":246,"endOffset":292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace/distributable/library/error/visitor-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"VisitorError","ranges":[{"startOffset":149,"endOffset":195,"count":0}],"isBlockCoverage":false}]}],"timestamp":14137.580343,"source-map-cache":{"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/test/index.test.js":{"lineLengths":[13,0,50,0,95,0,186,0,743,0,35,107,3,0,29,41,42,5,3,38],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/test/index.test.js"],"names":["Test","before","test","context","index","forEach","name","truthy"],"mappings":";;AAAA;;;;;;;;AAEAA,aAAKC,MAAL,CAAY,MAAOC,IAAP,IAAgB;AAC1BA,EAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAqB,mEAAa,aAAb,GAArB;AACD,CAFD;;AAIC,CACC,SADD,EAECC,OAFD,CAEUC,IAAD,IAAU;AAElB,oBAAKA,IAAL,EAAW,MAAOJ,IAAP,IAAgB;AACzBA,IAAAA,IAAI,CAACK,MAAL,CAAYL,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmBE,IAAnB,CAAZ;AACD,GAFD;AAID,CARA","sourcesContent":["import Test from 'ava'\n\nTest.before(async (test) => {\n  test.context.index = await import('../index.js')\n})\n\n;[\n  'default'\n].forEach((name) => {\n\n  Test(name, async (test) => {\n    test.truthy(test.context.index[name])\n  })\n  \n})\n"],"file":"index.test.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/index.js":{"lineLengths":[13,0,46,13,3,43,19,20,26,3,3,0,75,0,95,33],"data":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[],"file":"index.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/index.js":{"lineLengths":[13,0,46,13,3,25,0,78,0,38,0,54,0,95,0,35,24,36,22,3,0,75,0,27,33],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/index.js"],"names":["Source","install","Plugin","createPlugin","ReplaceVisitor"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEAA,0BAAOC,OAAP,CAAe;AAAE,iBAAe,MAAjB;AAAyB,8BAA4B,KAArD;AAA4D,iBAAe;AAA3E,CAAf;;eAEeC,eAAOC,YAAP,CAAoBC,8BAApB,C","sourcesContent":["import Source from 'source-map-support'\n\nimport { Plugin } from '../plugin.js'\nimport { ReplaceVisitor } from './replace-visitor.js'\n\nSource.install({ 'environment': 'node', 'handleUncaughtExceptions': false, 'hookRequire': false })\n\nexport default Plugin.createPlugin(ReplaceVisitor)\n"],"file":"index.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/plugin.js":{"lineLengths":[13,0,46,13,3,24,0,65,0,186,0,743,0,7,24,15,0,14,37,63,29,72,52,28,0,43,44,8,0,44,43,8,0,46,29,36,58,72,10,9,43,26,6,3,0,1,0,24,34],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/plugin.js"],"names":["pascalCase","PascalCase","ChangeCase","Plugin","createPlugin","visitorClass","babel","visitorInstance","pluginObject","pre","state","onBeforeNode","post","onAfterNode","nodeType","visitorObject","forEach","path","visitor"],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM;AAAEA,EAAAA,UAAU,EAAEC;AAAd,IAA6BC,UAAnC;;AAEA,MAAMC,MAAN,CAAa;AAEX,SAAOC,YAAP,CAAoBC,YAApB,EAAkC;AAChC;AAEA,WAAO,UAASC,KAAT,EAAgB;AACrB;AAEA,UAAIC,eAAe,GAAG,IAAIF,YAAJ,CAAiBC,KAAjB,CAAtB;AAEA,UAAIE,YAAY,GAAG,EAAnB;;AAEAA,MAAAA,YAAY,CAACC,GAAb,GAAmB,UAASC,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACI,YAAhB,CAA6BD,KAA7B;AAAqC,OAA1E;;AACAF,MAAAA,YAAY,CAACI,IAAb,GAAoB,UAASF,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACM,WAAhB,CAA4BH,KAA5B;AAAoC,OAA1E;;AAEA,UAAII,QAAQ,GAAGP,eAAe,CAACO,QAA/B;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBF,QAAD,IAAc;AAC7BC,QAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B,UAASG,IAAT,EAAeP,KAAf,EAAsB;AAAEH,UAAAA,eAAe,CAAE,KAAIN,UAAU,CAACa,QAAD,CAAW,MAA3B,CAAf,CAAiDG,IAAjD,EAAuDP,KAAvD;AAA+D,SAAjH;AACD,OAFD;AAIAF,MAAAA,YAAY,CAACU,OAAb,GAAuBH,aAAvB;AAEA,aAAOP,YAAP;AAED,KArBD;AAuBD;;AA5BU","sourcesContent":["import * as ChangeCase from 'change-case'\n\nconst { pascalCase: PascalCase } = ChangeCase\n\nclass Plugin {\n\n  static createPlugin(visitorClass) {\n    // console.log(`Plugin.createPlugin(${visitorClass.name})`)\n\n    return function(babel) {\n      // console.log(`Plugin.createPlugin(${visitorClass.name})(babel)`)\n\n      let visitorInstance = new visitorClass(babel)\n\n      let pluginObject = {}\n\n      pluginObject.pre = function(state) { visitorInstance.onBeforeNode(state) }\n      pluginObject.post = function(state) { visitorInstance.onAfterNode(state) }\n\n      let nodeType = visitorInstance.nodeType\n      let visitorObject = {}\n\n      nodeType.forEach((nodeType) => {\n        visitorObject[nodeType] = function(path, state) { visitorInstance[`on${PascalCase(nodeType)}Node`](path, state) }\n      })\n\n      pluginObject.visitor = visitorObject\n\n      return pluginObject\n\n    }\n\n  }\n\n}\n\nexport { Plugin }\n"],"file":"plugin.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/change-case/dist/index.js":{"lineLengths":[13,62,31,53,55,56,51,54,50,53,54,52,56,53,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/change-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA2B;AAC3B,uDAA6B;AAC7B,wDAA8B;AAC9B,mDAAyB;AACzB,sDAA4B;AAC5B,kDAAwB;AACxB,qDAA2B;AAC3B,sDAA4B;AAC5B,oDAA0B;AAC1B,wDAA8B;AAC9B,qDAA2B","sourcesContent":["export * from \"camel-case\";\nexport * from \"capital-case\";\nexport * from \"constant-case\";\nexport * from \"dot-case\";\nexport * from \"header-case\";\nexport * from \"no-case\";\nexport * from \"param-case\";\nexport * from \"pascal-case\";\nexport * from \"path-case\";\nexport * from \"sentence-case\";\nexport * from \"snake-case\";\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/camel-case/dist/index.js":{"lineLengths":[13,62,31,43,43,20,35,59,1,48,48,20,35,57,1,58,36,45,105,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/camel-case/src/index.ts"],"names":[],"mappings":";;;AAAA,2CAKqB;AAIrB,SAAgB,kBAAkB,CAAC,KAAa,EAAE,KAAa;IAC7D,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,iCAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,KAAa,EAAE,KAAa;IAClE,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,sCAAwB,CAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAHD,0DAGC;AAED,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,wBAAU,CAAC,KAAK,qBACrB,SAAS,EAAE,kBAAkB,IAC1B,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import {\n  pascalCase,\n  pascalCaseTransform,\n  pascalCaseTransformMerge,\n  Options\n} from \"pascal-case\";\n\nexport { Options };\n\nexport function camelCaseTransform(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransform(input, index);\n}\n\nexport function camelCaseTransformMerge(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransformMerge(input);\n}\n\nexport function camelCase(input: string, options: Options = {}) {\n  return pascalCase(input, {\n    transform: camelCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/pascal-case/dist/index.js":{"lineLengths":[13,62,31,35,44,36,51,60,44,5,53,1,50,42,72,1,60,37,45,113,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/pascal-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAI1C,SAAgB,mBAAmB,CAAC,KAAa,EAAE,KAAa;IAC9D,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjD,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,EAAE;QACrD,OAAO,MAAI,SAAS,GAAG,UAAY,CAAC;KACrC;IACD,OAAO,KAAG,SAAS,CAAC,WAAW,EAAE,GAAG,UAAY,CAAC;AACnD,CAAC;AAPD,kDAOC;AAED,SAAgB,wBAAwB,CAAC,KAAa;IACpD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACtE,CAAC;AAFD,4DAEC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,EAAE,EACb,SAAS,EAAE,mBAAmB,IAC3B,OAAO,EACV,CAAC;AACL,CAAC;AAND,gCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/no-case/dist/index.js":{"lineLengths":[13,62,41,84,74,34,42,3,77,3,33,45,316,83,18,28,56,41,16,43,14,42,17,26,20,23,25,1,24,3,63,3,36,29,40,87,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/no-case/src/index.ts"],"names":[],"mappings":";;AAAA,yCAAuC;AASvC,oFAAoF;AACpF,IAAM,oBAAoB,GAAG,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;AAE5E,kCAAkC;AAClC,IAAM,oBAAoB,GAAG,cAAc,CAAC;AAE5C;;GAEG;AACH,SAAgB,MAAM,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAEvD,IAAA,wBAAkC,EAAlC,uDAAkC,EAClC,wBAAkC,EAAlC,uDAAkC,EAClC,sBAAqB,EAArB,uDAAqB,EACrB,sBAAe,EAAf,oCAAe,CACL;IAEZ,IAAI,MAAM,GAAG,OAAO,CAClB,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,CAAC,EACrC,WAAW,EACX,IAAI,CACL,CAAC;IACF,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,oDAAoD;IACpD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI;QAAE,KAAK,EAAE,CAAC;IAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI;QAAE,GAAG,EAAE,CAAC;IAE9C,sCAAsC;IACtC,OAAO,MAAM;SACV,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;SACjB,KAAK,CAAC,IAAI,CAAC;SACX,GAAG,CAAC,SAAS,CAAC;SACd,IAAI,CAAC,SAAS,CAAC,CAAC;AACrB,CAAC;AA1BD,wBA0BC;AAED;;GAEG;AACH,SAAS,OAAO,CAAC,KAAa,EAAE,EAAqB,EAAE,KAAa;IAClE,IAAI,EAAE,YAAY,MAAM;QAAE,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO,EAAE,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,EAAE,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \"\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result\n    .slice(start, end)\n    .split(\"\\0\")\n    .map(transform)\n    .join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/lower-case/dist/index.js":{"lineLengths":[13,62,3,72,3,24,9,46,14,24,24,24,9,6,9,26,14,24,24,24,9,6,9,61,14,30,30,30,36,36,35,9,5,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/lower-case/src/index.ts"],"names":[],"mappings":";;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,6BAA6B;QACrC,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,SAAS;QACjB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,4CAA4C;QACpD,GAAG,EAAE;YACH,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;SACxB;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACvE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\"\n    }\n  }\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, m => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/capital-case/dist/index.js":{"lineLengths":[13,62,31,35,53,38,66,1,52,38,45,115,1,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/capital-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,oBAAoB,CAAC,KAAa;IAChD,OAAO,iCAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7C,CAAC;AAFD,oDAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC9D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,oBAAoB,IAC5B,OAAO,EACV,CAAC;AACL,CAAC;AAND,kCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/dist/index.js":{"lineLengths":[13,62,3,53,3,32,59,1,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case-first/src/index.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AAFD,wCAEC","sourcesContent":["/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/constant-case/dist/index.js":{"lineLengths":[13,62,31,35,41,39,45,117,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/constant-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,yCAAuC;AAIvC,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,sBAAS,IACjB,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCase } from \"upper-case\";\n\nexport { Options };\n\nexport function constantCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"_\",\n    transform: upperCase,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case/dist/index.js":{"lineLengths":[13,62,3,72,3,24,9,28,14,23,9,6,9,28,14,23,9,6,9,79,14,25,25,25,26,26,25,9,5,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/upper-case/src/index.ts"],"names":[],"mappings":";;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,8DAA8D;QACtE,GAAG,EAAE;YACH,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;SACd;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACvE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\"\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\"\n    }\n  }\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, m => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/dot-case/dist/index.js":{"lineLengths":[13,62,31,35,34,45,82,1,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/dot-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAI1C,SAAgB,OAAO,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC1D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,0BAKC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/header-case/dist/index.js":{"lineLengths":[13,62,31,45,37,45,92,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/header-case/src/index.ts"],"names":[],"mappings":";;;AAAA,6CAAoD;AAIpD,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,0BAAW,CAAC,KAAK,qBACtB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,gCAKC","sourcesContent":["import { capitalCase, Options } from \"capital-case\";\n\nexport { Options };\n\nexport function headerCase(input: string, options: Options = {}) {\n  return capitalCase(input, {\n    delimiter: \"-\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/param-case/dist/index.js":{"lineLengths":[13,62,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/param-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/path-case/dist/index.js":{"lineLengths":[13,62,31,37,35,45,84,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/path-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,QAAQ,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC3D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,4BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function pathCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"/\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/sentence-case/dist/index.js":{"lineLengths":[13,62,31,35,53,46,37,20,57,18,1,54,39,45,116,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/sentence-case/src/index.ts"],"names":[],"mappings":";;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,qBAAqB,CAAC,KAAa,EAAE,KAAa;IAChE,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACnC,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,iCAAc,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,MAAM,CAAC;AAChB,CAAC;AAJD,sDAIC;AAED,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,qBAAqB,IAC7B,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/snake-case/dist/index.js":{"lineLengths":[13,62,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/snake-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function snakeCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"_\",\n    ...options\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/replace-visitor.js":{"lineLengths":[13,0,46,13,3,32,0,67,0,53,0,63,0,40,0,108,0,186,0,743,0,95,0,47,22,17,29,34,3,0,18,42,3,0,23,29,34,3,0,33,81,28,27,26,165,69,0,55,82,35,43,12,55,64,47,37,29,133,22,0,27,147,22,0,31,135,22,0,32,93,22,0,22,117,13,13,169,139,9,0,47,7,7,40,3,0,6,30,61,23,30,6,5,0,0,40,43],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/replace-visitor.js"],"names":["ReplaceVisitor","Visitor","constructor","babel","_programPath","_importIdentifier","nodeType","onProgramNode","path","onIdentifierNode","state","option","opts","rule","forEach","searchForPattern","Is","regexp","searchFor","RegExp","parserOption","test","node","name","null","addImport","type","source","ReplaceVisitorInvalidImportTypeError","replaceWith","replace","replaceWithNode","Parser","parseExpression"],"mappings":"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","sourcesContent":["import { \n  addDefault as AddDefaultImport,\n  addNamed as AddNamedImport,\n  addNamespace as AddNamespaceImport,\n  addSideEffect as AddSideEffectImport\n} from '@babel/helper-module-imports'\n\nimport Is from '@pwn/is'\nimport * as Parser from '@babel/parser'\n\nimport { Visitor } from '../visitor.js'\n\nimport { ReplaceVisitorInvalidImportTypeError } from './error/replace-visitor-invalid-import-type-error.js'\n\nclass ReplaceVisitor extends Visitor {\n\n  constructor(babel) {\n    super(babel)\n\n    this._programPath = null\n    this._importIdentifier = null\n\n  }\n\n  get nodeType() {\n    return [ 'Program', ...super.nodeType ]\n  }\n\n  onProgramNode(path) {\n    this._programPath = path\n    this._importIdentifier = null\n  }\n\n  onIdentifierNode(path, state) {\n    // console.log(`ReplaceVisitor.onIdentifierNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n      rule.parserOption = rule.parserOption ? rule.parserOption : {}\n\n      if (rule.searchForPattern.test(path.node.name)) {\n\n        // console.log(`Replacing '${path.node.name}' with '${rule.replaceWith}'`)\n\n        // if (rule.parserOption) {\n        //   console.dir(rule.parserOption)\n        // }\n\n        if(Is.null(this._importIdentifier)) {\n\n          rule.addImport = rule.addImport ? rule.addImport : []\n          rule.addImport.forEach((addImport) => {\n\n            switch (addImport.type) {\n              case 'default':\n                this._importIdentifier = AddDefaultImport(this._programPath, addImport.source, addImport.option)\n                break\n              case 'named':\n                this._importIdentifier = AddNamedImport(this._programPath, addImport.name, addImport.source, addImport.option)\n                break\n              case 'namespace':\n                this._importIdentifier = AddNamespaceImport(this._programPath, addImport.source, addImport.option)\n                break\n              case 'sideEffect':\n                AddSideEffectImport(this._programPath, addImport.source)\n                break\n              default:\n                throw new ReplaceVisitorInvalidImportTypeError(addImport.type)\n            }\n            \n          })\n\n          rule.replaceWith = Is.null(this._importIdentifier) ? rule.replaceWith : rule.replaceWith.replace(/__importIdentifier/gi, this._importIdentifier.name)\n          rule.replaceWithNode = rule.replaceWithNode ?  rule.replaceWithNode : Parser.parseExpression(rule.replaceWith, rule.parserOption)\n  \n        }\n\n        path.replaceWith(rule.replaceWithNode)\n\n      }\n\n    })\n\n    super.onIdentifierNode(path, state)\n\n  }\n\n}\n\nexport { ReplaceVisitor }\n\n// {\n//   \"searchFor\": \"__resolve\",\n//   \"replaceWith\": \"import { createRequire } from 'module'\",\n//   \"parserOption\": { \n//     \"sourceType\": \"module\" \n//   }\n// },\n"],"file":"replace-visitor.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,24,24,20,22,20,21,17,33,23,32,40,40,52,32,36,32,34,56,30,3,0,1,27,0,44,25,45,28,15,1,0,35,30,15,9,5,1,0,15,29,14,5,35,14,5,35,14,5,35,14,5,31,14,5,28,32,15,14,5,37,15,14,5,36,15,14,5,31,35,30,15,14,5,34,15,14,5,35,15,14,5,29,33,30,15,14,5,29,29,14,5,28,14,5,29,14,5,36,14,5,26,32,14,5,35,30,14,5,38,34,14,5,33,14,5,37,15,14,5,25,28,14,5,47,26,15,12,5,31,15,12,5,34,11,12,14,5,28,15,11,14,5,29,15,11,14,5,33,42,34,35,33,34,34,44,42,40,33,15,13,11,14,5,30,15,14,14,5,29,30,33,15,14,26,5,33,32,14,5,33,39,39,38,14,5,28,11,14,5,32,14,5,37,30,10,5,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,34,10,5,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,28,15,12,5,44,15,12,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,4,2,0,31,33,34,31,38,31,38,31,35,67,38,37,37,41,42,38,39,41,47,48,92,66,58,68,68,48,96,62,46,63,67,64,40,40,40,90,90,90,64,64,30,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,21,22,3,0,1,22,27,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,0,18,17,35,45,3,0,19,34,3,0,33,70,3,0,1,0,22,33,1,0,41,23,60,46,45,3,0,69,50,13,5,0,27,28,0,43,34,5,0,31,13,5,0,65,83,48,12,7,5,0,35,0,65,59,0,42,49,0,31,50,14,9,14,50,37,9,0,51,7,5,0,57,0,41,57,60,40,5,3,0,24,64,42,54,0,49,61,55,41,14,47,7,34,38,0,94,56,44,7,5,0,62,31,5,0,65,30,5,0,57,0,21,26,32,71,16,0,29,77,16,0,30,70,16,0,31,69,16,0,28,75,16,7,242,84,5,0,20,38,126,59,43,16,71,65,80,20,13,11,9,7,55,63,45,67,89,54,18,13,11,9,0,52,60,42,9,14,65,63,18,11,9,0,71,0,37,49,9,0,63,0,44,34,9,7,5,0,42,0,27,121,46,14,49,7,5,0,21,3,0,1,0,37,92,115,87,86,83,63,66,82,76,92,68,63,61,70,188,106,139,71,64,127,66,72,90,55,60,56,55,85,106,41,108,48,95,50,64,61,85,91,47,46,57,71,62,45,45,60,34,56,77,67,61,67,55,101,58,47,87,68,114,83,93,94,54,55,51,54,55,129,109,83,90,35,70,59,122,99,102,85,96,132,127,57,176,180,182,68,140,74,57,58,60,103,77,38,165,65,70,174,178,180,67,126,64,83,47,91,98,66,87,180,58,73,42,121,69,83,106,74,74,84,98,137,46,56,53,48,64,81,67,80,3,0,42,31,12,303,15,3,0,40,72,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,33,99,1,0,54,28,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,35,72,49,46,16,3,0,29,47,3,0,30,45,72,92,46,48,111,61,92,3,0,31,38,28,3,0,26,33,40,12,35,5,3,0,35,24,51,29,0,50,34,56,14,56,7,84,62,5,3,0,98,24,27,41,150,11,14,0,14,97,5,3,0,61,90,13,5,0,25,74,0,55,26,94,54,16,62,9,7,0,27,5,3,0,26,30,0,239,3,0,25,50,40,34,21,3,0,56,63,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,38,30,21,24,57,0,24,63,0,24,63,0,23,45,0,23,45,0,24,46,0,14,56,5,3,0,49,69,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,62,39,3,0,73,93,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,22,33,36,18,5,0,36,3,0,50,53,73,29,71,12,59,5,3,0,40,47,0,40,37,38,28,25,5,0,16,3,0,55,20,13,5,0,62,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,3,0,18,55,23,27,41,29,3,0,1,17,45,45,45,45,45,68,55,54,2,0,71,40,34,11,3,0,37,0,81,35,3,0,39,2,0,48,22,0,31,183,21,5,3,0,35,0,30,34,3,2,0,50,106,32,2,0,48,49,32,2,0,50,133,94,32,2,0,44,0,82,364,56,10,55,3,0,33,2,0,45,47,29,10,46,3,0,33,2,0,40,33,2,0,4315,2645,85,106,62,1815,929,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,50,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,30,1,0,52,41,39,1,0,178,34,110,198,58,81,102,80,137,127,207,126,145,123,111,156,148,108,155,207,99,100,66,128,133,89,78,107,59,140,91,107,56,88,94,90,82,104,89,106,54,3,0,38,248,1,0,34,68,1,0,38,87,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,52,31,26,32,3,0,22,77,3,0,22,51,3,0,26,94,42,31,7,5,0,40,3,0,23,40,60,0,55,33,43,35,14,50,7,5,0,37,3,0,33,40,29,36,38,34,16,3,0,24,34,42,39,30,42,36,0,89,75,5,0,33,42,32,56,12,56,5,3,0,42,40,29,29,20,25,0,35,36,44,12,34,36,0,37,46,7,5,0,29,3,0,31,16,43,49,3,0,34,16,48,38,43,0,33,73,12,37,5,0,30,51,33,29,30,88,87,73,30,21,52,3,0,40,35,46,45,49,40,49,46,34,56,14,27,78,9,0,49,7,43,50,45,51,48,50,43,72,12,30,5,3,0,34,16,60,66,21,52,3,0,32,34,0,35,37,12,39,5,0,50,36,30,0,39,38,0,38,20,0,71,94,9,0,35,14,89,57,7,0,26,5,0,22,30,48,20,32,33,40,34,79,9,0,20,63,30,82,9,0,28,79,9,0,26,31,7,7,35,50,3,0,57,31,0,35,68,67,14,48,25,7,0,26,63,12,135,39,52,103,7,0,125,69,31,67,166,40,0,55,44,33,35,11,0,44,22,9,5,0,28,3,0,39,16,37,57,21,57,3,0,35,16,34,35,16,3,0,36,16,41,36,16,3,0,35,16,37,53,3,0,48,65,96,0,33,69,12,33,5,0,22,25,21,0,35,10,60,50,5,0,38,18,0,10,59,38,5,0,42,18,0,10,63,38,5,0,42,27,24,25,26,25,7,3,0,31,34,54,0,33,71,12,33,5,0,53,3,0,28,37,57,3,0,28,23,76,5,3,0,50,41,112,3,0,55,76,41,3,0,28,62,70,0,33,69,12,33,5,0,57,21,46,3,0,38,34,61,70,0,33,69,12,33,5,0,26,0,34,66,5,0,25,0,19,62,5,0,21,47,3,0,50,39,34,46,60,27,29,38,0,31,25,42,12,27,66,7,5,0,50,3,0,39,40,34,21,29,0,66,18,12,24,5,0,32,0,8,73,38,0,34,31,7,0,36,33,7,38,0,31,34,61,3,0,41,34,40,21,29,31,64,42,0,37,45,0,36,33,7,5,0,58,31,34,63,3,0,50,34,40,21,29,31,0,37,68,0,36,33,7,5,0,31,34,63,3,0,28,34,39,22,0,35,10,60,38,5,0,42,25,24,25,24,25,7,60,3,0,32,113,3,0,56,27,0,48,50,49,12,21,38,5,0,32,49,29,54,3,0,51,27,48,32,32,0,61,25,28,99,12,26,0,37,29,7,0,51,5,0,59,3,0,38,21,21,31,0,33,69,5,0,30,0,70,58,0,38,33,7,5,0,35,52,5,0,30,54,59,3,0,51,39,27,62,59,3,0,23,16,15,16,15,16,6,40,29,39,34,30,28,33,17,14,24,0,52,35,33,19,12,32,30,20,5,0,28,0,35,27,28,30,36,0,53,43,0,82,22,40,30,9,7,0,55,43,0,82,22,26,9,7,0,48,0,37,33,38,9,0,39,25,44,11,0,93,16,93,9,70,33,38,9,0,23,42,9,0,92,14,26,0,67,45,0,113,36,24,11,9,0,166,0,37,25,49,16,51,9,7,0,37,0,86,79,7,5,0,26,0,22,34,5,0,67,34,15,3,0,102,35,138,0,27,27,81,35,77,9,0,23,65,9,0,20,7,0,25,77,7,0,31,36,7,0,21,62,7,0,43,63,12,51,29,38,23,27,0,63,27,0,33,38,9,0,23,42,9,0,101,0,47,49,9,14,47,28,0,39,26,9,0,53,33,7,0,31,57,5,3,0,41,55,33,80,0,32,36,56,14,56,7,5,0,57,62,5,3,0,29,119,24,5,3,0,60,44,47,62,0,33,57,33,58,63,5,0,16,3,0,48,54,31,76,0,33,71,5,0,58,3,0,25,34,31,48,57,3,0,24,34,20,32,0,73,44,44,31,5,0,32,56,3,0,32,20,25,30,34,32,0,64,36,0,37,24,7,0,55,12,44,5,0,21,29,41,54,3,0,44,62,21,26,31,54,3,0,44,20,0,70,53,0,38,33,7,5,0,35,47,5,0,12,13,10,6,3,0,59,22,17,58,0,18,21,62,0,19,60,0,19,60,0,20,61,0,20,61,0,20,61,0,14,41,65,5,3,0,26,38,41,34,12,13,30,64,0,30,22,45,47,9,0,96,0,24,41,29,28,28,28,28,11,0,27,41,29,27,28,28,29,11,0,26,46,41,62,20,0,28,39,73,36,51,35,31,36,35,49,65,9,0,14,0,24,20,0,71,39,48,78,18,33,11,9,0,28,48,38,64,0,145,38,24,18,34,11,9,0,19,98,16,51,9,0,33,29,34,33,47,35,63,0,24,82,0,23,24,45,20,69,0,25,39,22,0,38,115,11,0,41,115,11,0,86,9,0,32,0,21,82,0,24,82,0,23,20,59,0,23,20,66,0,23,20,59,0,22,20,61,0,14,51,44,45,46,22,53,9,0,5,0,28,3,0,26,38,41,43,0,70,56,30,34,34,58,5,0,16,3,0,25,34,0,35,55,61,12,41,5,3,0,40,45,0,66,66,69,23,45,33,61,5,0,17,3,0,31,34,31,59,24,0,40,65,5,0,96,3,0,24,34,30,50,24,0,39,56,5,0,89,3,0,19,40,29,43,34,85,16,3,0,42,69,40,43,42,65,12,34,5,3,0,29,34,58,51,3,0,62,105,0,34,60,35,5,0,17,3,0,29,57,97,27,3,0,23,24,0,36,34,0,37,31,14,32,7,0,18,44,5,0,20,3,0,66,30,110,5,0,58,3,0,60,34,40,94,101,5,0,59,3,0,37,90,36,18,43,70,36,18,49,12,59,0,74,31,7,0,18,5,3,0,40,37,36,151,45,9,42,40,47,42,47,44,55,9,7,5,0,54,3,0,34,198,3,0,30,193,19,5,0,44,3,0,34,63,36,18,49,5,0,48,3,0,70,49,0,27,97,0,25,70,20,7,0,54,25,5,0,32,37,51,54,9,17,12,45,68,0,39,47,0,31,27,41,0,50,43,9,0,10,21,16,50,68,7,0,39,70,7,0,41,27,64,10,21,16,50,7,5,0,51,45,29,21,33,133,58,3,0,35,64,47,44,47,12,17,12,6,3,0,50,25,22,0,32,31,0,52,54,43,16,28,9,0,30,57,36,35,7,5,0,26,63,26,5,0,97,3,0,31,20,0,112,51,41,22,3,0,49,15,0,74,66,23,49,12,23,5,0,18,3,0,44,58,0,35,27,34,5,0,34,64,37,67,65,5,0,16,3,0,33,250,13,5,0,40,3,0,21,41,0,89,51,5,0,16,3,0,32,36,31,47,18,0,37,55,35,20,14,56,7,45,31,47,18,62,48,31,47,18,54,70,32,47,18,60,12,48,5,3,0,23,55,0,76,31,18,18,18,5,0,17,3,0,44,33,72,0,53,27,5,0,24,3,0,47,54,0,33,69,5,3,0,70,33,0,39,65,15,7,0,28,5,0,77,0,25,86,56,32,80,7,5,3,0,26,59,0,39,47,67,48,45,35,30,12,42,5,3,0,33,24,24,27,26,31,20,0,30,9,50,53,124,13,9,0,28,45,0,27,48,0,29,74,0,34,37,0,37,32,50,0,30,38,26,0,14,21,5,3,0,22,45,64,12,38,5,3,0,48,47,31,0,73,53,7,5,0,62,3,0,51,47,22,0,31,0,182,76,7,5,0,20,3,0,78,45,82,5,3,0,28,34,59,5,0,42,3,0,35,34,59,5,0,49,3,0,19,59,3,0,21,62,3,0,34,76,3,0,94,26,45,5,0,27,0,33,71,5,0,101,3,0,67,26,45,5,0,27,0,33,71,5,0,74,3,0,25,32,0,52,76,5,0,42,18,47,0,10,38,59,0,37,75,16,37,9,0,67,38,5,3,0,49,46,68,29,15,3,0,114,24,43,5,0,25,23,0,33,64,55,5,0,121,0,25,59,5,3,0,39,35,40,67,7,0,28,5,0,34,60,5,0,33,17,3,0,47,67,0,115,78,5,0,16,3,0,34,35,50,5,0,44,3,0,72,120,81,59,3,0,42,30,20,0,36,22,43,20,5,0,15,34,0,54,34,7,0,91,20,31,7,5,0,56,3,0,30,39,43,50,33,0,37,33,46,35,5,0,26,0,71,50,0,94,38,49,45,14,40,36,49,7,99,54,47,0,37,49,14,25,55,7,12,23,38,34,53,5,0,53,63,0,52,80,5,0,52,80,5,0,67,80,5,0,81,72,3,0,45,27,0,69,69,5,0,52,3,0,26,33,0,34,62,37,5,3,0,49,34,66,43,55,60,5,0,63,3,0,27,68,3,0,81,13,0,21,12,0,93,33,124,38,13,15,21,0,59,28,66,28,7,5,0,81,36,0,42,25,41,66,177,56,73,31,16,145,66,0,56,35,24,7,0,28,37,31,7,0,73,42,91,5,0,95,3,0,20,34,42,68,45,42,96,62,57,56,24,9,37,54,107,5,0,34,3,0,22,63,3,0,44,74,27,12,53,5,3,0,55,93,13,5,0,43,3,0,50,121,3,0,54,111,18,56,25,78,53,95,39,121,60,106,59,0,23,37,26,7,0,24,38,27,7,0,40,5,0,68,3,0,69,75,48,0,20,35,20,7,0,18,56,25,70,32,78,27,51,79,56,25,42,81,34,80,70,83,9,0,24,56,27,7,5,0,83,3,0,27,21,0,60,92,5,0,31,34,3,0,57,54,35,39,60,3,0,31,59,0,66,40,26,23,13,5,0,38,3,0,28,59,0,39,40,13,5,0,35,3,0,32,56,0,36,69,5,0,20,3,0,22,67,38,60,7,0,38,47,39,13,5,0,36,65,0,23,80,7,0,31,13,5,0,29,3,0,21,11,9,19,38,0,86,34,5,0,71,75,0,35,43,5,0,117,44,5,0,35,39,5,0,17,3,0,30,57,0,21,74,5,3,0,49,13,14,6,86,3,0,39,13,14,6,73,88,3,0,41,13,14,6,78,3,0,46,12,6,71,3,0,41,13,16,6,163,3,0,46,13,17,14,6,23,0,27,21,20,20,69,14,0,20,68,14,0,14,69,5,0,72,3,0,48,13,14,6,85,3,0,59,12,6,84,3,0,24,38,0,80,0,30,21,9,80,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,24,9,79,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,23,24,9,53,0,28,20,30,33,28,14,11,0,18,28,25,12,9,0,14,16,26,23,10,5,3,0,23,33,42,67,19,9,6,12,9,10,6,3,0,65,11,18,16,0,32,13,5,0,40,63,5,3,0,19,13,16,6,32,21,25,24,24,26,6,0,39,42,13,11,12,35,33,0,30,17,7,0,38,55,19,20,11,7,0,38,57,19,20,11,7,0,32,23,17,21,18,8,25,0,26,23,11,81,41,90,18,11,0,22,11,80,41,88,18,11,0,22,11,80,41,88,18,11,0,23,11,80,11,0,20,11,35,29,81,22,0,28,80,22,0,22,98,13,11,7,0,38,33,7,5,0,19,3,0,63,12,6,42,30,47,32,69,62,46,79,18,11,7,0,30,12,63,45,79,18,11,7,0,32,5,3,0,29,12,6,35,36,71,19,28,11,7,0,13,13,21,18,0,98,65,19,29,11,7,0,19,5,0,16,3,0,22,13,11,6,57,14,7,30,42,15,18,7,0,27,21,33,46,34,56,0,20,33,45,34,55,0,20,33,100,18,11,34,55,0,20,48,34,55,0,14,9,31,30,38,59,12,0,36,57,55,55,63,0,67,27,45,104,22,15,38,59,72,124,56,75,25,42,17,13,0,50,38,60,72,126,57,74,25,42,17,13,0,49,38,59,18,65,22,15,27,11,9,5,3,0,34,38,17,53,24,23,7,52,3,0,27,173,37,12,36,5,3,0,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,33,82,77,78,87,54,130,3,47,48,62,41,42,18,3,50,18,3,45,0,47,42,42,33,2,0,53,39,0,85,29,66,10,34,3,2,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,54,31,57,13,0,46,11,0,62,54,0,16,62,38,38,16,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,77,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,47,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,84,3,0,24,34,0,36,35,41,42,12,24,5,0,16,50,3,0,28,38,41,43,44,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,33,59,28,51,61,5,0,16,3,0,28,13,0,30,24,32,20,54,0,60,61,9,0,20,0,29,24,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,30,51,3,0,37,35,55,12,47,5,0,30,59,3,0,23,34,0,33,34,46,32,57,5,0,46,75,49,3,0,48,54,0,38,35,57,5,0,43,54,3,0,41,26,0,70,48,5,0,33,45,33,54,3,0,48,54,0,38,35,57,5,0,43,33,54,3,0,41,54,24,77,30,0,38,26,34,33,40,43,24,0,40,81,29,13,0,70,18,0,29,48,18,0,28,13,44,26,0,47,62,22,70,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,33,81,5,0,115,3,0,21,38,41,16,54,3,0,38,36,60,47,36,88,42,36,12,54,5,3,0,26,71,38,0,37,33,5,0,67,36,34,7,0,24,25,49,7,0,71,40,7,5,0,100,23,49,5,0,40,3,0,27,35,43,0,42,57,49,55,14,38,7,0,36,75,37,46,37,12,43,5,3,0,3,0,13,22,18,22,24,23,3,0,1,20,32,25,38,43,23,29,3,0,20,63,3,0,20,61,3,0,26,68,3,0,17,61,3,0,28,64,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,35,14,33,7,0,45,45,7,46,61,35,70,29,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,60,5,3,0,49,55,0,43,116,5,0,44,121,5,0,193,3,0,24,167,51,5,3,0,18,55,3,0,21,52,39,0,36,21,7,5,3,0,22,52,39,0,99,21,7,5,3,0,1,0,37,24,19,20,20,25,22,33,3,0,1,0,51,22,38,3,0,39,38,0,50,43,42,13,5,0,36,0,39,45,70,45,7,0,29,5,0,65,76,65,3,0,49,41,45,67,61,36,7,0,18,5,0,77,45,49,14,21,7,5,0,73,18,5,0,51,3,0,24,124,33,5,3,0,1,0,20,26,26,27,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,1,46,71,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,32,76,78,87,48,56,84,98,80,86,102,85,98,85,144,101,69,79,86,104,127,3,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,58,21,34,3,0,20,34,3,0,34,16,210,3,0,37,34,23,5,0,38,0,117,22,5,0,21,3,0,48,14,40,62,27,0,59,67,7,0,32,5,3,0,28,19,25,25,40,0,35,40,0,31,42,0,39,38,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,44,78,3,0,65,22,0,14,42,14,7,0,37,0,28,25,7,0,27,0,34,17,7,0,42,14,7,0,26,33,7,0,23,5,0,18,3,0,69,26,20,36,14,35,7,5,0,65,0,18,34,12,33,5,0,18,3,0,23,34,31,30,0,36,75,5,0,41,30,0,30,52,5,0,33,56,5,0,49,3,0,41,40,0,33,48,25,60,56,5,0,18,3,0,26,34,50,0,66,56,5,0,52,3,0,33,16,43,29,60,52,3,0,25,34,16,47,3,0,22,34,31,0,36,47,12,51,5,0,48,3,0,26,34,53,62,53,52,3,0,30,33,42,5,3,0,27,34,0,66,18,12,24,5,0,124,63,3,0,35,49,18,41,5,0,16,3,0,43,60,63,30,65,0,30,88,41,88,5,3,0,36,67,147,92,7,0,21,7,3,0,32,33,23,5,3,0,38,44,38,39,3,0,37,16,59,3,0,34,109,23,5,0,32,38,53,30,32,27,49,41,38,53,3,0,52,55,25,0,76,29,48,40,58,12,31,45,51,47,40,62,5,3,0,23,34,0,61,77,5,0,33,34,18,0,63,84,14,52,66,7,5,0,58,52,0,14,41,17,5,0,40,65,3,0,24,34,51,50,3,0,30,30,87,30,19,3,0,27,16,0,34,43,5,0,40,18,5,0,38,19,5,0,16,0,33,19,5,0,16,33,3,0,32,34,53,60,52,3,0,23,34,30,0,36,39,18,40,48,27,5,0,32,59,32,0,36,39,18,34,42,27,5,0,48,21,30,49,3,0,22,34,125,36,46,50,35,76,75,7,7,48,3,0,29,37,40,18,51,0,71,48,7,0,53,5,0,36,0,35,58,45,65,5,0,16,3,0,30,34,30,45,30,56,3,0,42,34,0,39,30,5,0,44,39,3,0,28,34,0,27,32,23,26,26,25,26,38,0,16,34,7,9,0,50,3,0,32,34,51,0,46,90,5,0,32,50,3,0,40,51,0,67,56,12,25,5,3,0,25,30,22,23,23,9,149,0,70,42,24,47,11,0,45,9,0,24,21,24,23,24,45,0,25,39,40,45,0,80,36,11,0,48,56,9,0,14,0,23,57,0,25,39,0,25,40,0,24,126,0,26,39,0,24,47,0,27,49,5,0,28,3,0,30,42,0,71,39,48,32,36,52,14,48,31,44,36,60,7,5,0,16,3,0,33,34,36,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,35,43,71,75,48,3,0,33,87,146,3,0,72,23,38,0,31,27,0,34,43,7,0,46,25,41,5,0,16,3,0,37,132,3,0,30,128,3,0,29,33,18,5,0,110,3,0,26,60,18,18,5,0,35,32,18,0,37,39,30,46,30,9,0,20,7,0,18,5,0,37,32,18,0,37,41,30,48,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,65,18,5,0,38,117,20,7,0,37,20,0,38,22,9,7,5,0,17,3,0,53,32,33,31,83,0,47,74,0,54,47,49,30,71,16,43,9,0,45,54,7,0,121,0,35,23,54,9,0,45,52,31,68,54,7,0,53,43,49,33,29,66,52,7,3,0,45,104,3,0,30,78,3,0,20,48,3,0,32,38,0,67,18,16,5,3,0,33,100,19,5,0,47,16,0,62,19,5,0,22,95,5,0,16,3,0,64,25,45,44,7,50,3,0,17,30,50,0,68,18,5,0,44,26,56,32,39,29,40,54,3,0,31,41,69,5,0,33,72,5,0,43,3,0,26,34,0,56,0,63,31,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,33,56,5,0,66,3,0,37,37,94,58,0,35,59,5,0,34,72,57,59,3,0,37,37,78,58,63,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,91,0,29,49,5,0,49,3,0,41,35,37,115,30,95,30,54,3,0,24,34,34,30,84,22,50,3,0,61,37,0,18,90,5,0,30,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,38,25,39,42,37,12,24,5,0,35,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,82,26,57,21,62,3,0,33,75,3,0,28,118,3,0,36,34,37,30,0,36,30,5,0,43,30,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,35,29,19,5,0,24,27,62,0,24,28,50,0,24,77,36,40,57,9,0,22,40,50,0,22,9,41,0,35,70,18,62,11,9,5,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,39,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,69,27,30,0,21,24,0,44,50,13,11,0,51,9,0,14,0,18,45,32,58,9,0,14,0,23,67,32,56,9,0,14,0,20,30,0,39,68,74,64,9,0,14,0,23,67,32,64,9,0,14,0,18,67,32,56,9,0,14,5,3,0,50,71,3,0,59,34,23,5,0,72,44,44,45,29,29,47,56,57,38,71,31,18,7,66,38,38,0,15,23,5,0,54,3,0,26,34,64,33,97,8,35,31,65,3,0,26,33,33,24,23,20,25,22,25,20,22,7,5,0,17,3,0,30,50,44,3,0,55,38,41,22,25,0,25,49,54,5,0,42,44,73,0,36,54,0,30,35,7,0,58,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,34,79,5,0,135,0,79,42,13,5,0,59,3,0,37,32,70,12,54,5,3,0,60,66,37,18,69,42,71,5,0,33,52,58,92,0,29,32,11,9,0,58,27,58,0,28,51,84,48,78,51,102,11,9,0,26,9,32,5,0,74,3,0,27,33,60,49,57,20,9,0,27,45,7,5,0,34,3,0,64,105,64,29,0,58,0,19,37,14,57,7,0,46,79,5,0,78,3,0,64,0,28,0,21,87,37,0,62,57,7,0,126,33,20,14,34,7,5,0,47,0,141,119,5,0,22,3,0,21,36,33,61,36,26,49,23,59,42,24,41,39,23,67,12,80,20,33,14,34,7,0,37,5,3,0,21,83,3,0,34,33,35,18,39,26,17,5,0,43,87,32,5,0,48,3,0,44,43,37,0,64,38,34,38,55,7,5,0,58,3,0,25,68,3,0,70,47,53,60,47,77,3,0,92,71,54,0,14,31,0,28,69,7,0,21,67,7,0,33,96,7,0,13,5,0,99,3,0,46,46,47,0,60,70,5,0,59,69,5,3,0,40,102,62,3,0,34,49,48,3,0,70,59,86,5,0,95,0,23,68,18,5,0,52,23,3,0,44,58,0,35,27,34,5,0,34,64,37,65,67,5,0,16,3,0,32,38,41,52,20,0,33,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,74,13,5,0,99,59,61,3,0,38,49,27,5,0,49,41,3,0,28,44,0,50,77,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,63,101,3,0,67,59,63,74,3,0,25,32,0,52,61,5,0,43,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,64,27,5,0,49,0,15,36,37,5,3,0,49,34,53,5,0,63,3,0,29,69,0,14,12,17,0,40,33,72,38,13,15,21,0,59,28,66,28,7,5,0,83,45,5,0,23,40,42,26,0,52,51,0,94,16,7,0,104,62,7,0,43,18,14,58,0,15,37,77,48,5,0,54,33,22,5,0,21,35,24,5,0,67,38,27,5,0,71,40,91,137,3,0,40,59,41,12,56,5,3,0,20,34,45,82,75,26,9,33,0,27,56,38,7,5,0,34,3,0,39,35,40,60,7,0,28,5,0,49,42,33,17,3,0,22,24,34,66,0,33,40,0,28,33,29,61,20,0,14,40,5,3,0,78,24,34,15,0,33,88,15,0,28,33,29,87,15,0,14,77,15,5,3,0,22,30,23,42,0,14,40,5,3,0,38,33,56,0,37,62,44,20,7,0,54,5,0,52,3,0,19,59,3,0,21,88,3,0,30,50,0,115,80,5,0,16,3,0,26,60,48,12,42,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,42,47,31,0,75,66,7,5,0,20,3,0,22,63,3,0,27,68,3,0,29,69,3,0,41,33,87,61,5,0,55,3,0,45,70,40,105,55,3,0,3,0,41,18,3,60,34,40,36,18,61,46,61,37,56,5,3,0,41,76,37,68,3,0,26,74,49,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,29,64,44,3,0,40,80,58,5,0,34,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,60,0,22,100,30,46,23,69,43,14,58,7,12,55,5,0,31,93,39,3,0,21,60,61,0,65,27,25,76,61,5,0,43,39,37,77,35,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,58,88,5,0,28,33,3,0,21,60,61,25,0,65,73,23,56,5,0,56,34,57,36,0,32,69,64,5,0,34,43,21,54,3,0,23,91,3,0,3,0,59,22,35,48,36,29,0,35,64,61,50,0,39,28,9,7,0,40,5,3,0,19,72,3,0,3,0,35,33,32,32,12,29,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,58,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,137,151,3,0,47,103,0,60,184,5,3,0,146,162,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,15,35,36,37,33,32,14,19,16,16,40,22,2,27,21,0,96,33,79,3,0,17,1,0,13,17,21,31,24,40,30,40,39,28,24,36,32,32,28,25,34,25,6,27,44,21,31,23,23,23,31,30,27,36,17,23,26,22,19,17,30,32,26,24,44,28,29,29,34,26,3,0,17,89,37,53,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,66,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,37,31,12,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,28,33,0,32,46,7,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,15,27,33,28,16,29,28,21,16,3,0,20,38,42,49,39,3,0,23,56,3,0,21,31,68,38,0,51,88,27,5,0,21,3,0,16,61,3,0,15,41,84,35,38,51,0,40,34,13,5,0,71,0,19,21,12,68,5,3,0,58,21,51,18,19,15,47,6,53,38,29,3,0,22,46,33,61,79,29,33,14,0,83,27,59,5,0,33,120,3,0,30,33,46,64,0,39,64,51,7,5,0,33,140,3,0,15,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,38,20,0,20,38,20,0,20,25,11,0,16,0,16,33,29,18,23,11,0,7,5,3,0,26,36,49,37,27,27,56,3,0,26,63,13,5,0,39,48,0,35,79,5,0,74,42,0,76,176,7,0,25,43,14,45,7,0,26,12,35,5,3,0,19,59,0,35,28,13,5,0,74,26,39,12,23,34,5,3,0,21,55,23,24,13,5,0,59,0,22,37,12,36,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,56,16,3,0,31,55,18,57,47,0,37,14,55,28,5,0,38,14,26,5,0,31,3,0,28,59,0,24,61,39,14,76,7,0,13,5,0,23,24,41,15,7,0,61,77,100,9,0,42,15,7,0,60,77,99,9,0,44,15,7,5,0,22,37,13,5,0,72,3,0,21,59,0,22,37,12,41,5,3,0,28,59,0,24,202,32,25,25,15,7,0,37,13,5,0,22,37,12,38,5,3,0,25,59,17,0,24,85,0,64,46,15,7,0,42,13,5,0,159,30,23,23,13,5,0,22,15,5,0,42,3,0,27,59,0,22,94,13,5,0,37,26,36,13,5,0,58,3,0,24,59,60,0,44,25,39,14,50,7,62,26,42,12,23,39,5,3,0,26,19,14,29,15,0,14,25,39,15,0,14,25,39,15,0,14,25,37,15,0,14,25,38,15,0,14,100,79,103,11,0,46,30,16,27,43,9,0,15,0,14,25,41,15,0,15,100,79,104,11,0,44,30,16,27,41,9,0,15,0,15,25,39,15,0,14,97,46,16,27,40,9,0,15,0,14,34,15,0,14,25,42,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,14,35,15,0,14,14,37,15,0,15,38,15,0,14,25,35,15,0,14,36,15,0,14,24,15,0,14,38,26,17,9,0,5,0,105,3,0,24,72,27,32,3,0,16,33,25,0,14,42,66,7,0,51,0,31,66,7,0,20,24,14,25,25,43,26,44,16,9,0,30,7,0,23,5,0,60,21,18,0,42,46,62,0,40,38,77,9,65,75,14,14,7,0,23,19,5,0,36,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,47,26,65,65,0,53,81,122,81,11,0,35,87,11,0,27,19,9,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,82,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,74,5,0,55,0,22,60,5,0,23,23,22,5,0,68,71,5,0,19,79,42,13,5,0,37,3,0,29,33,24,25,37,0,54,53,5,0,83,0,16,30,60,7,0,65,22,36,7,5,0,53,0,32,23,23,21,51,5,0,50,53,0,39,25,7,0,73,21,51,5,0,80,81,0,30,83,7,5,0,22,60,5,0,23,53,51,7,0,23,22,5,0,68,71,5,0,77,0,19,42,13,5,0,59,37,3,0,33,53,13,0,21,39,110,23,0,45,29,62,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,77,7,0,55,30,0,22,60,43,36,46,25,29,46,33,77,14,25,7,5,0,58,40,3,0,19,17,36,32,0,14,42,79,7,0,55,0,88,80,26,32,49,19,18,29,46,19,11,9,0,60,71,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,9,0,14,35,45,82,34,44,0,28,45,42,11,0,48,61,0,63,29,26,43,68,20,54,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,65,14,37,7,5,0,13,3,0,15,18,35,33,36,0,42,56,0,33,47,54,25,29,38,61,40,96,0,62,73,19,9,0,25,45,0,27,38,75,11,0,44,9,0,36,14,14,7,5,0,63,3,0,20,63,3,0,14,34,50,0,82,72,5,0,33,3,0,25,39,0,39,81,5,3,0,26,37,0,88,18,5,0,112,28,5,0,90,87,5,0,145,18,5,0,36,47,5,0,90,19,5,0,40,18,5,0,35,3,0,27,33,15,0,85,37,45,34,12,47,5,3,0,1,0,36,28,22,48,21,3,0,20,67,3,0,29,39,0,41,43,20,7,0,56,64,5,0,17,3,0,24,32,18,12,46,5,3,0,22,90,3,0,41,44,145,3,0,31,39,49,3,0,23,59,3,0,35,66,3,0,24,93,3,0,27,85,3,0,22,61,3,0,15,68,3,0,21,49,3,0,48,51,49,5,3,0,55,44,76,5,0,74,3,0,27,32,70,29,84,5,0,16,3,0,31,46,70,28,116,5,3,0,36,114,98,5,0,37,95,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,17,28,67,0,31,39,5,0,27,60,5,3,0,27,144,3,0,1,24,17,30,26,3,0,1,0,12,33,19,21,17,39,79,87,3,0,13,31,35,0,60,26,0,95,33,7,5,0,19,3,0,1,0,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,30,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,47,105,2,0,36,22,34,0,34,0,127,58,0,93,77,7,5,0,24,24,27,26,31,14,0,30,36,0,94,27,0,42,36,62,0,133,60,11,9,0,14,0,28,38,14,0,27,9,43,36,36,33,16,9,0,29,35,120,14,0,34,36,73,9,0,40,29,37,14,0,37,41,14,5,0,16,3,0,50,39,131,40,58,40,12,30,5,3,0,48,30,0,14,37,0,66,14,75,34,34,31,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,31,0,41,43,9,7,5,0,20,3,0,51,20,3,0,55,57,0,50,32,0,70,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,26,9,40,22,74,55,9,0,24,49,5,0,34,3,0,70,20,21,0,30,18,22,14,33,7,0,50,24,35,14,46,78,48,27,14,14,30,0,67,84,9,0,38,49,9,0,76,7,5,0,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,47,44,43,41,54,21,41,54,3,0,125,24,24,150,150,9,0,27,38,0,34,60,18,37,11,9,0,56,68,9,0,41,69,9,0,14,0,30,40,78,9,0,14,0,27,101,43,112,110,9,0,14,0,26,95,43,0,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,141,9,5,3,0,31,91,82,5,3,0,30,34,47,59,14,48,7,5,3,0,25,58,3,0,36,53,3,0,1,0,43,61,88,13,5,0,25,74,0,31,26,34,55,56,11,16,62,9,7,0,27,5,3,0,19,27,0,59,32,5,0,36,37,21,40,0,33,24,5,0,40,36,16,3,0,46,38,41,66,0,34,56,32,0,37,80,7,0,46,57,5,0,16,3,0,81,38,41,0,37,36,41,0,29,69,9,0,20,14,39,7,5,0,28,0,30,34,12,51,33,5,0,61,53,5,0,87,0,25,65,5,0,35,56,40,31,0,31,47,7,0,53,47,7,0,33,44,45,14,25,7,0,67,49,7,0,74,18,47,59,37,60,5,0,16,3,0,70,38,41,57,62,0,85,18,5,0,76,83,3,0,70,35,56,23,48,31,51,60,5,0,16,3,0,43,38,41,57,59,0,85,18,5,0,65,18,5,0,64,3,0,64,37,0,60,27,42,0,73,22,9,0,66,25,33,0,161,92,9,0,35,74,56,0,36,48,39,64,30,40,9,0,20,0,106,98,95,11,9,0,63,94,39,0,135,86,9,0,81,7,5,0,16,3,0,40,38,41,0,17,26,71,23,58,116,15,0,24,62,62,15,9,0,14,61,5,3,0,44,38,41,117,3,0,40,62,31,40,36,46,39,25,0,38,46,7,0,18,45,60,0,19,80,67,34,0,40,61,137,67,9,7,0,84,5,0,38,41,61,76,0,67,56,39,26,27,70,18,55,5,0,16,3,0,44,38,41,57,57,0,85,18,5,0,58,3,0,54,19,33,55,17,6,0,8,72,0,34,48,7,0,75,36,66,26,0,16,3,0,60,50,56,25,43,24,104,5,0,25,0,40,50,0,55,26,20,7,0,18,5,0,46,0,115,56,25,91,31,0,49,43,64,9,0,83,7,0,21,36,7,0,38,33,65,14,57,7,54,74,46,46,47,31,31,18,54,25,0,21,29,80,14,149,7,0,65,0,79,26,98,46,42,42,14,50,66,0,89,44,9,7,0,68,18,45,81,12,24,18,5,3,0,81,54,20,42,59,0,36,69,5,0,61,3,0,30,208,3,0,40,40,40,46,7,0,69,140,14,95,42,0,45,74,11,9,7,5,0,89,3,0,106,20,24,21,80,50,0,30,18,22,14,33,0,32,69,95,11,0,29,82,11,0,22,16,9,7,0,57,43,7,0,125,16,40,5,0,80,24,5,0,74,16,3,0,27,65,3,0,49,20,0,29,131,16,3,0,21,38,41,80,3,0,38,59,72,13,0,30,24,32,20,0,112,64,85,64,9,0,97,65,9,0,46,0,25,32,20,0,36,52,9,0,40,79,9,0,47,0,23,32,20,55,0,22,9,34,53,44,0,113,55,0,73,48,13,0,66,24,61,129,80,78,52,52,53,52,37,37,52,37,50,74,72,46,46,58,24,11,0,84,24,57,24,11,0,20,9,0,21,9,45,40,22,46,33,40,40,55,9,0,24,9,41,65,39,35,22,9,0,21,69,0,24,68,0,24,68,0,23,32,20,52,0,23,24,42,0,24,67,0,29,30,9,46,86,99,56,34,22,85,80,58,9,0,26,9,86,56,34,22,94,0,51,49,11,0,80,58,9,0,27,28,9,46,86,93,56,77,80,21,9,0,24,9,86,56,85,80,21,9,0,27,46,0,20,31,0,24,32,34,44,0,22,31,0,27,41,0,29,9,34,22,29,62,0,51,59,18,74,11,9,0,22,9,38,36,0,83,86,13,0,24,0,78,75,13,0,42,74,11,0,64,0,59,43,52,0,40,45,71,53,92,20,43,13,0,24,11,9,0,14,32,5,3,0,25,34,41,16,51,3,0,47,45,0,20,78,0,34,73,7,0,36,18,70,43,50,12,40,5,3,0,29,34,32,16,51,0,57,56,5,0,36,3,0,47,21,0,62,44,42,51,26,7,5,0,47,47,0,61,102,5,0,49,3,0,33,75,27,0,36,27,38,57,50,7,0,36,5,0,52,3,0,49,44,47,54,43,75,23,16,39,3,0,50,38,41,12,30,72,44,44,80,45,29,29,50,43,46,24,55,30,14,6,21,20,27,0,39,18,22,14,65,0,39,48,16,9,7,0,39,52,55,39,108,37,14,14,112,7,5,0,41,44,30,66,74,57,0,92,72,42,7,0,44,40,40,0,55,36,0,55,50,9,7,0,60,23,5,0,62,62,0,27,47,5,0,64,50,58,72,46,0,30,59,33,77,12,24,5,0,55,48,49,17,5,0,65,37,64,27,3,0,22,38,3,0,20,32,18,5,3,0,44,16,3,0,14,34,32,16,46,0,30,68,0,66,54,0,48,42,9,0,42,7,0,22,5,0,41,0,40,78,114,77,45,72,5,0,33,50,3,0,27,33,52,34,28,12,26,5,3,0,34,34,0,36,22,86,7,5,0,18,86,30,6,16,44,52,3,0,27,34,16,26,53,27,0,26,38,52,32,69,5,0,16,52,3,0,61,41,21,34,25,16,0,30,18,22,14,33,0,32,72,22,16,9,7,0,74,0,23,71,7,0,27,47,7,0,33,5,0,34,0,20,29,26,32,5,0,39,3,0,21,212,3,0,53,24,0,31,41,81,7,0,36,47,7,5,0,34,28,24,17,17,0,37,47,0,22,20,47,38,52,7,0,32,5,0,28,35,22,5,0,24,0,43,34,37,5,0,21,41,5,0,47,40,0,79,21,41,42,12,22,5,0,120,16,3,0,43,194,3,0,45,41,3,0,35,70,31,0,46,34,56,14,56,7,5,0,98,62,5,3,0,73,61,39,27,25,88,5,0,71,52,32,42,73,41,18,5,3,0,81,27,0,32,145,53,5,0,59,72,0,22,84,63,57,65,9,0,84,14,40,7,0,28,53,5,3,0,114,178,33,16,3,0,49,35,27,41,34,12,58,39,169,0,44,30,7,0,52,5,0,20,3,0,31,19,27,27,3,0,104,44,44,29,29,37,35,41,132,65,51,54,26,22,38,38,16,3,0,65,51,56,37,72,44,44,0,17,47,70,5,0,46,29,29,39,26,22,66,38,38,60,3,0,62,66,3,0,60,50,32,3,0,62,70,52,36,0,23,42,60,12,42,42,29,73,74,63,0,50,125,75,9,0,66,134,0,43,106,9,9,28,36,5,0,46,3,0,29,56,56,5,0,16,3,0,81,41,0,50,139,5,3,0,71,20,21,0,30,18,22,14,33,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,90,12,0,48,17,44,50,53,129,44,46,0,30,82,7,0,36,18,57,12,101,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,0,33,30,41,37,41,0,106,22,7,12,30,5,0,18,35,12,87,5,0,16,16,3,0,63,54,65,13,5,0,27,36,67,15,7,0,102,47,7,5,0,87,75,13,5,0,43,66,13,5,0,123,0,44,57,68,14,73,7,5,3,0,20,62,60,0,42,54,5,0,17,3,0,16,34,16,0,34,75,44,39,5,0,31,62,5,0,76,275,48,14,38,7,5,0,32,45,5,0,52,3,0,20,34,0,34,61,44,39,5,0,16,0,123,28,27,12,43,50,5,0,52,3,0,52,75,47,79,7,5,3,0,63,76,85,98,3,0,79,34,76,110,73,5,3,0,85,58,0,28,34,42,14,0,37,49,14,0,41,51,14,0,37,65,66,9,0,46,14,0,14,99,5,0,52,3,0,43,30,14,103,5,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,44,60,32,0,9,24,15,56,5,3,0,28,46,3,0,57,65,3,0,48,103,3,0,39,38,41,51,80,49,89,74,15,3,0,1,0,19,14,2,21,16,2,28,29,37,31,48,32,49,59,56,0,104,110,39,58,67,7,5,0,55,40,55,41,3,0,25,33,74,67,55,58,48,53,102,77,3,0,31,50,18,5,0,34,34,16,57,3,0,18,36,19,5,0,39,47,35,30,36,0,36,25,0,60,14,7,0,48,62,5,0,17,3,0,37,31,33,5,0,57,3,0,44,36,34,13,0,30,29,19,5,0,24,24,27,73,0,27,49,0,21,43,0,22,44,0,27,51,0,22,34,71,63,71,11,9,0,66,0,24,39,43,0,21,43,0,25,47,0,25,47,0,24,46,0,22,44,0,24,22,40,0,40,83,9,0,50,0,24,46,0,23,45,0,24,33,0,22,46,0,25,25,9,61,0,69,18,11,0,71,79,11,0,22,21,0,44,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,96,13,0,24,69,11,9,5,0,39,40,0,90,72,12,55,5,3,0,33,70,38,55,44,5,3,0,24,87,0,28,35,59,75,5,3,0,29,36,3,0,32,101,0,34,46,47,5,0,36,25,26,7,0,106,73,7,49,83,5,3,0,20,62,34,16,0,39,41,40,43,15,0,35,38,34,14,43,0,37,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,33,46,25,78,44,53,5,0,16,3,0,46,40,16,0,34,24,12,42,23,5,0,44,83,3,0,38,40,10,0,52,39,0,63,72,41,7,5,0,41,74,5,3,0,32,16,21,54,3,0,27,30,39,30,15,3,0,26,16,38,81,28,30,45,25,53,3,0,27,16,38,21,0,63,40,5,0,34,30,0,33,25,33,7,0,39,5,0,31,0,70,36,52,18,38,51,0,97,52,7,0,25,33,7,0,39,5,0,55,65,0,59,30,92,62,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,78,48,3,0,30,80,64,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,30,40,34,12,0,54,66,47,52,43,28,20,0,21,44,16,27,88,11,0,28,26,9,0,33,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,84,73,5,0,43,21,51,3,0,27,16,35,24,0,35,38,18,0,37,34,47,58,58,73,34,14,28,38,7,0,89,24,60,5,0,73,0,43,61,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,84,28,51,3,0,28,28,61,5,0,16,47,83,50,3,0,29,16,51,3,0,57,103,44,0,37,76,7,5,0,95,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,30,0,32,36,5,0,85,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,30,40,39,35,0,30,68,58,7,0,55,0,77,53,35,0,80,40,31,9,0,17,7,0,32,22,5,0,53,61,40,58,7,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,28,71,28,75,30,82,22,28,49,3,0,35,42,16,0,18,49,12,32,5,0,190,98,51,67,5,0,21,76,30,82,22,28,80,3,0,31,48,54,21,0,14,36,34,0,31,49,14,86,30,30,11,117,117,9,0,25,7,0,69,40,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,55,84,5,0,42,0,22,48,5,0,72,44,44,46,29,29,37,65,0,23,39,5,0,35,43,104,7,26,22,0,45,45,5,0,66,38,38,16,3,0,30,79,3,0,45,52,35,30,81,46,42,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,34,87,3,0,21,86,3,0,19,36,3,0,34,123,3,0,53,28,19,27,6,24,39,24,30,43,41,35,38,86,11,0,19,9,0,35,49,19,9,0,40,0,32,41,65,26,9,0,80,0,97,71,9,7,7,0,21,32,5,0,16,0,28,74,5,0,27,51,3,0,51,47,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,29,30,5,0,17,3,0,70,49,0,75,13,5,0,98,3,0,92,32,33,30,31,32,38,29,0,31,29,42,0,46,75,15,7,0,54,81,7,0,79,13,5,0,47,52,49,47,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,68,9,0,36,51,7,0,100,40,22,62,14,54,7,94,47,0,34,49,7,0,29,42,54,0,46,81,14,56,79,9,0,87,7,144,29,48,0,46,76,14,56,82,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,34,53,0,103,59,5,0,70,72,5,0,15,3,0,38,98,70,5,0,55,3,0,45,64,54,30,94,3,0,94,127,3,0,67,63,106,30,233,79,3,0,47,0,25,21,3,0,35,48,32,69,21,26,22,57,3,0,28,31,43,5,0,48,32,0,31,43,18,43,12,24,5,0,21,26,22,50,3,0,73,33,39,0,24,70,7,12,39,23,14,62,7,5,3,0,25,83,3,0,21,67,67,66,82,94,49,0,35,40,39,59,5,0,69,0,129,48,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,35,61,41,63,5,0,46,3,0,23,32,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,34,49,94,18,54,83,18,5,0,17,3,0,41,35,49,60,25,30,18,5,0,17,3,0,37,46,39,43,0,59,49,9,7,0,27,25,59,18,5,0,17,3,0,21,50,39,114,3,0,34,34,43,0,49,18,0,20,20,7,0,82,42,47,38,105,74,7,0,34,47,84,81,12,42,23,17,5,3,0,32,37,3,0,30,33,37,0,49,21,7,0,83,35,0,85,55,23,9,7,45,19,5,0,39,89,3,0,33,37,45,29,12,19,26,14,27,7,5,0,21,3,0,34,31,64,0,41,75,81,16,22,9,7,5,0,207,3,0,52,21,22,52,61,101,50,73,0,43,93,57,11,9,36,110,41,56,52,69,127,59,50,11,9,7,5,0,101,0,42,136,0,42,79,7,0,44,5,3,0,26,37,50,47,99,43,36,7,46,93,41,0,19,38,9,7,48,40,45,43,51,39,5,3,0,37,60,126,5,0,46,3,0,27,21,21,30,0,37,18,22,14,33,42,7,0,36,46,99,59,5,0,17,3,0,21,25,0,36,69,61,76,71,36,5,0,43,57,0,21,35,5,0,21,54,3,0,23,53,32,3,0,34,34,3,0,72,45,81,59,3,0,32,67,44,18,12,56,18,5,0,21,33,0,8,36,44,0,37,98,7,0,42,99,7,0,36,31,0,38,91,7,0,72,47,23,36,0,17,3,0,42,46,115,18,5,0,17,3,0,39,33,41,18,34,112,18,5,0,17,3,0,36,21,30,0,37,18,22,14,36,83,9,0,33,42,7,0,38,5,3,0,30,39,52,0,35,47,12,83,53,5,0,81,72,3,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,116,42,0,20,55,55,9,14,75,7,5,3,0,46,38,54,0,52,71,0,21,63,66,63,66,67,62,30,56,7,5,0,20,68,5,0,38,50,3,0,29,19,0,82,36,52,5,0,21,54,12,73,5,3,0,1,0,38,31,34,26,48,27,57,72,54,67,52,43,3,0,21,24,3,0,11,27,0,59,32,5,0,36,37,34,37,21,23,38,36,16,3,0,1,0,30,30,0,47,31,74,65,3,0,19,1,0,32,15,0,88,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,36,19,0,51,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,52,36,38,5,0,32,3,0,13,1,0,22,42,25,33,0],"data":{"version":3,"file":"index.js","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/types.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/scopeflags.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/whitespace.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/location.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/base.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/comments.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/error-message.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/error.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/estree.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/context.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/babel-helper-validator-identifier/src/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/babel-helper-validator-identifier/src/keyword.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/flow.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/production-parameter.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/placeholders.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/plugin-utils.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/options.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/state.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/tokenizer/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/util.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/node.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/lval.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/expression.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/statement.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/util/class-scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/parser/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  star: createBinop(\"*\", 10),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  options: Options;\n  inModule: boolean;\n  scope: ScopeHandler<*>;\n  classScope: ClassScopeHandler;\n  prodParam: ProductionParameterHandler;\n  plugins: PluginsMap;\n  filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  input: string;\n  length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        node.trailingComments = trailingComments;\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  ArgumentsDisallowedInInitializer:\n    \"'arguments' is not allowed in class field initializer\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction:\n    \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      const prop = ((method: any): N.EstreeProperty | N.EstreeMethodDefinition);\n      const paramCount = prop.kind === \"get\" ? 0 : 1;\n      const start = prop.start;\n      if (prop.value.params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      } else if (\n        prop.kind === \"set\" &&\n        prop.value.params[0].type === \"RestElement\"\n      ) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n      disallowLetBinding?: boolean,\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              bindingType,\n              checkClashes,\n              \"object destructuring pattern\",\n              disallowLetBinding,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(\n            expr,\n            bindingType,\n            checkClashes,\n            contextDescription,\n            disallowLetBinding,\n          );\n      }\n    }\n\n    checkDuplicatedProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if (\n        prop.type === \"SpreadElement\" ||\n        prop.computed ||\n        prop.method ||\n        // $FlowIgnore\n        prop.shorthand\n      ) {\n        return;\n      }\n\n      const key = prop.key;\n      // It is either an Identifier or a String/NumericLiteral\n      const name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n      if (name === \"__proto__\" && prop.kind === \"init\") {\n        // Store the first redefinition's position\n        if (protoRef.used) {\n          if (refExpressionErrors?.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          } else {\n            this.raise(key.start, Errors.DuplicateProto);\n          }\n        }\n\n        protoRef.used = true;\n      }\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      containsEsc: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, isLast: boolean) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedListDeep(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): void {\n      // ImportExpressions do not have an arguments array.\n      if (!exprList) {\n        return;\n      }\n\n      super.toReferencedListDeep(exprList, isParenthesizedExpr);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\nimport { lineBreak } from \"../util/whitespace\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function(prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      (this.state.value === \"of\" &&\n        !this.state.exprAllowed &&\n        prevType !== tt._function &&\n        prevType !== tt._class) ||\n      (this.state.value === \"yield\" && this.prodParam.hasYield)\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function(prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function() {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function(prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function(prevType) {\n  if (prevType === tt.dot || prevType === tt.questionDot) {\n    // when function/class follows dot/questionDot, it is part of\n    // (optional)MemberExpression, then we don't need to push new token context\n  } else if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(\n      prevType === tt._return &&\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\ntt.star.updateContext = function() {\n  this.state.exprAllowed = false;\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in objec types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n        // We will parse a flow pragma in any comment before the first statement.\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n        return stmt;\n      }\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, noIn, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(noIn, undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssign();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n      containsEsc: boolean,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        refExpressionErrors,\n        containsEsc,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n\n      let specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      noIn?: ?boolean,\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              noIn,\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(() => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () =>\n              super.parseMaybeAssign(\n                noIn,\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              ),\n          );\n          arrowExpression.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(arrowExpression, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        const arrowExpression: ?N.ArrowFunctionExpression =\n          arrow.node?.type === \"ArrowFunctionExpression\" ? arrow.node : null;\n\n        if (!arrow.error && arrowExpression) return arrowExpression;\n\n        // If we are here, both JSX and Flow parsing attemps failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        noIn,\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadRelational(\"<\")) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function() {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function(prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  raise: raiseFunction;\n  inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b000, // Initial Parameter flags\n  PARAM_YIELD = 0b001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b010, // track [Await] production parameter\n  PARAM_RETURN = 0b100; // track [Return] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above. Note that the [In] parameter is\n// tracked in `noIn` argument of `parseExpression`.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = typeof PARAM | typeof PARAM_AWAIT | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  DeclareClassFieldHasInitializer:\n    \"'declare' class fields cannot have an initializer\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TemplateTypeHasSubstitution:\n    \"Template literal types cannot have any substitution\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        !this.hasPrecedingLineBreak() &&\n        !this.match(tt.parenL) &&\n        !this.match(tt.parenR) &&\n        !this.match(tt.colon) &&\n        !this.match(tt.eq) &&\n        !this.match(tt.question) &&\n        !this.match(tt.bang)\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure:\n      //   No mandatory elements may follow optional elements\n      //   If there's a rest element, it must be at the end of the tuple\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        if (elementNode.type === \"TSOptionalType\") {\n          seenOptionalElement = true;\n        } else if (seenOptionalElement && elementNode.type !== \"TSRestType\") {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType {\n      // parses `...TsType[]`\n      if (this.match(tt.ellipsis)) {\n        const restNode: N.TsRestType = this.startNode();\n        this.next(); // skips ellipsis\n        restNode.typeAnnotation = this.tsParseType();\n        if (\n          this.match(tt.comma) &&\n          this.lookaheadCharCode() !== charCodes.rightSquareBracket\n        ) {\n          this.raiseRestNotLast(this.state.start);\n        }\n        return this.finishNode(restNode, \"TSRestType\");\n      }\n\n      const type = this.tsParseType();\n      // parses `TsType?`\n      if (this.eat(tt.question)) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        return this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      const templateNode = this.parseTemplate(false);\n      if (templateNode.expressions.length > 0) {\n        this.raise(\n          templateNode.expressions[0].start,\n          TSErrors.TemplateTypeHasSubstitution,\n        );\n      }\n      node.literal = templateNode;\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_TS_INTERFACE,\n        undefined,\n        \"typescript interface declaration\",\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsExpectThenParseType(tt.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssign();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n        undefined,\n        \"typescript enum declaration\",\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          BIND_TS_NAMESPACE,\n          null,\n          \"module or namespace declaration\",\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_LEXICAL,\n        undefined,\n        \"import equals declaration\",\n      );\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case tt._function:\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        case tt._class:\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to now how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        case tt._const:\n          if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n          }\n        // falls through\n        case tt._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n        case tt.name: {\n          const value = this.state.value;\n          if (value === \"global\") {\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          } else {\n            return this.tsParseDeclaration(nany, value, /* next */ true);\n          }\n        }\n      }\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              return this.parseTaggedTemplateExpression(\n                startPos,\n                startLoc,\n                base,\n                state,\n                typeArguments,\n              );\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n      noIn: ?boolean,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        } else {\n          node.importKind = \"value\";\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: { hadConstructor: boolean },\n      isStatic: boolean,\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member,\n        state,\n        isStatic,\n        constructorAllowsSuper,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          noIn,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, noIn, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (node.declare && this.match(tt.equal)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node));\n        case \"TSParameterProperty\":\n          return super.toAssignable(node);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression);\n          return node;\n        default:\n          return super.toAssignable(node);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(\n            expr.parameter,\n            bindingType,\n            checkClashes,\n            \"parameter property\",\n          );\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(\n            expr.expression,\n            bindingType,\n            checkClashes,\n            contextDescription,\n          );\n          return;\n        default:\n          super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          this.raise(expr.start, TSErrors.UnexpectedTypeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const firstParam = method.params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  inParameters: boolean = false;\n  maybeInArrowParameters: boolean = false;\n  // This flag is used to track async arrow head across function declarations.\n  // e.g. async (foo = function (await) {}) => {}\n  // When parsing `await` in this expression, `maybeInAsyncArrowHead` is true\n  // but `maybeInArrowParameters` is false\n  maybeInAsyncArrowHead: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  yieldPos: number = -1;\n  awaitPos: number = -1;\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  type: TokenType;\n  value: any;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    const thisTokEnd = this.state.pos;\n    skipWhiteSpace.lastIndex = thisTokEnd;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return thisTokEnd + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 ||\n          lineBreak.test(\n            this.input.slice(this.state.lastTokEnd, this.state.pos),\n          ))\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark && !this.state.inType) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (this.hasPlugin(\"numericSeparator\")) {\n        if (code === charCodes.underscore) {\n          const prev = this.input.charCodeAt(this.state.pos - 1);\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          } else if (\n            forbiddenSiblings.indexOf(prev) > -1 ||\n            forbiddenSiblings.indexOf(next) > -1 ||\n            Number.isNaN(next)\n          ) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n          }\n\n          // Ignore this _ character\n          ++this.state.pos;\n          continue;\n        }\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.underscore) {\n      this.expectPlugin(\"numericSeparator\", this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isNonOctalDecimalInt = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    let octal =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n    if (octal) {\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      }\n      if (/[89]/.test(this.input.slice(start, this.state.pos))) {\n        octal = false;\n        isNonOctalDecimalInt = true;\n      }\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !octal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !octal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) this.raise(start, \"Invalid number\");\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    // disallow numeric separators in non octal decimals and legacy octal likes\n    if (this.hasPlugin(\"numericSeparator\") && (octal || isNonOctalDecimalInt)) {\n      const underscorePos = this.input\n        .slice(start, this.state.pos)\n        .indexOf(\"_\");\n      if (underscorePos > 0) {\n        this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n      }\n    }\n\n    if (next === charCodes.underscore) {\n      this.expectPlugin(\"numericSeparator\", this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || octal || isNonOctalDecimalInt) {\n        this.raise(start, \"Invalid BigIntLiteral\");\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and \"n\" for BigInts\n    const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    const val = octal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictOctalLiteral);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return lineBreak.test(\n        this.input.slice(this.state.lastTokEnd, this.state.start),\n      );\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport * as charCodes from \"charcodes\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  isLookaheadRelational(op: \"<\" | \">\"): boolean {\n    const next = this.nextTokenStart();\n    if (this.input.charAt(next) === op) {\n      if (next + 1 === this.input.length) {\n        return true;\n      }\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== op.charCodeAt(0) && afterNext !== charCodes.equalsTo;\n    }\n    return false;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (\n      this.state.yieldPos !== -1 &&\n      (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)\n    ) {\n      this.raise(\n        this.state.yieldPos,\n        \"Yield cannot be used as name inside a generator function\",\n      );\n    }\n    if (this.state.awaitPos !== -1) {\n      this.raise(\n        this.state.awaitPos,\n        \"Await cannot be used as name inside an async function\",\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint)\n    );\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node) => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssign: (\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObj: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n  // NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n  // When this one is updated, please check if also that one needs to be updated.\n\n  toAssignable(node: Node): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (\n        parenthesized.type !== \"Identifier\" &&\n        parenthesized.type !== \"MemberExpression\"\n      ) {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(((parenthesized: any): Expression));\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop: Node, isLast: boolean) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(\n      false,\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObj(tt.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc || this.state.startLoc;\n    startPos = startPos || this.state.start;\n    left = left || this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  checkLVal(\n    expr: Expression,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?{ [key: string]: boolean },\n    contextDescription: string,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(expr.name, this.inModule)\n            : isStrictBindOnlyReservedWord(expr.name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            expr.name,\n          );\n        }\n\n        if (checkClashes) {\n          // we need to prefix this with an underscore for the cases where we have a key of\n          // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n          //\n          //   > var obj = Object.create(null);\n          //   undefined\n          //   > obj.__proto__\n          //   null\n          //   > obj.__proto__ = true;\n          //   true\n          //   > obj.__proto__\n          //   null\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            bindingType,\n            checkClashes,\n            \"object destructuring pattern\",\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              bindingType,\n              checkClashes,\n              \"array destructuring pattern\",\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          bindingType,\n          checkClashes,\n          \"assignment pattern\",\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          bindingType,\n          checkClashes,\n          \"rest element\",\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          bindingType,\n          checkClashes,\n          \"parenthesized expression\",\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // Check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  checkDuplicatedProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.computed ||\n      prop.kind ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : String(key.value);\n\n    if (name === \"__proto__\") {\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `noIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `noIn` is true, the production parameter [In] is not present.\n  //   Whenever [?In] appears in the right-hand sides of a production, we pass\n  //   `noIn` to the subroutine calls.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    noIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(noIn, refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(noIn, refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  parseMaybeAssign(\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield(noIn);\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      } else {\n        // The tokenizer will assume an expression is allowed after\n        // `yield`, but this isn't that kind of yield\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      noIn,\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (operator === \"??=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (operator === \"||=\" || operator === \"&&=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  parseMaybeConditional(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(noIn, refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    return this.parseConditional(\n      expr,\n      noIn,\n      startPos,\n      startLoc,\n      refNeedsArrowPos,\n    );\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    noIn: ?boolean,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n\n  parseExprOps(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (!noIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const operator = this.state.value;\n        if (operator === \"|>\" && this.state.inFSharpPipelineDirectBody) {\n          return left;\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = operator;\n        if (\n          operator === \"**\" &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const op = this.state.type;\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        } else if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec, noIn);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec, noIn),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec, noIn);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec, noIn);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n      noIn,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    } else if (this.state.type.prefix) {\n      const node = this.startNode();\n      const update = this.match(tt.incDec);\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (node.operator === \"throw\") {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (update) {\n        this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      } else if (this.state.strict && node.operator === \"delete\") {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          (arg.type === \"MemberExpression\" ||\n            arg.type === \"OptionalMemberExpression\") &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      return this.finishNode(\n        node,\n        update ? \"UpdateExpression\" : \"UnaryExpression\",\n      );\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(\n        this.finishNode(node, \"BindExpression\"),\n        startPos,\n        startLoc,\n        noCalls,\n      );\n    }\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n    const computed = this.eat(tt.bracketL);\n    if (\n      (optional && !this.match(tt.parenL) && !this.match(tt.backQuote)) ||\n      computed ||\n      this.eat(tt.dot)\n    ) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed\n        ? this.parseExpression()\n        : this.parseMaybePrivateName(true);\n      node.computed = computed;\n\n      if (node.property.type === \"PrivateName\") {\n        if (node.object.type === \"Super\") {\n          this.raise(startPos, Errors.SuperPrivateField);\n        }\n        this.classScope.usePrivateName(\n          node.property.id.name,\n          node.property.start,\n        );\n      }\n\n      if (computed) {\n        this.expect(tt.bracketR);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    } else if (!noCalls && this.match(tt.parenL)) {\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      this.next();\n\n      let node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (optional) {\n        node.optional = true;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(\n          tt.parenR,\n          state.maybeAsyncArrow,\n          base.type === \"Import\",\n          base.type !== \"Super\",\n          node,\n        );\n      }\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n\n        node = this.parseAsyncArrowFromCallExpression(\n          this.startNodeAt(startPos, startLoc),\n          node,\n        );\n        this.checkYieldAwaitInDefaultParams();\n        this.state.yieldPos = oldYieldPos;\n        this.state.awaitPos = oldAwaitPos;\n      } else {\n        this.toReferencedListDeep(node.arguments);\n\n        // We keep the old value if it isn't null, for cases like\n        //   (x = async(yield)) => {}\n        //\n        // Hi developer of the future :) If you are implementing generator\n        // arrow functions, please read the note below about \"await\" and\n        // verify if the same logic is needed for yield.\n        if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n        // Await is trickier than yield. When parsing a possible arrow function\n        // (e.g. something starting with `async(`) we don't know if its possible\n        // parameters will actually be inside an async arrow function or if it is\n        // a normal call expression.\n        // If it ended up being a call expression, if we are in a context where\n        // await expression are disallowed (and thus \"await\" is an identifier)\n        // we must be careful not to leak this.state.awaitPos to an even outer\n        // context, where \"await\" could not be an identifier.\n        // For example, this code is valid because \"await\" isn't directly inside\n        // an async function:\n        //\n        //     async function a() {\n        //       function b(param = async (await)) {\n        //       }\n        //     }\n        //\n        if (\n          (!this.isAwaitAllowed() && !oldMaybeInArrowParameters) ||\n          oldAwaitPos !== -1\n        ) {\n          this.state.awaitPos = oldAwaitPos;\n        }\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      return node;\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        startPos,\n        startLoc,\n        base,\n        state,\n      );\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseTaggedTemplateExpression(\n    startPos: number,\n    startLoc: Position,\n    base: N.Expression,\n    state: N.ParseSubscriptState,\n    typeArguments?: ?N.TsTypeParameterInstantiation,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (typeArguments) node.typeParameters = typeArguments;\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        this.expectPlugin(\"moduleAttributes\");\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      // we need to make sure that if this is an async arrow functions,\n      // that we don't allow inner parens inside the params\n      if (this.match(tt.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    // we found an async arrow function so let's not allow any inner parens\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        node = this.startNode();\n        this.next();\n        if (\n          this.match(tt.parenL) &&\n          !this.scope.allowDirectSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.SuperNotAllowed);\n        } else if (\n          !this.scope.allowSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.UnexpectedSuper);\n        }\n\n        if (\n          !this.match(tt.parenL) &&\n          !this.match(tt.bracketL) &&\n          !this.match(tt.dot)\n        ) {\n          this.raise(node.start, Errors.UnsupportedSuper);\n        }\n\n        return this.finishNode(node, \"Super\");\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        node = this.startNode();\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt._function) &&\n          !this.canInsertSemicolon()\n        ) {\n          const last = this.state.context.length - 1;\n          if (this.state.context[last] !== ct.functionStatement) {\n            // Since \"async\" is an identifier and normally identifiers\n            // can't be followed by expression, the tokenizer assumes\n            // that \"function\" starts a statement.\n            // Fixing it in the tokenizer would mean tracking not only the\n            // previous token (\"async\"), but also the one before to know\n            // its beforeExpr value.\n            // It's easier and more efficient to adjust the context here.\n            throw new Error(\"Internal error\");\n          }\n          this.state.context[last] = ct.functionExpression;\n\n          this.next();\n          return this.parseFunction(node, undefined, true);\n        } else if (\n          canBeArrow &&\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt.name) &&\n          !this.canInsertSemicolon()\n        ) {\n          const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n          const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n          const oldYieldPos = this.state.yieldPos;\n          const oldAwaitPos = this.state.awaitPos;\n          this.state.maybeInArrowParameters = true;\n          this.state.maybeInAsyncArrowHead = true;\n          this.state.yieldPos = -1;\n          this.state.awaitPos = -1;\n          const params = [this.parseIdentifier()];\n          this.expect(tt.arrow);\n          this.checkYieldAwaitInDefaultParams();\n          this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n          this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n          this.state.yieldPos = oldYieldPos;\n          this.state.awaitPos = oldAwaitPos;\n          // let foo = async bar => {};\n          this.parseArrowExpression(node, params, true);\n          return node;\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          this.parseArrowExpression(node, [id], false);\n          return node;\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        this.expectPlugin(\"doExpressions\");\n        const node = this.startNode();\n        this.next();\n        const oldLabels = this.state.labels;\n        this.state.labels = [];\n        node.body = this.parseBlock();\n        this.state.labels = oldLabels;\n        return this.finishNode(node, \"DoExpression\");\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          close,\n          true,\n          refExpressionErrors,\n          node,\n        );\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"TupleExpression\");\n      }\n      case tt.bracketL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          tt.bracketR,\n          true,\n          refExpressionErrors,\n          node,\n        );\n        if (!this.state.maybeInArrowParameters) {\n          // This could be an array pattern:\n          //   ([a: string, b: string]) => {}\n          // In this case, we don't have to call toReferencedList. We will\n          // call it, if needed, when we are sure that it is a parenthesized\n          // expression by calling toReferencedListDeep.\n          this.toReferencedList(node.elements);\n        }\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"ArrayExpression\");\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(close, false, true, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt.braceL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(tt.braceR, false, false, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt._function:\n        return this.parseFunctionExpression();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNew();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionExpression(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionExpression\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"function\");\n\n    if (this.prodParam.hasYield && this.eat(tt.dot)) {\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.expect(tt.dot);\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.expect(tt.parenL);\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssign(\n            false,\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.start;\n    const innerEndLoc = this.state.startLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n      for (const param of exprList) {\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    // We keep the old value if it isn't null, for cases like\n    //   (x = (yield)) => {}\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  parseNew(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"new\");\n\n    if (this.eat(tt.dot)) {\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObj<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parseObjectMember(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkDuplicatedProto(prop, propHash, refExpressionErrors);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  isAsyncProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      prop.key.name === \"async\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star)) &&\n      !this.hasPrecedingLineBreak()\n    );\n  }\n\n  parseObjectMember(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (!isPattern && !containsEsc && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.eat(tt.star);\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n    } else {\n      isAsync = false;\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      refExpressionErrors,\n      containsEsc,\n    );\n\n    return prop;\n  }\n\n  isGetterOrSetterMethod(prop: N.ObjectMethod, isPattern: boolean): boolean {\n    return (\n      !isPattern &&\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n      (this.isLiteralPropertyName() || // get foo() {}\n        this.match(tt.bracketL)) // get [\"string\"]() {}\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const start = method.start;\n    if (method.params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      method.params[method.params.length - 1].type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    containsEsc: boolean,\n  ): ?N.ObjectMethod {\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n\n    if (!containsEsc && this.isGetterOrSetterMethod(prop, isPattern)) {\n      if (isGenerator || isAsync) this.unexpected();\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      this.parseMethod(\n        prop,\n        /* isGenerator */ false,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n  }\n\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssign(false, refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    containsEsc: boolean,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) || this.match(tt.string) || this.match(tt.bigint)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    this.prodParam.enter(functionFlags(isAsync, false));\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              BIND_OUTSIDE,\n              undefined,\n              \"function name\",\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    // $FlowIssue\n    const nameHash: {} = Object.create(null);\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(\n        node.params[i],\n        BIND_VAR,\n        allowDuplicates ? null : nameHash,\n        \"function parameter list\",\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (allowEmpty && this.match(tt.comma)) {\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssign(\n        false,\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    if (this.match(tt.name)) {\n      name = this.state.value;\n    } else if (this.state.type.keyword) {\n      name = this.state.type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const context = this.state.context;\n      if (\n        (name === \"class\" || name === \"function\") &&\n        context[context.length - 1].token === \"function\"\n      ) {\n        context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(\n        name,\n        this.state.start,\n        !!this.state.type.keyword,\n        false,\n      );\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      }\n      if (\n        this.state.awaitPos === -1 &&\n        (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())\n      ) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsDisallowedInInitializer);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, Errors.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(noIn?: ?boolean): N.YieldExpression {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const pipelineStyle = this.checkSmartPipelineBodyStyle(childExpression);\n\n    this.checkSmartPipelineBodyEarlyErrors(\n      childExpression,\n      pipelineStyle,\n      startPos,\n    );\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      pipelineStyle,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (\n      pipelineStyle === \"PipelineTopicExpression\" &&\n      childExpression.type === \"SequenceExpression\"\n    ) {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    switch (pipelineStyle) {\n      case \"PipelineBareFunction\":\n        bodyNode.callee = childExpression;\n        break;\n      case \"PipelineBareConstructor\":\n        bodyNode.callee = childExpression.callee;\n        break;\n      case \"PipelineBareAwaitedFunction\":\n        bodyNode.callee = childExpression.argument;\n        break;\n      case \"PipelineTopicExpression\":\n        if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n          this.raise(startPos, Errors.PipelineTopicUnused);\n        }\n        bodyNode.expression = childExpression;\n        break;\n      default:\n        throw new Error(\n          `Internal @babel/parser error: Unknown pipeline style (${pipelineStyle})`,\n        );\n    }\n    return this.finishNode(bodyNode, pipelineStyle);\n  }\n\n  checkSmartPipelineBodyStyle(expression: N.Expression): N.PipelineStyle {\n    switch (expression.type) {\n      default:\n        return this.isSimpleReference(expression)\n          ? \"PipelineBareFunction\"\n          : \"PipelineTopicExpression\";\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number, noIn: ?boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n      noIn,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._export:\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis ||\n          nextTokenCharCode === charCodes.dot\n        ) {\n          break;\n        }\n\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next();\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseBindingAtom();\n        const simple = clause.param.type === \"Identifier\";\n        this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, BIND_LEXICAL, null, \"catch clause\");\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.unexpected();\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      \"variable declaration\",\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n\n    this.expect(tt.parenL);\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    this.state.strict = oldStrict;\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict?: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state = { hadConstructor: false };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    if (!oldStrict) {\n      this.state.strict = false;\n    }\n\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    } else if (containsEsc) {\n      throw this.unexpected();\n    }\n\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    constructorAllowsSuper: boolean,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic && this.parseClassMemberFromModifier(classBody, member)) {\n      // a class element named 'static'\n      return;\n    }\n\n    this.parseClassMemberWithIsStatic(\n      classBody,\n      member,\n      state,\n      isStatic,\n      constructorAllowsSuper,\n    );\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    isStatic: boolean,\n    constructorAllowsSuper: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassPropertyName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassPropertyName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassPropertyName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassPropertyName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassPropertyName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // Overridden in typescript.js\n  parseAccessModifier(): ?N.Accessibility {\n    return undefined;\n  }\n\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssign() : null;\n    this.semicolon();\n    this.prodParam.exit();\n\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    if (this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssign();\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      if (this.isContextual(\"async\")) {\n        const next = this.nextTokenStart();\n\n        // export async;\n        if (!this.isUnparsedContextual(next, \"function\")) {\n          this.unexpected(next, tt._function);\n        }\n      }\n\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssign();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if (value === \"async\" || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    return (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      this.isUnparsedContextual(next, \"from\")\n    );\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          this.checkDuplicateExports(specifier, specifier.exported.name);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            // check for keywords used as local names\n            this.checkReservedWord(\n              specifier.local.name,\n              specifier.local.start,\n              true,\n              false,\n            );\n            // check if export is defined\n            // $FlowIgnore\n            this.scope.checkLocalExport(specifier.local);\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (currentContextDecorators.length) {\n      const isClass =\n        node.declaration &&\n        (node.declaration.type === \"ClassDeclaration\" ||\n          node.declaration.type === \"ClassExpression\");\n      if (!node.declaration || !isClass) {\n        throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n      }\n      this.takeDecorators(node.declaration);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseIdentifier(true);\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseIdentifier(true)\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // Parses import declaration.\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-module-attributes\n    // parse module attributes if the next token is `with` or ignore and finish the ImportDeclaration node.\n    const attributes = this.maybeParseModuleAttributes();\n    if (attributes) {\n      node.attributes = attributes;\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      contextDescription,\n    );\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      // we are trying to parse a node which has the following syntax\n      // with type: \"json\"\n      // [with -> keyword], [type -> Identifier], [\":\" -> token for colon], [\"json\" -> StringLiteral]\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      // check if the value set to the module attribute is a string as we only allow string literals\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseIdentifier(true);\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      this.checkReservedWord(\n        specifier.imported.name,\n        specifier.start,\n        true,\n        true,\n      );\n      specifier.local = specifier.imported.__clone();\n    }\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      \"import specifier\",\n    );\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_SCOPE_OUTSIDE","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","stack","length","CommentsParser","addComment","comment","filename","loc","state","trailingComments","push","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","slice","innerComments","ErrorMessages","Object","freeze","ArgumentsDisallowedInInitializer","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidCodePoint","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","data","message","replace","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","value","bigInt","BigInt","String","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","initFunction","isAsync","checkDeclaration","checkGetterSetterParams","prop","paramCount","Errors","checkLVal","expr","bindingType","checkClashes","contextDescription","disallowLetBinding","forEach","checkDuplicatedProto","protoRef","refExpressionErrors","computed","shorthand","key","used","doubleProto","isValidDirective","parenthesized","stmtToDirective","parseBlockBody","allowDirectives","topLevel","directiveStatements","directives","map","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","tt","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","parseObjectMethod","isPattern","containsEsc","parseObjectProperty","toAssignable","toAssignableObjectExpressionProp","isLast","finishCallExpression","optional","callee","toReferencedListDeep","exprList","isParenthesizedExpr","parseExport","exported","specifiers","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","prodParam","hasYield","isIterator","braceIsBlock","statementParens","test","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","finishToken","val","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","scope","declareName","enter","bodyNode","parseImport","exit","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","noIn","refNeedsArrowPos","result","tryParse","error","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","indexOf","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","constructorAllowsSuper","parseClassMemberFromModifier","getTokenFromCode","charCodeAt","finishOp","readWord","isBinding","element","operator","trailingCommaPos","toReferencedList","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","arrowExpression","resetStartLocationFromNode","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","base","noCalls","parseCallExpressionArguments","abort","parseAsyncArrowWithTypeParameters","aborted","parseSubscript","subscriptState","isLookaheadRelational","optionalChainMember","stop","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","str","count","entity","substr","fromCodePoint","parseInt","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasReturn","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","DeclareClassFieldHasInitializer","DuplicateModifier","EmptyHeritageClauseType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TemplateTypeHasSubstitution","TypeAnnotationAfterAssign","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","getScopeHandler","tsIsIdentifier","tsNextTokenCanFollowModifier","hasPrecedingLineBreak","tsParseModifier","allowedModifiers","modifier","tsTryParse","bind","tsParseModifiers","modified","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","startNodeAtNode","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","restNode","tsParseType","lookaheadCharCode","raiseRestNotLast","optionalTypeNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","tsParseLiteralTypeNode","tsParseTemplateLiteralType","templateNode","parseTemplate","expressions","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tokenType","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsIsDeclarationStart","parseAssignableListItem","decorators","accessibility","parseAccessModifier","elt","pp","parameter","bodilessType","registerFunctionStatementId","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","args","parseExprOp","leftStartPos","leftStartLoc","minPrec","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","parseClassMemberWithIsStatic","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","equal","typeCast","ct","parseBindingAtom","parseMaybeDecoratorArguments","isInParens","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","parseClassBody","expectPlugin","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","Array","isArray","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","join","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","nextTokenStart","thisTokEnd","skip","setStrict","lastIndexOf","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_lt_gt","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","escaped","charAt","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isNonOctalDecimalInt","octal","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","n","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","UtilParser","addExtra","op","afterNext","isUnparsedContextual","nameStart","nameEnd","messageOrType","missingPlugin","expectOnePlugin","names","checkYieldAwaitInDefaultParams","fn","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","isLiteralPropertyName","ExpressionErrors","Node","parser","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","checkToRestConversion","arg","raiseTrailingCommaAfterRest","parseSpread","parseRestBinding","parseObj","close","closeCharCode","allowEmpty","elts","first","checkCommaAfterRest","parseDecorator","strictModeChanged","elem","ExpressionParser","getExpression","paramFlags","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","logical","coalesce","checkPipelineAtInfixOperator","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","parseExprSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseNoCallExpr","parseMaybePrivateName","classScope","usePrivateName","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","parseExprListItem","parseImportMetaProperty","parseFunction","oldLabels","parseExprList","ret","parseFunctionExpression","parseDecorators","parseNew","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenStart","metaProp","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","isRecord","propHash","create","parseObjectMember","isAsyncProp","isGetterOrSetterMethod","oldInPropertyName","generator","async","isExpression","oldInParameters","oldStrict","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","identifierName","reservedTest","delegate","childExpression","pipelineStyle","checkSmartPipelineBodyStyle","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","topicReferenceWasUsedInCurrentTopicContext","isSimpleReference","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","StatementParser","interpreter","parseInterpreterDirective","from","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","handler","clause","simple","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassPropertyName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","declarePrivateName","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","checkNames","isDefault","isFrom","nodes","parseNext","maybeParseModuleAttributes","attrs","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/visitor.js":{"lineLengths":[13,0,46,13,3,25,0,15,22,36,24,3,0,18,26,3,0,16,13,48,3,0,20,19,73,3,0,15,13,47,3,0,1,0,26,35],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/visitor.js"],"names":["Visitor","constructor","babel","_babel","nodeType","onBeforeNode","onIdentifierNode","onAfterNode"],"mappings":";;;;;;;AAAA,MAAMA,OAAN,CAAc;AAEZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAED,MAAIE,QAAJ,GAAe;AACb,WAAO,CAAE,YAAF,CAAP;AACD;;AAEDC,EAAAA,YAAY;AAAE;AAAc,GAC1B;AACD;;AAEDC,EAAAA,gBAAgB;AAAE;AAAoB,GACpC;AACD;;AAEDC,EAAAA,WAAW;AAAE;AAAc,GACzB;AACD;;AArBW","sourcesContent":["class Visitor {\n\n  constructor(babel) {\n    // console.log('Visitor(babel)')\n    this._babel = babel\n  }\n\n  get nodeType() {\n    return [ 'Identifier' ]\n  }\n  \n  onBeforeNode( /* state */ ) {\n    // console.log('Visitor.onBeforeNode(state)')\n  }\n\n  onIdentifierNode( /* path, state */ ) {\n    // console.log(`Visitor.onIdentifierNode('${path.node.name}', state)`)\n  }\n  \n  onAfterNode( /* state */ ) {\n    // console.log('Visitor.onAfterNode(state)')\n  }\n\n}\n\nexport { Visitor }"],"file":"visitor.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-invalid-import-type-error.js":{"lineLengths":[13,0,46,13,3,54,0,65,0,93,21,44,3,0,1,0,84,69],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/error/replace-visitor-invalid-import-type-error.js"],"names":["ReplaceVisitorInvalidImportTypeError","ReplaceVisitorError","constructor","type"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,oCAAN,SAAmDC,wCAAnD,CAAuE;AAErEC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAO,wBAAuBA,IAAK,IAAnC;AACD;;AAJoE","sourcesContent":["import { ReplaceVisitorError } from './replace-visitor-error.js'\n\nclass ReplaceVisitorInvalidImportTypeError extends ReplaceVisitorError {\n\n  constructor(type) {\n    super(`Invalid import type '${type}'.`)\n  }\n\n}\n\nexport { ReplaceVisitorInvalidImportTypeError }\n"],"file":"replace-visitor-invalid-import-type-error.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/replace/error/replace-visitor-error.js":{"lineLengths":[13,0,46,13,3,37,0,60,0,62,24,19,3,0,1,0,50,49],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/replace/error/replace-visitor-error.js"],"names":["ReplaceVisitorError","VisitorError","constructor","message"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,mBAAN,SAAkCC,0BAAlC,CAA+C;AAE7CC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACD;;AAJ4C","sourcesContent":["import { VisitorError } from '../../error/visitor-error.js'\n\nclass ReplaceVisitorError extends VisitorError {\n\n  constructor(message) {\n    super(message)\n  }\n\n}\n\nexport { ReplaceVisitorError }\n"],"file":"replace-visitor-error.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/distributable/library/error/visitor-error.js":{"lineLengths":[13,0,46,13,3,30,0,34,24,19,3,0,1,0,36,41],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace/source/library/error/visitor-error.js"],"names":["VisitorError","Error","constructor","message"],"mappings":";;;;;;;AAAA,MAAMA,YAAN,SAA2BC,KAA3B,CAAiC;AAE/BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACD;;AAJ8B","sourcesContent":["class VisitorError extends Error {\n\n  constructor(message) {\n    super(message)\n  }\n\n}\n\nexport { VisitorError }\n"],"file":"visitor-error.js","sourceRoot":""},"url":null}}}